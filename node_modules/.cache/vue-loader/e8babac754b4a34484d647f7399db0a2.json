{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\composite\\channel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\composite\\channel.vue","mtime":1564803336205},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from \"vue\";\r\nimport {\r\n  getAllChannelList,\r\n  getChannelList,\r\n  addChannel,\r\n  updateChannel,\r\n  deleteChannel,\r\n  deleteSelectChannel\r\n} from \"@/api/orderList\";\r\nimport {\r\n  Pagination,\r\n  Button,\r\n  Popup,\r\n  NavBar,\r\n  Cell,\r\n  CellGroup,\r\n  DatetimePicker,\r\n  Picker,\r\n  Field,\r\n  Icon,\r\n  Toast,\r\n  ActionSheet,\r\n  Search\r\n} from \"vant\";\r\n\r\nVue.use(Pagination);\r\nVue.use(Button);\r\nVue.use(Popup);\r\nVue.use(NavBar);\r\nVue.use(Cell);\r\nVue.use(CellGroup);\r\nVue.use(DatetimePicker);\r\nVue.use(Picker);\r\nVue.use(Field);\r\nVue.use(Icon);\r\nVue.use(Toast);\r\nVue.use(ActionSheet);\r\nVue.use(Search);\r\n\r\nexport default {\r\n  name: \"composite-channel\",\r\n  data() {\r\n    return {\r\n      list: [],\r\n      nameInput: \"\",\r\n      formLabelWidth: \"120px\",\r\n      currentPage: 1, //当前页\r\n      mobileCurrentPage: 1,\r\n      pagesizes: [50, 100, 200], //单页最大显示条数\r\n      pagesize: 50, //单页内条数\r\n      listTotal: 0, //总数\r\n      device: \"\",\r\n      mobileSearchShow: false,\r\n      mobileSearchButtonLoading: false,\r\n      listLoading: false,\r\n      channelOptions: [],\r\n      editDialogVisible: false,\r\n      UpdateDialogVisible: false,\r\n      deleteDialogVisible: false,\r\n      deleteSelectDialogVisible: false,\r\n      form: {\r\n        parentChannel: \"\",\r\n        channelName: \"\"\r\n      },\r\n      updateForm: {\r\n        id: \"\",\r\n        name: \"\"\r\n      },\r\n      pageJumpIndex: 1,\r\n      nameMobileValue: \"\",\r\n      tableMaxHeight: 0,\r\n      multipleSelection: [],\r\n      deleteId: \"\",\r\n      deleteName: \"\",\r\n      idsStr: \"\",\r\n      namesStr: \"\",\r\n      childrenList: false,\r\n      childrenRow: {}\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n    this.device = this.$store.state.app.device;\r\n    this.getChannel();\r\n    this.getHeight();\r\n  },\r\n  computed: {\r\n    deviceVal() {\r\n      return this.$store.state.app.device;\r\n    }\r\n  },\r\n  watch: {\r\n    deviceVal(newVal, oldVal) {\r\n      this.device = newVal;\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取数据\r\n    getList() {\r\n      this.listLoading = true;\r\n      let orderList = [];\r\n      let paramsObj = {\r\n        contains: false,\r\n        page: this.currentPage,\r\n        rows: this.pagesize\r\n      };\r\n      this.nameInput != \"\" ? (paramsObj.name = this.nameInput) : \"\";\r\n      getAllChannelList(paramsObj)\r\n        .then(res => {\r\n          this.listTotal = res.data.total;\r\n          let tableList = res.data.rows;\r\n          tableList.forEach(tableItem => {\r\n            const { id, name } = tableItem;\r\n            const orderItem = { id: id, name: name };\r\n            orderList.push(orderItem);\r\n          });\r\n          this.list = orderList;\r\n        })\r\n        .catch(error => {});\r\n      setTimeout(() => {\r\n        this.listLoading = false;\r\n      }, 1000);\r\n    },\r\n    // 获取渠道列表\r\n    getChannel() {\r\n      getChannelList().then(res => {\r\n        const channelList = res.data;\r\n        channelList.forEach(channelItem => {\r\n          const channelObject = {\r\n            value: channelItem.id,\r\n            label: channelItem.name\r\n          };\r\n          this.channelOptions.push(channelObject);\r\n        });\r\n      });\r\n    },\r\n    // 表格高度自适应\r\n    getHeight() {\r\n      this.$nextTick(() => {\r\n        if (this.device === \"desktop\") {\r\n          this.tableMaxHeight =\r\n            document.body.offsetHeight -\r\n            (200 + this.$refs.filterBox.offsetHeight + 40 +18);\r\n        } else {\r\n          this.tableMaxHeight =\r\n            document.body.offsetHeight - (100 + 40 + 40 + 88 + 10);\r\n        }\r\n      });\r\n    },\r\n    // 选择表格尺寸\r\n    handleSizeChange(val) {\r\n      this.pagesize = val;\r\n      if (this.childrenList) {\r\n        this.getChildrenList();\r\n      } else {\r\n        this.getList();\r\n      }\r\n    },\r\n    // 选择表格当前页数\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      if (this.childrenList) {\r\n        this.getChildrenList();\r\n      } else {\r\n        this.getList();\r\n      }\r\n    },\r\n    // 单击复制\r\n    handleUseful(row, column, cell, event) {\r\n      if (this.device == \"mobile\") return;\r\n      if (this.clickFlag) {\r\n        clearTimeout(this.clickFlag);\r\n        this.clickFlag = null;\r\n      }\r\n      this.clickFlag = setTimeout(() => {\r\n        let count = 0;\r\n        if (column.label == undefined) return;\r\n        if (column.label == \"操作\") {\r\n          this.list.forEach(item => {\r\n            if (item.id == row.id) {\r\n            } else {\r\n              count++;\r\n            }\r\n          });\r\n        } else {\r\n          let copyText = event.target.innerText;\r\n          if (copyText != \"\") {\r\n            var inputElement = document.getElementById(\"copy_content\");\r\n            inputElement.value = copyText;\r\n            inputElement.select();\r\n            document.execCommand(\"Copy\");\r\n            this.$message({\r\n              message: \"复制成功\",\r\n              type: \"success\"\r\n            });\r\n          } else {\r\n            this.$message.error(\"复制失败，内容可能为空\");\r\n          }\r\n        }\r\n      }, 300);\r\n    },\r\n    // 单击选择行\r\n    handleSelect(rows, column, event) {\r\n      if (column.label == \"操作\") return;\r\n      this.$refs.channelTable.toggleRowSelection(rows);\r\n    },\r\n    // 选择改变\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    // 获取子渠道\r\n    getChildrenList(row) {\r\n      this.listLoading = true;\r\n      let orderList = [];\r\n      const { id, name } = this.childrenRow;\r\n      getAllChannelList({\r\n        parentId: id,\r\n        contains: false,\r\n        page: this.currentPage,\r\n        rows: this.pagesize\r\n      })\r\n        .then(res => {\r\n          this.listTotal = res.data.total;\r\n          let tableList = res.data.rows;\r\n          tableList.forEach(tableitem => {\r\n            const { id, name } = tableitem;\r\n            const orderItem = { id: id, name: name };\r\n            orderList.push(orderItem);\r\n          });\r\n          this.list = orderList;\r\n        })\r\n        .catch(error => {});\r\n      setTimeout(() => {\r\n        this.listLoading = false;\r\n      }, 1000);\r\n    },\r\n    // 双击查看\r\n    handleChildrenDetail(row, column, event) {\r\n      if (this.childrenList == true) return;\r\n      this.currentPage = 1;\r\n      this.childrenRow = row;\r\n      this.getChildrenList();\r\n      this.childrenList = true;\r\n    },\r\n    // 返回\r\n    handleReturn() {\r\n      this.childrenRow = {};\r\n      this.childrenList = false;\r\n      this.getList();\r\n    },\r\n    // 搜索\r\n    handleSearch() {\r\n      if (this.nameInput == \"\") {\r\n        this.$message.error(\"请输入名称\");\r\n        return;\r\n      }\r\n      this.getList();\r\n    },\r\n    // 新增\r\n    handleAdd() {\r\n      if (!this.editDialogVisible) {\r\n        this.editDialogVisible = true;\r\n      }\r\n    },\r\n    // 取消新增\r\n    handleEditCancel() {\r\n      if (this.editDialogVisible) {\r\n        this.editDialogVisible = false;\r\n      }\r\n    },\r\n    // 新增验证\r\n    addChannelVerify() {\r\n      const { channelName, parentChannel } = this.form;\r\n      if (channelName == \"\") {\r\n        this.$message.error(\"请填写渠道名\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 确认新增\r\n    handleEditConfirm() {\r\n      if (!this.addChannelVerify()) return;\r\n      const { channelName, parentChannel } = this.form;\r\n      addChannel({ parentId: parentChannel, name: channelName })\r\n        .then(res => {\r\n          if (res.status == 200) {\r\n            this.getList();\r\n            this.$message({\r\n              message: \"新增成功\",\r\n              type: \"success\"\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {});\r\n      this.editDialogVisible = false;\r\n    },\r\n    // 更新\r\n    handleUpdata(row) {\r\n      if (this.device == \"mobile\") return;\r\n      this.updateForm.id = row.id;\r\n      this.updateForm.name = row.name;\r\n      this.UpdateDialogVisible = true;\r\n    },\r\n    // 更新验证\r\n    updateVerify() {\r\n      const { id, name } = this.updateForm;\r\n      if (name == null || name == \"\") {\r\n        this.$message.error(\"请选择渠道\");\r\n        return false;\r\n      }\r\n      if (id == \"\") {\r\n        this.$message.error(\"请输入ID\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 确认更新\r\n    handleUpdateConfirm() {\r\n      if (!this.updateVerify()) return;\r\n      const { id, name } = this.updateForm;\r\n      updateChannel({ id: id, parentId: \"\", name: name })\r\n        .then(res => {\r\n          if (res.status == 200) {\r\n            this.getList();\r\n            this.$message({\r\n              message: \"更新成功\",\r\n              type: \"success\"\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {});\r\n      this.UpdateDialogVisible = false;\r\n    },\r\n    // 取消更新\r\n    handleUpdateCancel() {\r\n      if (this.UpdateDialogVisible) {\r\n        this.UpdateDialogVisible = false;\r\n      }\r\n    },\r\n    // 删除\r\n    handleDelete(row) {\r\n      this.deleteId = row.id;\r\n      this.deleteName = row.name;\r\n      if (!this.deleteDialogVisible) {\r\n        this.deleteDialogVisible = true;\r\n      }\r\n    },\r\n    // 确认删除\r\n    handleDeleteConfirm() {\r\n      deleteChannel({ id: this.deleteId }).then(res => {\r\n        if (res.status == 200) {\r\n          this.$message({\r\n            message: \"删除成功\",\r\n            type: \"success\"\r\n          }),\r\n            this.getList();\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n        this.deleteDialogVisible = false;\r\n      });\r\n    },\r\n    // 取消删除\r\n    handleDeleteCancel() {\r\n      this.deleteId = \"\";\r\n      this.deleteName = \"\";\r\n      if (this.deleteDialogVisible) {\r\n        this.deleteDialogVisible = false;\r\n      }\r\n    },\r\n    // 批量删除\r\n    handleDeleteSelect() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error(\"未选择任何渠道\");\r\n        return;\r\n      }\r\n      let ids = [];\r\n      let names = [];\r\n      this.multipleSelection.forEach(selectItem => {\r\n        ids.push(selectItem.id);\r\n        names.push(selectItem.name);\r\n      });\r\n      this.idsStr = ids.join(\",\");\r\n      this.namesStr = names.join(\",\");\r\n      if (!this.deleteSelectDialogVisible) {\r\n        this.deleteSelectDialogVisible = true;\r\n      }\r\n    },\r\n    // 确认批量删除\r\n    handleDeleteSelectConfirm() {\r\n      deleteSelectChannel({ ids: this.idsStr }).then(res => {\r\n        if (res.status == 200) {\r\n          this.$message({\r\n            message: \"删除成功\",\r\n            type: \"success\"\r\n          }),\r\n            this.getList();\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n        this.deleteSelectDialogVisible = false;\r\n      });\r\n    },\r\n    // 取消批量删除\r\n    handleDeleteSelectCancel() {\r\n      this.idsStr = \"\";\r\n      this.namesStr = \"\";\r\n      if (!this.deleteSelectDialogVisible) {\r\n        this.deleteSelectDialogVisible = false;\r\n      }\r\n    },\r\n\r\n    /* 移动端事件 */\r\n\r\n    // 获取数据\r\n    getMobileList() {\r\n      this.listLoading = true;\r\n      let orderList = [];\r\n      let paramsObj = {\r\n        contains: false,\r\n        page: this.mobileCurrentPage,\r\n        rows: this.pagesize\r\n      };\r\n      this.nameMobileValue != \"\" ? (paramsObj.name = this.nameMobileValue) : \"\";\r\n      getAllChannelList(paramsObj)\r\n        .then(res => {\r\n          this.listTotal = res.data.total;\r\n          let tableList = res.data.rows;\r\n          tableList.forEach(tableItem => {\r\n            const { id, name } = tableItem;\r\n            const orderItem = { id: id, name: name };\r\n            orderList.push(orderItem);\r\n          });\r\n\r\n          this.list = orderList;\r\n        })\r\n        .catch(error => {});\r\n      setTimeout(() => {\r\n        this.listLoading = false;\r\n      }, 1000);\r\n    },\r\n    //搜索\r\n    handleSearchMobile() {\r\n      if (!this.mobileSearchShow) {\r\n        this.mobileSearchShow = true;\r\n      }\r\n    },\r\n    //清空\r\n    handleSearchMobileClearAll() {\r\n      this.nameMobileValue == \"\" ? \"\" : (this.nameMobileValue = \"\");\r\n    },\r\n    //取消搜索\r\n    handleSearchMobileCancel() {\r\n      if (this.mobileSearchShow) {\r\n        this.mobileSearchShow = false;\r\n      }\r\n    },\r\n    // 开始搜索\r\n    handleMobileSearch() {\r\n      if (this.nameMobileValue == \"\") {\r\n        this.$message.error(\"请输入名称\");\r\n        return;\r\n      }\r\n      this.mobileSearchButtonLoading = true;\r\n      this.getMobileList();\r\n      this.mobileSearchButtonLoading = false;\r\n      this.mobileSearchShow = false;\r\n    },\r\n    // 分页器\r\n    handlePageChange() {\r\n      this.getMobileList();\r\n    },\r\n    // 限制页面跳转输入框只能输入数字\r\n    jumpPageInput() {\r\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\r\n    },\r\n    // 跳转指定页面\r\n    handleJumpPage() {\r\n      let jumpPage = parseInt(this.pageJumpIndex);\r\n      if (jumpPage == this.mobileCurrentPage) return;\r\n      if (jumpPage > Math.ceil(this.listTotal / this.pagesize)) {\r\n        jumpPage = Math.ceil(this.listTotal / this.pagesize);\r\n      }\r\n      if (jumpPage < 1) {\r\n        jumpPage = 1;\r\n      }\r\n      this.pageJumpIndex = jumpPage;\r\n      this.mobileCurrentPage = jumpPage;\r\n      this.getMobileList();\r\n    }\r\n  }\r\n};\r\n",null]}