{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system\\user.vue","mtime":1562236541218},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from \"vue\";\r\nimport {\r\n  getUserList,\r\n  deleteUser,\r\n  deleteSelectUser,\r\n  addUser,\r\n  addUserInquire,\r\n  updateUser,\r\n  updateUserInquired\r\n} from \"@/api/orderList\";\r\nimport {\r\n  Pagination,\r\n  Button,\r\n  Popup,\r\n  NavBar,\r\n  Cell,\r\n  CellGroup,\r\n  DatetimePicker,\r\n  Picker,\r\n  Field,\r\n  Icon,\r\n  Toast,\r\n  ActionSheet,\r\n  Search\r\n} from \"vant\";\r\n\r\nVue.use(Pagination);\r\nVue.use(Button);\r\nVue.use(Popup);\r\nVue.use(NavBar);\r\nVue.use(Cell);\r\nVue.use(CellGroup);\r\nVue.use(DatetimePicker);\r\nVue.use(Picker);\r\nVue.use(Field);\r\nVue.use(Icon);\r\nVue.use(Toast);\r\nVue.use(ActionSheet);\r\nVue.use(Search);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [],\r\n      usernameInput: \"\",\r\n      usefulValue: \"\",\r\n      usefulOptions: [\r\n        {\r\n          value: \"1\",\r\n          label: \"是\"\r\n        },\r\n        {\r\n          value: \"0\",\r\n          label: \"否\"\r\n        }\r\n      ],\r\n      usefulColumns: [\"是\", \"否\"],\r\n      formLabelWidth: \"120px\",\r\n      dialogTableVisible: false,\r\n      currentPage: 1, //当前页\r\n      pagesizes: [100, 200, 500], //单页最大显示条数\r\n      pagesize: 100, //单页内条数\r\n      device: \"\",\r\n      mobileSearchShow: false,\r\n      mobileSearchButtonLoading: false,\r\n      tableMaxHeight: 0,\r\n      addDialogVisible: false,\r\n      updateDialogVisible: false,\r\n      form: {\r\n        checkList: [],\r\n        username: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        telephone: \"\"\r\n      },\r\n      updateForm: {\r\n        checkList: [],\r\n        username: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        telephone: \"\",\r\n        mode: \"\"\r\n      },\r\n      permissionList: [],\r\n      updatePermissionList: [],\r\n      paramsStorage: {},\r\n      listLoading: false,\r\n      multipleSelection: [],\r\n      updateId: \"\",\r\n      checkAll: false,\r\n      isIndeterminate: false\r\n    };\r\n  },\r\n  created() {\r\n    this.list = this.getOrderList();\r\n    this.device = this.$store.state.app.device;\r\n    this.getHeight();\r\n  },\r\n  computed: {\r\n    deviceVal() {\r\n      return this.$store.state.app.device;\r\n    }\r\n  },\r\n  watch: {\r\n    deviceVal(newVal, oldVal) {\r\n      this.device = newVal;\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取表格列表\r\n    getOrderList() {\r\n      let orderList = [];\r\n      this.listLoading = true;\r\n      getUserList({ page: 1, rows: 500 }).then(res => {\r\n        const tableList = res.data.rows;\r\n        tableList.forEach(tableItem => {\r\n          const { id, username, name, telephone, mode } = tableItem;\r\n          const orderItem = {\r\n            id: id,\r\n            username: username,\r\n            name: name,\r\n            phoneNumber: telephone,\r\n            isUseful: mode\r\n          };\r\n          orderList.push(orderItem);\r\n        });\r\n      });\r\n      this.listLoading = false;\r\n      return orderList;\r\n    },\r\n    //表格高度自适应\r\n    getHeight() {\r\n      let otherHeight = this.device == \"desktop\" ? 250 : 200;\r\n      this.tableMaxHeight = window.innerHeight - otherHeight;\r\n    },\r\n    // 页面条数切换\r\n    handleSizeChange(val) {\r\n      this.listLoading = true;\r\n      setTimeout(() => {\r\n        this.pagesize = val;\r\n        this.listLoading = false;\r\n      }, 500);\r\n    },\r\n    //选择表格当前页数\r\n    handleCurrentChange(val) {\r\n      this.listLoading = true;\r\n      setTimeout(() => {\r\n        this.currentPage = val;\r\n        this.listLoading = false;\r\n      }, 500);\r\n    },\r\n    // 选择改变\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n    // 搜索\r\n    handleSearch() {\r\n      let searchList = [];\r\n      this.listLoading = true;\r\n      let name = this.usernameInput;\r\n      let isUseful = this.usefulValue;\r\n      let paramObj = {\r\n        page: 1,\r\n        rows: 500\r\n      };\r\n      name ? (paramObj.name = name) : \"\",\r\n        isUseful ? (paramObj.mode = isUseful) : \"\";\r\n      this.paramsStorage = paramObj;\r\n      getUserList(paramObj).then(res => {\r\n        const tableList = res.data.rows;\r\n        tableList.forEach(tableItem => {\r\n          const { id, username, name, telephone, mode } = tableItem;\r\n          const orderItem = {\r\n            id: id,\r\n            username: username,\r\n            name: name,\r\n            phoneNumber: telephone,\r\n            isUseful: mode\r\n          };\r\n          searchList.push(orderItem);\r\n        });\r\n      });\r\n      this.listLoading = false;\r\n      this.list = searchList;\r\n    },\r\n    // 新增\r\n    handleAdd() {\r\n      addUserInquire().then(res => {\r\n        this.permissionList = res.data;\r\n      });\r\n      this.addDialogVisible = true;\r\n    },\r\n    handleUpdateCheckListChange(value) {},\r\n    // 取消新增\r\n    handleAddCancel() {\r\n      this.addDialogVisible = false;\r\n    },\r\n    // 验证新增\r\n    addVerify() {\r\n      if (this.form.checkList.length === 0) {\r\n        this.$message.error(\"请选择一项角色\");\r\n        return false;\r\n      }\r\n      if (this.form.username == \"\") {\r\n        this.$message.error(\"请输入用户名\");\r\n        return false;\r\n      }\r\n      if (this.form.name == \"\") {\r\n        this.$message.error(\"请输入姓名\");\r\n        return false;\r\n      }\r\n      if (this.form.password == \"\") {\r\n        this.$message.error(\"请输入密码\");\r\n        return false;\r\n      }\r\n      if (this.form.telephone == \"\") {\r\n        this.$message.error(\"请输入手机号\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 确认新增\r\n    handleAddConfirm() {\r\n      if (!this.addVerify()) return;\r\n      this.listLoading = true;\r\n      let username = this.form.username;\r\n      let name = this.form.name;\r\n      let password = this.form.password;\r\n      let telephone = this.form.telephone;\r\n      let functionId = this.form.checkList.join(\",\");\r\n      addUser({\r\n        functionId: functionId,\r\n        username: username,\r\n        name: name,\r\n        password: password,\r\n        telephone: telephone\r\n      })\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.reloadPage();\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"添加用户成功\"\r\n            });\r\n          } else {\r\n            this.$message.error(\"添加失败\");\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      this.listLoading = false;\r\n      this.addDialogVisible = false;\r\n    },\r\n    // 全选\r\n    handleCheckAllChange(val) {\r\n      this.form.checkList = val ? [] : [];\r\n      this.isIndeterminate = false;\r\n    },\r\n    handleCheckedCitiesChange(val) {\r\n      let checkedCount = val.length;\r\n      this.checkAll = checkedCount === this.form.checkList.length;\r\n      this.isIndeterminate =\r\n        checkedCount > 0 && checkedCount < this.form.checkList.length;\r\n    },\r\n    // 更新\r\n    handleUpdata(rows) {\r\n      updateUserInquired({ id: rows.id }).then(res => {\r\n        console.log(res.data);\r\n        this.updatePermissionList = res.data.roleList;\r\n        this.updateForm.checkList = res.data.roles;\r\n        this.updateForm.username = res.data.user.username;\r\n        this.updateForm.name = res.data.user.name;\r\n        this.updateForm.telephone = res.data.user.telephone;\r\n        this.updateForm.password = res.data.user.password;\r\n        this.updateForm.mode = res.data.user.mode;\r\n        this.updateId = rows.id;\r\n        this.updateDialogVisible = true;\r\n      });\r\n    },\r\n    // 取消更新\r\n    handleUpdateCancel() {\r\n      this.updateDialogVisible = false;\r\n    },\r\n    // 验证更新\r\n    updateVerify() {\r\n      if (this.updateForm.checkList.length === 0) {\r\n        this.$message.error(\"请选择一项角色\");\r\n        return false;\r\n      }\r\n      if (this.updateForm.username == \"\") {\r\n        this.$message.error(\"请输入用户名\");\r\n        return false;\r\n      }\r\n      if (this.updateForm.name == \"\") {\r\n        this.$message.error(\"请输入姓名\");\r\n        return false;\r\n      }\r\n      if (this.updateForm.password == \"\") {\r\n        this.$message.error(\"请输入密码\");\r\n        return false;\r\n      }\r\n      if (this.updateForm.telephone == \"\") {\r\n        this.$message.error(\"请输入手机号\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 确认更新\r\n    handleUpdateConfirm() {\r\n      if (!this.updateVerify()) {\r\n        return;\r\n      }\r\n      this.listLoading = true;\r\n      let id = this.updateId;\r\n      let username = this.updateForm.username;\r\n      let name = this.updateForm.name;\r\n      let password = this.updateForm.password;\r\n      let telephone = this.updateForm.telephone;\r\n      let mode = this.updateForm.mode;\r\n      let functionId = this.updateForm.checkList.join(\",\");\r\n      updateUser({\r\n        id: id,\r\n        functionId: functionId,\r\n        username: username,\r\n        name: name,\r\n        password: password,\r\n        telephone: telephone,\r\n        mode: mode\r\n      })\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.reloadPage();\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"更新用户成功\"\r\n            });\r\n          } else {\r\n            this.$message.error(\"更新失败\");\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      this.listLoading = false;\r\n      this.updateDialogVisible = false;\r\n    },\r\n    // 删除\r\n    handleDelete(rows) {\r\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          this.listLoading = true;\r\n          deleteUser({ id: rows.id }).then(res => {\r\n            if (res.status === 200) {\r\n              this.reloadPage();\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"删除用户成功\"\r\n              });\r\n            } else {\r\n              this.$message.error(\"删除失败\");\r\n            }\r\n          });\r\n          this.listLoading = false;\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    // 批量删除\r\n    handleDeleteSelect() {\r\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          if (this.multipleSelection.length === 0) {\r\n            this.$message.error(\"未选择数据\");\r\n            return;\r\n          }\r\n          let ids = [];\r\n          this.multipleSelection.forEach(selectItem => {\r\n            ids.push(selectItem.id);\r\n          });\r\n          let idsStr = ids.join(\",\");\r\n          deleteSelectUser({ ids: idsStr }).then(res => {\r\n            if (res.status === 200) {\r\n              this.reloadPage();\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"批量删除用户成功\"\r\n              });\r\n            } else {\r\n              this.$message.error(\"删除失败\");\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\"\r\n          });\r\n        });\r\n    },\r\n    // 重载页面\r\n    reloadPage() {\r\n      if (JSON.stringify(this.paramsStorage) == \"{}\") {\r\n        this.list = this.getOrderList();\r\n      } else {\r\n        let searchList = [];\r\n        getUserList(this.paramsStorage).then(res => {\r\n          const tableData = res.data.rows;\r\n          tableData.forEach(tableItem => {\r\n            const { id, username, name, telephone, mode } = tableItem;\r\n            const orderItem = {\r\n              id: id,\r\n              username: username,\r\n              name: name,\r\n              phoneNumber: telephone,\r\n              isUseful: mode\r\n            };\r\n            searchList.push(orderItem);\r\n          });\r\n          this.list = searchList;\r\n        });\r\n      }\r\n    },\r\n\r\n    /* 移动端事件 */\r\n    //新增\r\n    handleSearchMobile() {},\r\n    //取消新增\r\n    handleAddMobileCancel() {},\r\n    //确认新增\r\n    handleMobileAdd() {},\r\n    //清空所选\r\n    handleSearchMobileClearAll() {},\r\n    //分页器改变\r\n    handlePageChange() {},\r\n    //返回列表\r\n    handleDetailCancel() {\r\n      this.mobileDetailShow = !this.mobileDetailShow;\r\n    }\r\n  }\r\n};\r\n",null]}