{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\longhuiteng\\longhuiteng-management-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\longhuiteng\\longhuiteng-management-system\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\longhuiteng\\longhuiteng-management-system\\src\\views\\login\\index.vue","mtime":1560335243913},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\longhuiteng\\longhuiteng-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\longhuiteng\\longhuiteng-management-system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\longhuiteng\\longhuiteng-management-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\longhuiteng\\longhuiteng-management-system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { validUsername } from \"@/utils/validate\";\nimport { clearTimeout, clearInterval } from \"timers\";\n\nexport default {\n  name: \"Login\",\n  data() {\n    // const validateUsername = (rule, value, callback) => {\n    //   if (!validUsername(value)) {\n    //     callback(new Error(\"请输入正确的用户名\"));\n    //   } else {\n    //     callback();\n    //   }\n    // };\n    const validatePassword = (rule, value, callback) => {\n      if (value.length < 6) {\n        callback(new Error(\"密码至少6位数\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        verifycode: \"\"\n      },\n      loginRules: {\n        // username: [\n        //   { required: true, trigger: \"blur\", validator: validateUsername }\n        // ],\n        password: [\n          { required: true, trigger: \"blur\", validator: validatePassword }\n        ],\n        verifycode: [{}]\n      },\n      loading: false,\n      passwordType: \"password\",\n      redirect: undefined,\n      timecount: 60,\n      verifyButtonText: \"获取验证码\",\n      verifycodeLoad: false\n    };\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    showPwd() {\n      if (this.passwordType === \"password\") {\n        this.passwordType = \"\";\n      } else {\n        this.passwordType = \"password\";\n      }\n      this.$nextTick(() => {\n        this.$refs.password.focus();\n      });\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$store\n            .dispatch(\"user/login\", this.loginForm)\n            .then(() => {\n              this.$router.push({ path: this.redirect || \"/\" });\n              this.loading = false;\n            })\n            .catch(() => {\n              this.loading = false;\n            });\n        } else {\n          console.log(\"出错了!!\");\n          return false;\n        }\n      });\n    },\n    handleGetVerifyCode() {\n      this.verifyButtonText = this.timecount + \"秒后重新获取\";\n      this.timecount = this.timecount - 1;\n      if(this.timecount == 0){\n        this.verifyButtonText = \"重新获取\";\n        this.timecount = 60;\n        return\n      }\n      setTimeout(this.handleGetVerifyCode, 1000);\n    }\n  }\n};\n",null]}