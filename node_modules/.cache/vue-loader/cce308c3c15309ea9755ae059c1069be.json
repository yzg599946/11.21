{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\integrated-management\\channel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\integrated-management\\channel.vue","mtime":1562063306352},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from \"vue\";\r\nimport {\r\n  getAllChannelList,\r\n  getChannelList,\r\n  addChannel,\r\n  updateChannel\r\n} from \"@/api/orderList\";\r\nimport {\r\n  Pagination,\r\n  Button,\r\n  Popup,\r\n  NavBar,\r\n  Cell,\r\n  CellGroup,\r\n  DatetimePicker,\r\n  Picker,\r\n  Field,\r\n  Icon,\r\n  Toast,\r\n  ActionSheet,\r\n  Search\r\n} from \"vant\";\r\n\r\nVue.use(Pagination);\r\nVue.use(Button);\r\nVue.use(Popup);\r\nVue.use(NavBar);\r\nVue.use(Cell);\r\nVue.use(CellGroup);\r\nVue.use(DatetimePicker);\r\nVue.use(Picker);\r\nVue.use(Field);\r\nVue.use(Icon);\r\nVue.use(Toast);\r\nVue.use(ActionSheet);\r\nVue.use(Search);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [],\r\n      nameInput: \"\",\r\n      formLabelWidth: \"120px\",\r\n      dialogTableVisible: false,\r\n      currentPage: 1, //当前页\r\n      pagesizes: [20, 40, 60, 80, 100], //单页最大显示条数\r\n      pagesize: 20, //单页内条数\r\n      device: \"\",\r\n      mobileSearchShow: false,\r\n      mobileSearchButtonLoading: false,\r\n      listLoading: false,\r\n      channelOptions: [],\r\n      editDialogVisible: false,\r\n      dialogTableVisible: false,\r\n      UpdateDialogVisible: false,\r\n      form: {\r\n        parentChannel: \"\",\r\n        channelName: \"\"\r\n      },\r\n      childrenChannelTitle: \"\",\r\n      childrenChannelList: [],\r\n      childrenCurrentPage: 1, //当前页\r\n      childrenPagesizes: [10, 20, 30, 40, 50], //单页最大显示条数\r\n      childrenPagesize: 10, //单页内条数\r\n      childrenListLoading: false,\r\n      updateForm: {\r\n        id: \"\",\r\n        name: \"\"\r\n      },\r\n      pageJumpIndex: 1,\r\n      nameMobileValue: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    this.list = this.getOrderList();\r\n    this.device = this.$store.state.app.device;\r\n    this.getChannel();\r\n  },\r\n  computed: {\r\n    deviceVal() {\r\n      return this.$store.state.app.device;\r\n    }\r\n  },\r\n  watch: {\r\n    deviceVal(newVal, oldVal) {\r\n      this.device = newVal;\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取表格列表\r\n    getOrderList() {\r\n      let orderList = [];\r\n      this.listLoading = true;\r\n      getAllChannelList({ contains: false, page: 1, rows: 50 }).then(res => {\r\n        let tableList = res.data.rows;\r\n        if (tableList.length === 0) {\r\n          this.listLoading = false;\r\n          return;\r\n        }\r\n        tableList.forEach(tableItem => {\r\n          const { id, name } = tableItem;\r\n          const orderItem = {\r\n            id: id,\r\n            name: name\r\n          };\r\n          orderList.push(orderItem);\r\n        });\r\n      });\r\n      this.listLoading = false;\r\n      return orderList;\r\n    },\r\n    // 获取渠道列表\r\n    getChannel() {\r\n      getChannelList().then(res => {\r\n        const channelList = res.data;\r\n        channelList.forEach(channelItem => {\r\n          const channelObject = {\r\n            value: channelItem.id,\r\n            label: channelItem.name\r\n          };\r\n          this.channelOptions.push(channelObject);\r\n        });\r\n      });\r\n    },\r\n    // 选择表格尺寸\r\n    handleSizeChange(val) {\r\n      this.listLoading = true;\r\n      setTimeout(() => {\r\n        this.pagesize = val;\r\n        this.listLoading = false;\r\n      }, 500);\r\n    },\r\n    // 选择表格当前页数\r\n    handleCurrentChange(val) {\r\n      this.listLoading = true;\r\n      setTimeout(() => {\r\n        this.currentPage = val;\r\n        this.listLoading = false;\r\n      }, 500);\r\n    },\r\n    // 双击查看\r\n    handleChildrenDetail(row, column, event) {\r\n      let orderList = [];\r\n      const { id, name } = row;\r\n      this.childrenChannelTitle = `${name}子渠道`;\r\n      getAllChannelList({\r\n        parentId: id,\r\n        contains: false,\r\n        page: 1,\r\n        rows: 50\r\n      })\r\n        .then(res => {\r\n          let tableList = res.data.rows;\r\n          tableList.forEach(tableitem => {\r\n            const { id, name } = tableitem;\r\n            const orderItem = { id: id, name: name };\r\n            orderList.push(orderItem);\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      this.childrenChannelList = orderList;\r\n      this.dialogTableVisible = true;\r\n    },\r\n    // 选择子渠道表格尺寸\r\n    handleChildrenSizeChange(val) {\r\n      this.childrenListLoading = true;\r\n      setTimeout(() => {\r\n        this.childrenPagesize = val;\r\n        this.childrenListLoading = false;\r\n      }, 500);\r\n    },\r\n    // 选择子渠道表格当前页数\r\n    handleChildrenCurrentChange(val) {\r\n      this.childrenListLoading = true;\r\n      setTimeout(() => {\r\n        this.childrenCurrentPage = val;\r\n        this.childrenListLoading = false;\r\n      }, 500);\r\n    },\r\n    // 搜索\r\n    handleSearch() {\r\n      let orderList = [];\r\n      const name = this.nameInput;\r\n      if (name == \"\") {\r\n        this.$message.error(\"请输入渠道名称\");\r\n        return;\r\n      }\r\n      this.listLoading = true;\r\n      getAllChannelList({\r\n        name: name,\r\n        contains: false,\r\n        page: 1,\r\n        rows: 50\r\n      })\r\n        .then(res => {\r\n          let tableList = res.data.rows;\r\n          if (tableList.length === 0) {\r\n            this.listLoading = false;\r\n            return;\r\n          }\r\n          tableList.forEach(tableItem => {\r\n            const { id, name } = tableItem;\r\n            const orderItem = { id: id, name: name };\r\n            orderList.push(orderItem);\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      this.listLoading = false;\r\n      this.list = orderList;\r\n    },\r\n    // 新增\r\n    handleAdd() {\r\n      if (!this.editDialogVisible) {\r\n        this.editDialogVisible = true;\r\n      }\r\n    },\r\n    // 取消新增\r\n    handleEditCancel() {\r\n      if (this.editDialogVisible) {\r\n        this.editDialogVisible = false;\r\n      }\r\n    },\r\n    // 新增验证\r\n    addChannelVerify() {\r\n      const { channelName, parentChannel } = this.form;\r\n      if (parentChannel == null || parentChannel == \"\") {\r\n        this.$message.error(\"请选择所属渠道\");\r\n        return false;\r\n      }\r\n      if (channelName == \"\") {\r\n        this.$message.error(\"请填写渠道名\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 确认新增\r\n    handleEditConfirm() {\r\n      if (!this.addChannelVerify()) return;\r\n      const { channelName, parentChannel } = this.form;\r\n      addChannel({ parentId: parentChannel, name: channelName })\r\n        .then(res => {\r\n          if (res.status == 200) {\r\n            this.$message({\r\n              message: \"新增成功\",\r\n              type: \"success\"\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      this.editDialogVisible = false;\r\n    },\r\n    // 更新\r\n    handleUpdata(row) {\r\n      if (this.device == \"mobile\") return;\r\n      this.updateForm.id = row.id;\r\n      this.updateForm.name = row.name;\r\n      this.UpdateDialogVisible = true;\r\n    },\r\n    // 更新验证\r\n    updateVerify() {\r\n      const { id, name } = this.updateForm;\r\n      if (name == null || name == \"\") {\r\n        this.$message.error(\"请选择渠道\");\r\n        return false;\r\n      }\r\n      if (id == \"\") {\r\n        this.$message.error(\"请输入ID\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 确认更新\r\n    handleUpdateConfirm() {\r\n      if (!this.updateVerify()) return;\r\n      const { id, name } = this.updateForm;\r\n      updateChannel({ id: id, parentId: \"\", name: name })\r\n        .then(res => {\r\n          if (res.status == 200) {\r\n            this.$message({\r\n              message: \"更新成功\",\r\n              type: \"success\"\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      this.UpdateDialogVisible = false;\r\n    },\r\n    // 取消更新\r\n    handleUpdateCancel() {\r\n      if (this.UpdateDialogVisible) {\r\n        this.UpdateDialogVisible = false;\r\n      }\r\n    },\r\n\r\n    /* 移动端事件 */\r\n\r\n    //搜索\r\n    handleSearchMobile() {\r\n      if (!this.mobileSearchShow) {\r\n        this.mobileSearchShow = true;\r\n      }\r\n    },\r\n    //清空\r\n    handleSearchMobileClearAll() {\r\n      this.nameMobileValue == \"\" ? \"\" : (this.nameMobileValue = \"\");\r\n    },\r\n    //取消搜索\r\n    handleSearchMobileCancel() {\r\n      if (this.mobileSearchShow) {\r\n        this.mobileSearchShow = false;\r\n      }\r\n    },\r\n    // 开始搜索\r\n    handleMobileSearch() {\r\n      let orderList = [];\r\n      const name = this.nameMobileValue;\r\n      if (name == \"\") {\r\n        this.$message.error(\"请输入渠道名称\");\r\n        this.mobileSearchShow = false;\r\n        return;\r\n      }\r\n      this.listLoading = true;\r\n      getAllChannelList({\r\n        name: name,\r\n        contains: false,\r\n        page: 1,\r\n        rows: 50\r\n      })\r\n        .then(res => {\r\n          let tableList = res.data.rows;\r\n          if (tableList.length === 0) {\r\n            this.listLoading = false;\r\n            return;\r\n          }\r\n          tableList.forEach(tableItem => {\r\n            const { id, name } = tableItem;\r\n            const orderItem = { id: id, name: name };\r\n            orderList.push(orderItem);\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n      this.listLoading = false;\r\n      this.mobileSearchShow = false;\r\n      this.list = orderList;\r\n    },\r\n    // 分页器\r\n    handlePageChange() {\r\n      this.listLoading = true;\r\n      setTimeout(() => {\r\n        this.listLoading = false;\r\n      }, 600);\r\n    },\r\n    // 限制页面跳转输入框只能输入数字\r\n    jumpPageInput() {\r\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\r\n    },\r\n    // 跳转指定页面\r\n    handleJumpPage() {\r\n      let jumpPage = parseInt(this.pageJumpIndex);\r\n      if (jumpPage == this.currentPage) return;\r\n      if (jumpPage > Math.ceil(this.list.length / this.pagesize)) {\r\n        jumpPage = Math.ceil(this.list.length / this.pagesize);\r\n      }\r\n      if (jumpPage < 1) {\r\n        jumpPage = 1;\r\n      }\r\n      this.listLoading = true;\r\n      setTimeout(() => {\r\n        this.pageJumpIndex = jumpPage;\r\n        this.currentPage = jumpPage;\r\n        this.listLoading = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n};\r\n",null]}