{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\components\\toutiaoTable\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\components\\toutiaoTable\\index.vue","mtime":1564802413754},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from \"vue\";\r\nimport { getStore } from \"@/utils/store\";\r\nimport XEUtils from \"xe-utils\";\r\nimport permission from \"@/directive/permission/index.js\"; // 权限判断指令\r\nimport { parseTime } from \"@/utils\";\r\nimport { setTimeout, clearTimeout } from \"timers\";\r\nimport {\r\n  getToutiaoOrderList,\r\n  editToutiaoUseful,\r\n  editToutiaoOrder,\r\n  getToutiaoOrderInfo,\r\n  getSalesmanList,\r\n  exportToutiaoExcel,\r\n  importJD,\r\n  getProductSelectList,\r\n  replaceDuplicates,\r\n  getProductList,\r\n  getPageInfoList\r\n} from \"@/api/orderList\";\r\nimport {\r\n  Pagination,\r\n  Button,\r\n  Popup,\r\n  NavBar,\r\n  Cell,\r\n  CellGroup,\r\n  DatetimePicker,\r\n  Picker,\r\n  Field,\r\n  Icon,\r\n  Toast,\r\n  ActionSheet,\r\n  Search\r\n} from \"vant\";\r\n\r\nVue.use(Pagination);\r\nVue.use(Button);\r\nVue.use(Popup);\r\nVue.use(NavBar);\r\nVue.use(Cell);\r\nVue.use(CellGroup);\r\nVue.use(DatetimePicker);\r\nVue.use(Picker);\r\nVue.use(Field);\r\nVue.use(Icon);\r\nVue.use(Toast);\r\nVue.use(ActionSheet);\r\nVue.use(Search);\r\n\r\nexport default {\r\n  name: \"toutiaoTable\",\r\n  props: [\"category\"],\r\n  directives: { permission },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: \"上月\",\r\n            onClick(picker) {\r\n              const start = new Date(\r\n                new Date().getFullYear(),\r\n                new Date().getMonth() - 1,\r\n                1\r\n              );\r\n              const end = new Date(\r\n                new Date().getFullYear(),\r\n                new Date().getMonth() - 1,\r\n                new Date(\r\n                  new Date().getFullYear(),\r\n                  new Date().getMonth(),\r\n                  0\r\n                ).getDate()\r\n              );\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      salemanOptions: [],\r\n      salesmanColumns: [],\r\n      accountOptions: [\r\n        {\r\n          value: \"瑞士劳斯宾腕表旗舰店\",\r\n          label: \"瑞士劳斯宾腕表旗舰店\"\r\n        },\r\n        {\r\n          value: \"LAOSIBIN隆辉腾专卖店\",\r\n          label: \"LAOSIBIN隆辉腾专卖店\"\r\n        },\r\n        {\r\n          value: \"瑞士劳斯宾品牌专卖店\",\r\n          label: \"瑞士劳斯宾品牌专卖店\"\r\n        },\r\n        {\r\n          value: \"杂货铺\",\r\n          label: \"杂货铺\"\r\n        },\r\n        {\r\n          value: \"凯迪表业\",\r\n          label: \"凯迪表业\"\r\n        }\r\n      ],\r\n      accountColumns: [\r\n        \"瑞士劳斯宾腕表旗舰店\",\r\n        \"LAOSIBIN隆辉腾专卖店\",\r\n        \"瑞士劳斯宾品牌专卖店\",\r\n        \"杂货铺\",\r\n        \"凯迪表业\"\r\n      ],\r\n      productOptions: [],\r\n      productColumns: [],\r\n      productAllOptions: [],\r\n      pageInfoOptions: [],\r\n      pageInfoColumns: [],\r\n      usefulOptions: [\r\n        {\r\n          value: \"0\",\r\n          label: \"无效单\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"有效单\"\r\n        }\r\n      ],\r\n      usefulColumns: [\"无效单\", \"有效单\"],\r\n      repeatOrderOptions: [\r\n        {\r\n          value: \"0\",\r\n          label: \"不重单\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"重单\"\r\n        }\r\n      ],\r\n      repeatOrderColumns: [\"不重单\", \"重单\"],\r\n      repeatNamePhoneOptions: [\r\n        {\r\n          value: \"0\",\r\n          label: \"不重复手机姓名\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"重复手机姓名\"\r\n        }\r\n      ],\r\n      repeatNamePhoneColumns: [\"不重复\", \"重复\"],\r\n      exportjdOptions: [\r\n        {\r\n          value: \"0\",\r\n          label: \"未导入\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"已导入\"\r\n        }\r\n      ],\r\n      exportJDColumns: [\"未导入\", \"已导入\"],\r\n      timeSelectValue: \"\",\r\n      salemanValue: \"\",\r\n      accountValue: \"\",\r\n      productValue: \"\",\r\n      packageAttributesValue: \"\",\r\n      usefulValue: \"\",\r\n      repeatOrderValue: \"\",\r\n      repeatNamePhoneValue: \"\",\r\n      exportjdValue: \"\",\r\n      nameInput: \"\",\r\n      phoneNumberInput: \"\",\r\n      minIdInput: \"\",\r\n      maxIdInput: \"\",\r\n      minPriceInput: \"\",\r\n      maxPriceInput: \"\",\r\n      formLabelWidth: \"120px\",\r\n      editDialogVisible: false,\r\n      form: {\r\n        productName: \"\",\r\n        name: \"\",\r\n        pageInfo: \"\",\r\n        num: \"\",\r\n        totalCost: \"\",\r\n        remark: \"\",\r\n        address: \"\"\r\n      },\r\n      currentEditID: 0,\r\n      downloadLoading: false,\r\n      listLoading: false,\r\n      currentPage: 1, //当前页\r\n      mobileCurrentPage: 1,\r\n      pagesizes: [300, 500, 1000, 5000], //单页最大显示条数\r\n      pagesize: 300, //单页内条数\r\n      listTotal: 0, //总数\r\n      salemanWidth: \"\",\r\n      importTypeDialogVisible: false,\r\n      multipleSelection: [],\r\n      clickFlag: null, // 单击定时器\r\n      mobileSearchShow: false,\r\n      mobileDatePickerShow: false,\r\n      mobileSalesmanPickerShow: false,\r\n      mobileAccountPickerShow: false,\r\n      mobileProductPickerShow: false,\r\n      mobilePageInfoPickerShow: false,\r\n      mobilePackageAttributesPickerShow: false,\r\n      mobileUsefulPickerShow: false,\r\n      mobileRepeatOrderPickerShow: false,\r\n      mobileRepeatNamePhonePickerShow: false,\r\n      mobileExportJDPickerShow: false,\r\n      minDate: new Date(1950, 10, 1),\r\n      maxDate: new Date(),\r\n      currentDate: new Date(),\r\n      minDateEnd: new Date(),\r\n      maxDateStart: new Date(),\r\n      timePickerStartValue: \"请选择\",\r\n      timePickerEndValue: \"请选择\",\r\n      salesmanMobileValue: \"请选择\",\r\n      channelMobileValue: \"请选择\",\r\n      accountMobileValue: \"请选择\",\r\n      productMobileValue: \"请选择\",\r\n      packageAttributesMobileValue: \"请选择\",\r\n      usefulMobileValue: \"请选择\",\r\n      repeatOrderMobileValue: \"请选择\",\r\n      repeatNamePhoneMobileValue: \"请选择\",\r\n      exportJDMobileValue: \"请选择\",\r\n      nameMobileValue: \"\",\r\n      pageInfoMobileValue: \"\",\r\n      phoneMobileValue: \"\",\r\n      minIdMobileValue: \"\",\r\n      maxIdMobileValue: \"\",\r\n      minPriceMobileValue: \"\",\r\n      maxPriceMobileValue: \"\",\r\n      device: \"\",\r\n      salesmanSearchValue: \"\",\r\n      productSearchValue: \"\",\r\n      pageInfoSearchValue: \"\",\r\n      accountSearchValue: \"\",\r\n      PackageAttributesSearchValue: \"\",\r\n      salesPickerCurrentSelect: 0,\r\n      channelPickerCurrentSelect: 0,\r\n      productPickerCurrentSelect: 0,\r\n      pageInfoPickerCurrentSelect: 0,\r\n      accountPickerCurrentSelect: 0,\r\n      packageAttributesPickerCurrentSelect: 0,\r\n      datetimePickerType: \"\",\r\n      mobileSearchButtonLoading: false,\r\n      tableMaxHeight: 0,\r\n      pageJumpIndex: 1,\r\n      contains: false,\r\n      jdSelect: [],\r\n      dialogFormVisible: false,\r\n      replaceForm: {\r\n        productType: \"\",\r\n        pageInfo: \"\"\r\n      },\r\n      exportType: \"1\",\r\n      transport: \"1\",\r\n      orderType: \"\",\r\n      orderName: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    this.device = this.$store.state.app.device;\r\n    window.addEventListener(\"resize\", this.getHeight);\r\n    this.$nextTick(() => {\r\n      if (this.device === \"desktop\") {\r\n        this.getList();\r\n        this.getProductList();\r\n        if (this.category == \"tt\") {\r\n          this.getPageInfo();\r\n        }\r\n      } else {\r\n        this.getMobileList();\r\n        this.getProductListMobile();\r\n        if (this.category == \"tt\") {\r\n          this.getPageInfoListMobile();\r\n          this.pageInfoMobileValue = \"请选择\";\r\n        }\r\n      }\r\n    });\r\n    this.getHeight();\r\n    this.getSalesman();\r\n    this.getProduct();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.getHeight);\r\n  },\r\n  computed: {\r\n    deviceVal() {\r\n      return this.$store.state.app.device;\r\n    }\r\n  },\r\n  watch: {\r\n    deviceVal(newVal, oldVal) {\r\n      this.device = newVal;\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取数据\r\n    getList() {\r\n      this.searchButtonLoading = true;\r\n      this.listLoading = true;\r\n      if (this.timeSelectValue == null) {\r\n        this.timeSelectValue = [\"\", \"\"];\r\n      } else {\r\n        this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\r\n      }\r\n      let paramsObj = {\r\n        contains: this.contains,\r\n        rows: this.pagesize,\r\n        page: this.currentPage\r\n      };\r\n      this.timeSelectValue[0]\r\n        ? (paramsObj.createTime = this.timeSelectValue[0])\r\n        : \"\";\r\n      this.timeSelectValue[1]\r\n        ? (paramsObj.createTimeEnd = this.timeSelectValue[1])\r\n        : \"\";\r\n      this.minIdInput ? (paramsObj.id = this.minIdInput) : \"\";\r\n      this.maxIdInput ? (paramsObj.idEnd = this.maxIdInput) : \"\";\r\n      this.repeatOrderValue ? (paramsObj.isRepeat = this.repeatOrderValue) : \"\";\r\n      this.usefulValue ? (paramsObj.mode = this.usefulValue) : \"\";\r\n      this.accountValue ? (paramsObj.text = this.accountValue) : \"\";\r\n      this.exportjdValue ? (paramsObj.isImport = this.exportjdValue) : \"\";\r\n      this.repeatNamePhoneValue\r\n        ? (paramsObj.isNameRepeat = this.repeatNamePhoneValue)\r\n        : \"\";\r\n      this.nameInput ? (paramsObj.name = this.nameInput) : \"\";\r\n      this.productValue ? (paramsObj.productId = this.productValue) : \"\";\r\n      this.phoneNumberInput\r\n        ? (paramsObj.telephone = this.phoneNumberInput)\r\n        : \"\";\r\n      this.minPriceInput ? (paramsObj.totalCost = this.minPriceInput) : \"\";\r\n      this.maxPriceInput ? (paramsObj.totalCostEnd = this.maxPriceInput) : \"\";\r\n      this.packageAttributesValue\r\n        ? (paramsObj.pageInfo = this.packageAttributesValue)\r\n        : \"\";\r\n      if (this.salemanValue.length > 0) {\r\n        paramsObj.uids = this.salemanValue.join(\",\");\r\n      }\r\n      if (this.orderType != \"\") {\r\n        paramsObj.order = this.orderType;\r\n        paramsObj.sort = this.orderName;\r\n      }\r\n      getToutiaoOrderList(this.category, paramsObj)\r\n        .then(res => {\r\n          this.listTotal = res.data.total;\r\n          this.list = res.data.rows;\r\n          this.listLoading = false;\r\n          this.$refs.orderTable.clearScroll();\r\n        })\r\n        .catch(error => {\r\n          this.listLoading = false;\r\n          this.$message.error(\"获取数据时出错\");\r\n        });\r\n    },\r\n    // 更改背景色\r\n    cellClassName({ row, rowIndex, column, columnIndex }) {\r\n      if (column.property === \"name\") {\r\n        if (row.repeatName == \"1\") {\r\n          return \"col-red\";\r\n        }\r\n      }\r\n      if (column.property === \"telephone\") {\r\n        if (row.repeatTelephone == \"1\") {\r\n          return \"col-red\";\r\n        }\r\n      }\r\n    },\r\n    // 获取业务员列表\r\n    getSalesman() {\r\n      let salesmanList = getStore({ name: \"salesmanList\" });\r\n      this.salemanOptions = JSON.parse(salesmanList);\r\n      let salesmanColumns = [];\r\n      this.salemanOptions.forEach(salesmanItem => {\r\n        salesmanColumns.push(salesmanItem.label);\r\n      });\r\n      this.salesmanColumns = salesmanColumns;\r\n    },\r\n    // 获取产品列表\r\n    getProduct() {\r\n      let productList = getStore({ name: \"productList\" });\r\n      this.productAllOptions = JSON.parse(productList);\r\n    },\r\n    // 表格高度自适应\r\n    getHeight() {\r\n      this.$nextTick(() => {\r\n        if (this.device === \"desktop\") {\r\n          this.tableMaxHeight =\r\n            document.body.offsetHeight -\r\n            (200 + this.$refs.filterBox.offsetHeight + 40 + 18);\r\n        } else {\r\n          this.tableMaxHeight =\r\n            document.body.offsetHeight - (100 + 40 + 40 + 86 + 10 + 37);\r\n        }\r\n      });\r\n    },\r\n    // 单击复制\r\n    handleUseful({ row, rowIndex, column, columnIndex }, event) {\r\n      if (this.device == \"mobile\") return;\r\n      if (this.clickFlag) {\r\n        clearTimeout(this.clickFlag);\r\n        this.clickFlag = null;\r\n      }\r\n      this.clickFlag = setTimeout(() => {\r\n        let count = 0;\r\n        if (column.title == undefined) return;\r\n        if (column.title == \"是否可用\") {\r\n          //判断权限\r\n          const roles = this.$store.getters && this.$store.getters.roles;\r\n          if (roles.indexOf(this.category + \"-list-mode\") == -1) {\r\n            return;\r\n          }\r\n          this.list.forEach(item => {\r\n            if (item.id == row.id) {\r\n              this.handleEditUseful({\r\n                id: row.id,\r\n                mode: this.list[count].mode\r\n              });\r\n            } else {\r\n              count++;\r\n            }\r\n          });\r\n        } else {\r\n          let copyText = event.target.innerText;\r\n          if (copyText != \"\") {\r\n            var inputElement = document.getElementById(\"copy_content\");\r\n            inputElement.value = copyText;\r\n            inputElement.select();\r\n            document.execCommand(\"Copy\");\r\n            this.$message({\r\n              message: \"复制成功\",\r\n              type: \"success\"\r\n            });\r\n          } else {\r\n            this.$message.error(\"复制失败，内容可能为空\");\r\n          }\r\n        }\r\n      }, 300);\r\n    },\r\n    // 修改可用状态\r\n    handleEditUseful(data) {\r\n      const { id, mode } = data;\r\n      let modeInt;\r\n      mode == 1 ? (modeInt = 0) : (modeInt = 1);\r\n      editToutiaoUseful(this.category, {\r\n        id: id,\r\n        mode: modeInt\r\n      })\r\n        .then(res => {\r\n          this.getList();\r\n          setTimeout(() => {\r\n            this.$message({\r\n              message: \"修改成功\",\r\n              type: \"success\"\r\n            });\r\n          }, 1000);\r\n        })\r\n        .catch(error => {\r\n          this.$message.error(\"修改失败\");\r\n        });\r\n    },\r\n    // 双击编辑\r\n    handleEdit({ row, rowIndex, column, columnIndex }, event) {\r\n      if (this.device == \"mobile\") return;\r\n      //判断权限\r\n      const roles = this.$store.getters && this.$store.getters.roles;\r\n      if (roles.indexOf(this.category + \"-list-update\") == -1) {\r\n        return;\r\n      }\r\n      if (this.clickFlag) {\r\n        clearTimeout(this.clickFlag);\r\n        this.clickFlag = null;\r\n      }\r\n      let timestamp = Date.parse(new Date());\r\n      let paramsObj = {\r\n        id: row.id,\r\n        _: timestamp\r\n      };\r\n      if (this.category == \"qtt\") {\r\n        paramsObj.text = \"watch\";\r\n      }\r\n      getToutiaoOrderInfo(this.category, paramsObj).then(res => {\r\n        this.form = res.data;\r\n        this.currentEditID = row.id;\r\n        this.editDialogVisible = true;\r\n      });\r\n    },\r\n    // 取消编辑\r\n    handleEditCancel() {\r\n      this.editDialogVisible = false;\r\n    },\r\n    // 确认编辑\r\n    handleEditConfirm(row, column, event) {\r\n      let count = 0;\r\n      this.list.forEach(item => {\r\n        if (item.id == this.currentEditID) {\r\n          const params = {\r\n            id: this.list[count].id,\r\n            productId: this.form.productId,\r\n            name: this.form.name,\r\n            pageInfo: this.form.pageInfo,\r\n            num: this.form.num,\r\n            totalCost: this.form.totalCost,\r\n            remark: this.form.remark,\r\n            address: this.form.address\r\n          };\r\n          editToutiaoOrder(this.category, params)\r\n            .then(res => {\r\n              this.getList();\r\n              setTimeout(() => {\r\n                this.$message({\r\n                  message: \"修改成功\",\r\n                  type: \"success\"\r\n                });\r\n              }, 1000);\r\n            })\r\n            .catch(error => {\r\n              this.$message.error(\"修改失败\");\r\n            });\r\n        } else {\r\n          count++;\r\n        }\r\n      });\r\n      this.editDialogVisible = false;\r\n    },\r\n    // 搜索验证\r\n    searchVerify() {\r\n      if (\r\n        (this.minIdInput && !this.maxIdInput) ||\r\n        (!this.minIdInput && this.maxIdInput)\r\n      ) {\r\n        this.$message({\r\n          message: \"未填写完整的ID范围\",\r\n          type: \"warning\"\r\n        });\r\n        return false;\r\n      }\r\n      if (\r\n        (this.minPriceInput && !this.maxPriceInput) ||\r\n        (!this.minPriceInput && this.maxPriceInput)\r\n      ) {\r\n        this.$message({\r\n          message: \"未填写完整的价格范围\",\r\n          type: \"warning\"\r\n        });\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    // 搜索\r\n    handleSearch() {\r\n      if (!this.searchVerify()) return;\r\n      this.searchButtonLoading = true;\r\n      this.getList();\r\n      this.searchButtonLoading = false;\r\n    },\r\n    // 清空搜索项\r\n    handleClearSearch() {\r\n      this.timeSelectValue = \"\";\r\n      this.salemanValue = [];\r\n      this.accountValue = \"\";\r\n      this.productValue = \"\";\r\n      this.nameInput = \"\";\r\n      this.phoneNumberInput = \"\";\r\n      this.usefulValue = \"\";\r\n      this.repeatOrderValue = \"\";\r\n      this.repeatNamePhoneValue = \"\";\r\n      this.exportjdValue = \"\";\r\n      this.minIdInput = \"\";\r\n      this.maxIdInput = \"\";\r\n      this.minPriceInput = \"\";\r\n      this.maxPriceInput = \"\";\r\n      this.packageAttributesValue = \"\";\r\n      this.salemanChange();\r\n    },\r\n    // 选择表格尺寸\r\n    handleSizeChange(val) {\r\n      this.pagesize = val;\r\n      this.getList();\r\n    },\r\n    //选择表格当前页数\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.getList();\r\n    },\r\n    // 导出excel\r\n    handleDownload() {\r\n      this.downloadLoading = true;\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error(\"未选择任何数据\");\r\n        this.downloadLoading = false;\r\n        return;\r\n      }\r\n\r\n      let ids = [];\r\n      this.multipleSelection.forEach(selectItem => {\r\n        ids.push(selectItem.id);\r\n      });\r\n      let idsStr = ids.join(\",\");\r\n      exportToutiaoExcel(this.category, {\r\n        ids: idsStr,\r\n        logistics: \"yd\"\r\n      }).then(res => {\r\n        const blob = new Blob([res], {\r\n          type: \"application/vnd.mx-excel;charset=utf-8\"\r\n        });\r\n        let myDate = new Date();\r\n        let year = myDate.getFullYear();\r\n        let month = myDate.getMonth() + 1;\r\n        let day = myDate.getDate();\r\n        var downloadElement = document.createElement(\"a\");\r\n        var href = window.URL.createObjectURL(blob); //创建下载的链接\r\n        downloadElement.href = href;\r\n        downloadElement.download = `订单 ${year}-${month}-${day}.xls`; //下载后文件名\r\n        document.body.appendChild(downloadElement);\r\n        downloadElement.click(); //点击下载\r\n        document.body.removeChild(downloadElement); //下载完成移除元素\r\n        window.URL.revokeObjectURL(href); //释放掉blob对象\r\n      });\r\n      this.downloadLoading = false;\r\n    },\r\n    // 业务员选择器宽度自适应\r\n    salemanChange() {\r\n      const inputWidth = 178; //选择器原始宽度 178px\r\n      let optionWidth = this.salemanValue.length * 65 + 97; //一个标签宽度65px 右边预留97px\r\n      this.salemanWidth =\r\n        optionWidth > inputWidth\r\n          ? \"width:\" + optionWidth + \"px\"\r\n          : \"width:\" + inputWidth + \"px\";\r\n      this.getProductList();\r\n      if (this.category == \"tt\") {\r\n        this.getPageInfo();\r\n      }\r\n    },\r\n    // 选择发生改变\r\n    handleSelectChange({ selection, checked, row, column }, event) {\r\n      this.multipleSelection = selection;\r\n    },\r\n    // 全选\r\n    handleSelectAll({ selection, checked }, event) {\r\n      this.multipleSelection = selection;\r\n    },\r\n    // 导出德邦\r\n    handleExportDB() {\r\n      this.downloadLoading = true;\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error(\"未选择任何数据\");\r\n        this.downloadLoading = false;\r\n        return;\r\n      }\r\n\r\n      let ids = [];\r\n      this.multipleSelection.forEach(selectItem => {\r\n        ids.push(selectItem.id);\r\n      });\r\n      let idsStr = ids.join(\",\");\r\n      exportToutiaoExcel(this.category, {\r\n        ids: idsStr,\r\n        logistics: \"deppon\"\r\n      }).then(res => {\r\n        const blob = new Blob([res], {\r\n          type: \"application/vnd.mx-excel;charset=utf-8\"\r\n        });\r\n        let myDate = new Date();\r\n        let year = myDate.getFullYear();\r\n        let month = myDate.getMonth() + 1;\r\n        let day = myDate.getDate();\r\n        var downloadElement = document.createElement(\"a\");\r\n        var href = window.URL.createObjectURL(blob); //创建下载的链接\r\n        downloadElement.href = href;\r\n        downloadElement.download = `订单 ${year}-${month}-${day}.xls`; //下载后文件名\r\n        document.body.appendChild(downloadElement);\r\n        downloadElement.click(); //点击下载\r\n        document.body.removeChild(downloadElement); //下载完成移除元素\r\n        window.URL.revokeObjectURL(href); //释放掉blob对象\r\n      });\r\n      this.downloadLoading = false;\r\n    },\r\n    // 批量导入京东\r\n    handleBatchImportIntoJD() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error(\"未选择任何数据\");\r\n      } else {\r\n        this.jdSelect = this.multipleSelection;\r\n        this.importTypeDialogVisible = true;\r\n      }\r\n    },\r\n    // 确认导入京东\r\n    handleExportJd() {\r\n      let ids = [];\r\n      this.jdSelect.forEach(item => {\r\n        ids.push(item.id);\r\n      });\r\n      let idsStr = ids.join(\",\");\r\n      importJD(this.category, {\r\n        ids: idsStr,\r\n        trans: this.transport,\r\n        type: this.exportType,\r\n        text: this.category\r\n      }).then(res => {\r\n        if (res.status === 200) {\r\n          this.$alert(res.msg, \"导入京东结果\", {\r\n            dangerouslyUseHTMLString: true\r\n          });\r\n        }\r\n      });\r\n      this.importTypeDialogVisible = false;\r\n    },\r\n    // 合计\r\n    footerMethod({ columns, data }) {\r\n      return [\r\n        columns.map((column, columnIndex) => {\r\n          if (columnIndex === 1) {\r\n            return \"合计\";\r\n          }\r\n          if ([\"num\", \"totalCost\"].includes(column.property)) {\r\n            return XEUtils.sum(data, column.property);\r\n          }\r\n          return \"-\";\r\n        })\r\n      ];\r\n    },\r\n    // 选择日期\r\n    handleChooseDate() {\r\n      this.getProductList();\r\n      if (this.category == \"tt\") {\r\n        this.getPageInfo();\r\n      }\r\n    },\r\n    // 获取产品\r\n    getProductList() {\r\n      this.productOptions = [];\r\n      let paramsObj = { channel: this.category };\r\n      if (this.timeSelectValue == null) {\r\n        this.timeSelectValue = [\"\", \"\"];\r\n      } else {\r\n        this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\r\n      }\r\n      this.timeSelectValue[0]\r\n        ? (paramsObj.createTime = this.timeSelectValue[0])\r\n        : \"\";\r\n      this.timeSelectValue[1]\r\n        ? (paramsObj.createTimeEnd = this.timeSelectValue[1])\r\n        : \"\";\r\n      this.packageAttributesValue\r\n        ? (paramsObj.packageAttributes = this.packageAttributesValue)\r\n        : \"\";\r\n      this.minIdInput ? (paramsObj.id = this.minIdInput) : \"\";\r\n      this.maxIdInput ? (paramsObj.idEnd = this.maxIdInput) : \"\";\r\n      this.repeatOrderValue ? (paramsObj.isRepeat = this.repeatOrderValue) : \"\";\r\n      this.usefulValue ? (paramsObj.mode = this.usefulValue) : \"\";\r\n      this.nameInput ? (paramsObj.name = this.nameInput) : \"\";\r\n      this.productValue ? (paramsObj.productId = this.productValue) : \"\";\r\n      this.phoneNumberInput\r\n        ? (paramsObj.telephone = this.phoneNumberInput)\r\n        : \"\";\r\n      this.minPriceInput ? (paramsObj.totalCost = this.minPriceInput) : \"\";\r\n      this.maxPriceInput ? (paramsObj.totalCostEnd = this.maxPriceInput) : \"\";\r\n      if (this.salemanValue.length > 0) {\r\n        paramsObj.uids = this.salemanValue.join(\",\");\r\n      }\r\n      getProductSelectList(paramsObj, this.category).then(res => {\r\n        const tableList = res.data;\r\n        let productList = [];\r\n        tableList.forEach(tableItem => {\r\n          const { name, id } = tableItem;\r\n          const productItem = { label: name, value: id };\r\n          productList.push(productItem);\r\n        });\r\n        this.productOptions = productList;\r\n      });\r\n    },\r\n    // 获取套餐属性\r\n    getPageInfo() {\r\n      this.pageInfoOptions = [];\r\n      let paramsObj = {};\r\n      if (this.timeSelectValue == null) {\r\n        this.timeSelectValue = [\"\", \"\"];\r\n      } else {\r\n        this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\r\n      }\r\n      this.timeSelectValue[0]\r\n        ? (paramsObj.createTime = this.timeSelectValue[0])\r\n        : \"\";\r\n      this.timeSelectValue[1]\r\n        ? (paramsObj.createTimeEnd = this.timeSelectValue[1])\r\n        : \"\";\r\n      this.packageAttributesValue\r\n        ? (paramsObj.packageAttributes = this.packageAttributesValue)\r\n        : \"\";\r\n      this.minIdInput ? (paramsObj.id = this.minIdInput) : \"\";\r\n      this.maxIdInput ? (paramsObj.idEnd = this.maxIdInput) : \"\";\r\n      this.repeatOrderValue ? (paramsObj.isRepeat = this.repeatOrderValue) : \"\";\r\n      this.usefulValue ? (paramsObj.mode = this.usefulValue) : \"\";\r\n      this.nameInput ? (paramsObj.name = this.nameInput) : \"\";\r\n      this.productValue ? (paramsObj.productId = this.productValue) : \"\";\r\n      this.phoneNumberInput\r\n        ? (paramsObj.telephone = this.phoneNumberInput)\r\n        : \"\";\r\n      this.minPriceInput ? (paramsObj.totalCost = this.minPriceInput) : \"\";\r\n      this.maxPriceInput ? (paramsObj.totalCostEnd = this.maxPriceInput) : \"\";\r\n      if (this.salemanValue.length > 0) {\r\n        paramsObj.uids = this.salemanValue.join(\",\");\r\n      }\r\n      getPageInfoList(paramsObj).then(res => {\r\n        const tableList = res.data;\r\n        let pageInfoList = [];\r\n        tableList.forEach(tableItem => {\r\n          const { pageInfo } = tableItem;\r\n          const pageInfoItem = { label: pageInfo, value: pageInfo };\r\n          pageInfoList.push(pageInfoItem);\r\n        });\r\n        this.pageInfoOptions = pageInfoList;\r\n      });\r\n    },\r\n    // 刷新\r\n    handleRefresh() {\r\n      this.getList();\r\n    },\r\n    // 替换重复项目\r\n    handleReplaceDuplicates() {\r\n      this.dialogFormVisible = true;\r\n    },\r\n    // 确认替换\r\n    handeleConfirmRepalce() {\r\n      if (this.replaceForm.productType == \"\") {\r\n        this.$message.error(\"请选择新产品型号!\");\r\n        return;\r\n      }\r\n      if (this.replaceForm.pageInfo == \"\") {\r\n        this.$message.error(\"请填写新套餐属性!\");\r\n        return;\r\n      }\r\n      if (this.timeSelectValue == null) {\r\n        this.timeSelectValue = [\"\", \"\"];\r\n      } else {\r\n        this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\r\n      }\r\n      let paramsObj = {};\r\n      this.timeSelectValue[0]\r\n        ? (paramsObj.createTime = this.timeSelectValue[0])\r\n        : \"\";\r\n      this.timeSelectValue[1]\r\n        ? (paramsObj.createTimeEnd = this.timeSelectValue[1])\r\n        : \"\";\r\n      this.repeatOrderValue\r\n        ? (paramsObj.isIpRepeat = this.repeatOrderValue)\r\n        : (paramsObj.isIpRepeat = 0);\r\n      this.usefulValue\r\n        ? (paramsObj.isNameRepeat = this.usefulValue)\r\n        : (paramsObj.isNameRepeat = 0);\r\n      this.productValue ? (paramsObj.productId = this.productValue) : \"\";\r\n      this.packageAttributesValue\r\n        ? (paramsObj.pageInfo = this.packageAttributesValue)\r\n        : \"\";\r\n      if (this.salemanValue.length > 0) {\r\n        paramsObj.uids = this.salemanValue.join(\",\");\r\n      }\r\n      paramsObj.newPageInfo = this.replaceForm.pageInfo;\r\n      paramsObj.newProductId = this.replaceForm.productType;\r\n      replaceDuplicates(this.category, paramsObj).then(res => {\r\n        if (res.status == 200) {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"替换成功\"\r\n          });\r\n        }\r\n        this.getList();\r\n        this.dialogFormVisible = false;\r\n      });\r\n    },\r\n    // 排序\r\n    handleSort(\r\n      {\r\n        triggerResizable,\r\n        triggerSort,\r\n        triggerFilter,\r\n        $rowIndex,\r\n        column,\r\n        columnIndex,\r\n        $columnIndex,\r\n        cell\r\n      },\r\n      event\r\n    ) {\r\n      if (column.title == \"产品名称\") {\r\n        if (this.orderType == \"\") {\r\n          this.orderType = \"asc\";\r\n        } else if (this.orderType == \"asc\") {\r\n          this.orderType = \"desc\";\r\n        } else {\r\n          this.orderType = \"\";\r\n        }\r\n        this.orderName = column.property;\r\n        this.getList();\r\n      }\r\n    },\r\n\r\n    /* 移动端事件 */\r\n\r\n    // 获取数据\r\n    getMobileList() {\r\n      this.listLoading = true;\r\n      let uids = [];\r\n\r\n      let paramsObj = {\r\n        contains: this.contains,\r\n        rows: 50,\r\n        page: this.mobileCurrentPage\r\n      };\r\n\r\n      this.timePickerStartValue == \"请选择\"\r\n        ? \"\"\r\n        : (paramsObj.createTime = this.timePickerStartValue.replace(\r\n            /\\//g,\r\n            \"-\"\r\n          ));\r\n      this.timePickerEndValue == \"请选择\"\r\n        ? \"\"\r\n        : (paramsObj.createTimeEnd = this.timePickerEndValue.replace(\r\n            /\\//g,\r\n            \"-\"\r\n          ));\r\n      if (this.productMobileValue != \"请选择\") {\r\n        this.productOptions.forEach(productItem => {\r\n          if (productItem.label == this.productMobileValue) {\r\n            paramsObj.productId = productItem.value;\r\n          }\r\n        });\r\n      }\r\n\r\n      if (this.salesmanMobileValue != \"请选择\") {\r\n        let salesmanArr;\r\n        if (this.salesmanMobileValue.length > 1) {\r\n          salesmanArr = this.salesmanMobileValue.split(\",\");\r\n          salesmanArr.forEach(salesmanItem => {\r\n            this.salemanOptions.forEach(optionItem => {\r\n              if (salesmanItem == optionItem.label) {\r\n                uids.push(optionItem.value);\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          this.salemanOptions.forEach(optionItem => {\r\n            if (optionItem.label == this.salesmanMobileValue) {\r\n              uids.push(optionItem.value);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (this.repeatOrderMobileValue != \"请选择\") {\r\n        this.repeatOrderMobileValue == \"重单\"\r\n          ? (paramsObj.isRepeat = 1)\r\n          : (paramsObj.isRepeat = 0);\r\n      }\r\n\r\n      if (this.usefulMobileValue != \"请选择\") {\r\n        this.usefulMobileValue == \"有效单\"\r\n          ? (paramsObj.mode = 1)\r\n          : (paramsObj.mode = 0);\r\n      }\r\n      if (this.exportJDMobileValue != \"请选择\") {\r\n        this.exportJDMobileValue == \"已导入\"\r\n          ? (paramsObj.isImport = 1)\r\n          : (paramsObj.isImport = 0);\r\n      }\r\n\r\n      if (this.repeatNamePhoneMobileValue != \"请选择\") {\r\n        this.repeatNamePhoneMobileValue == \"重复\"\r\n          ? (paramsObj.isNameRepeat = 1)\r\n          : (paramsObj.isNameRepeat = 0);\r\n      }\r\n\r\n      this.minIdMobileValue ? (paramsObj.id = this.minIdMobileValue) : \"\";\r\n      this.maxIdMobileValue ? (paramsObj.idEnd = this.maxIdMobileValue) : \"\";\r\n      this.nameMobileValue ? (paramsObj.name = this.nameMobileValue) : \"\";\r\n      this.phoneMobileValue\r\n        ? (paramsObj.telephone = this.phoneMobileValue)\r\n        : \"\";\r\n      this.minPriceMobileValue\r\n        ? (paramsObj.totalCost = this.minPriceMobileValue)\r\n        : \"\";\r\n      this.maxPriceMobileValue\r\n        ? (paramsObj.totalCostEnd = this.maxPriceMobileValue)\r\n        : \"\";\r\n      if (this.category == \"tt\") {\r\n        this.pageInfoMobileValue != \"请选择\"\r\n          ? (paramsObj.pageInfo = this.pageInfoMobileValue)\r\n          : \"\";\r\n      } else {\r\n        this.pageInfoMobileValue\r\n          ? (paramsObj.pageInfo = this.pageInfoMobileValue)\r\n          : \"\";\r\n      }\r\n      this.accountMobileValue != \"请选择\" ? (paramsObj.text = this.accountMobileValue) : \"\";\r\n      if (uids.length > 0) {\r\n        paramsObj.uids = uids.join(\",\");\r\n      }\r\n      getToutiaoOrderList(this.category, paramsObj)\r\n        .then(res => {\r\n          this.listTotal = res.data.total;\r\n          this.list = res.data.rows;\r\n          this.listLoading = false;\r\n          this.$refs.orderTable.bodyWrapper.scrollTop = 0;\r\n        })\r\n        .catch(error => {\r\n          this.listLoading = false;\r\n          this.$message.error(\"获取数据时出错\");\r\n        });\r\n    },\r\n    // 合计\r\n    getSummaries(param) {\r\n      const { columns, data } = param;\r\n      const sums = [];\r\n      columns.forEach((column, index) => {\r\n        if (index === 0) {\r\n          sums[index] = \"合计\";\r\n          return;\r\n        }\r\n        const values = data.map(item => Number(item[column.property]));\r\n        if (this.category == \"tt\") {\r\n          if (index === 7 || index === 8) {\r\n            sums[index] = values.reduce((prev, curr) => {\r\n              const value = Number(curr);\r\n              if (!isNaN(value)) {\r\n                return prev + curr;\r\n              } else {\r\n                return prev;\r\n              }\r\n            }, 0);\r\n          }\r\n        } else {\r\n          if (index === 7 || index === 6) {\r\n            sums[index] = values.reduce((prev, curr) => {\r\n              const value = Number(curr);\r\n              if (!isNaN(value)) {\r\n                return prev + curr;\r\n              } else {\r\n                return prev;\r\n              }\r\n            }, 0);\r\n          }\r\n        }\r\n      });\r\n      return sums;\r\n    },\r\n    // 更改背景色\r\n    mobileCellClassName({ row, column, rowIndex, columnIndex }) {\r\n      if (column.property === \"name\") {\r\n        if (row.repeatName == \"1\") {\r\n          return \"col-red\";\r\n        }\r\n      }\r\n      if (column.property === \"telephone\") {\r\n        if (row.repeatTelephone == \"1\") {\r\n          return \"col-red\";\r\n        }\r\n      }\r\n    },\r\n    // 分页器\r\n    handlePageChange() {\r\n      this.getMobileList();\r\n    },\r\n    // 点击搜索\r\n    handleSearchMobile() {\r\n      if (!this.mobileSearchShow) {\r\n        this.mobileSearchShow = true;\r\n      }\r\n    },\r\n    // 取消搜索\r\n    handleSearchMobileCancel() {\r\n      if (this.mobileSearchShow) {\r\n        this.mobileSearchShow = false;\r\n      }\r\n    },\r\n    // 清空所选\r\n    handleSearchMobileClearAll() {\r\n      this.timePickerStartValue == \"请选择\"\r\n        ? \"\"\r\n        : (this.timePickerStartValue = \"请选择\"),\r\n        this.timePickerEndValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.timePickerEndValue = \"请选择\"),\r\n        this.salesmanMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.salesmanMobileValue = \"请选择\"),\r\n        this.channelMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.accountMobileValue = \"请选择\"),\r\n        this.accountMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.productMobileValue = \"请选择\"),\r\n        this.usefulMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.usefulMobileValue = \"请选择\"),\r\n        this.repeatOrderMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.repeatOrderMobileValue = \"请选择\"),\r\n        this.repeatNamePhoneMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.repeatNamePhoneMobileValue = \"请选择\"),\r\n        this.exportJDMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.exportJDMobileValue = \"请选择\"),\r\n        this.nameMobileValue == \"\" ? \"\" : (this.nameMobileValue = \"\"),\r\n        this.pageInfoMobileValue == \"\" ? \"\" : (this.pageInfoMobileValue = \"\"),\r\n        this.phoneMobileValue == \"\" ? \"\" : (this.phoneMobileValue = \"\"),\r\n        this.maxIdMobileValue == \"\" ? \"\" : (this.maxIdMobileValue = \"\"),\r\n        this.minIdMobileValue == \"\" ? \"\" : (this.minIdMobileValue = \"\"),\r\n        this.maxPriceMobileValue == \"\" ? \"\" : (this.maxPriceMobileValue = \"\"),\r\n        this.minPriceMobileValue == \"\" ? \"\" : (this.minPriceMobileValue = \"\");\r\n    },\r\n    // 选择开始日期\r\n    handleChooseDateStartMobile() {\r\n      if (!this.mobileDatePickerShow) {\r\n        if (this.timePickerEndValue != \"请选择\") {\r\n          let maxDate_ = this.timePickerEndValue;\r\n          maxDate_ = maxDate_.replace(/-/g, \"/\");\r\n          let date = new Date(maxDate_);\r\n          this.maxDateStart = date;\r\n        }\r\n        this.datetimePickerType = \"start\";\r\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\r\n      }\r\n    },\r\n    // 选择结束日期\r\n    handleChooseDateEndMobile() {\r\n      if (!this.mobileDatePickerShow) {\r\n        if (this.timePickerStartValue != \"请选择\") {\r\n          let maxDate_ = this.timePickerStartValue;\r\n          maxDate_ = maxDate_.replace(/-/g, \"/\");\r\n          let date = new Date(maxDate_);\r\n          this.minDateEnd = date;\r\n        }\r\n        this.datetimePickerType = \"end\";\r\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\r\n      }\r\n    },\r\n    datetimePickerChange(e) {},\r\n    // 确认选择日期\r\n    datetimePickerConfirm(res) {\r\n      if (this.mobileDatePickerShow) {\r\n        if (this.datetimePickerType == \"start\") {\r\n          this.timePickerStartValue = res.toLocaleDateString();\r\n        } else {\r\n          this.timePickerEndValue = res.toLocaleDateString();\r\n        }\r\n        this.getProductListMobile();\r\n        if (this.category == \"tt\") {\r\n          this.getPageInfoListMobile();\r\n        }\r\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\r\n      }\r\n    },\r\n    // 取消选择日期\r\n    datetimePickerCancel() {\r\n      this.mobileDatePickerShow = !this.mobileDatePickerShow;\r\n    },\r\n    // 选择业务员\r\n    handleChooseSalesman() {\r\n      if (!this.mobileSalesmanPickerShow) {\r\n        this.mobileSalesmanPickerShow = !this.mobileSalesmanPickerShow;\r\n      }\r\n    },\r\n    getProductListMobile() {\r\n      let timeStartValue = \"\";\r\n      let timeEndValue = \"\";\r\n      let productId = \"\";\r\n      let uids = [];\r\n      let repeatOrder = \"\";\r\n      let usefulOrder = \"\";\r\n\r\n      this.timePickerStartValue == \"请选择\"\r\n        ? (timeStartValue = \"\")\r\n        : (timeStartValue = this.timePickerStartValue.replace(/\\//g, \"-\"));\r\n      this.timePickerEndValue == \"请选择\"\r\n        ? (timeEndValue = \"\")\r\n        : (timeEndValue = this.timePickerEndValue.replace(/\\//g, \"-\"));\r\n      if (this.productMobileValue != \"请选择\") {\r\n        this.productOptions.forEach(productItem => {\r\n          if (productItem.label == this.productMobileValue) {\r\n            productId = productItem.value;\r\n          }\r\n        });\r\n      } else {\r\n        productId = \"\";\r\n      }\r\n\r\n      if (this.salesmanMobileValue != \"请选择\") {\r\n        let salesmanArr;\r\n        if (this.salesmanMobileValue.length > 1) {\r\n          salesmanArr = this.salesmanMobileValue.split(\",\");\r\n          salesmanArr.forEach(salesmanItem => {\r\n            this.salemanOptions.forEach(optionItem => {\r\n              if (salesmanItem == optionItem.label) {\r\n                uids.push(optionItem.value);\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          this.salemanOptions.forEach(optionItem => {\r\n            if (optionItem.label == this.salesmanMobileValue) {\r\n              uids.push(optionItem.value);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (this.repeatOrderMobileValue != \"请选择\") {\r\n        this.repeatOrderMobileValue == \"重单\"\r\n          ? (repeatOrder = 1)\r\n          : (repeatOrder = 0);\r\n      } else {\r\n        repeatOrder = \"\";\r\n      }\r\n\r\n      if (this.usefulMobileValue != \"请选择\") {\r\n        this.usefulMobileValue == \"有效单\"\r\n          ? (usefulOrder = 1)\r\n          : (usefulOrder = 0);\r\n      } else {\r\n        usefulOrder = \"\";\r\n      }\r\n\r\n      let searchList = [];\r\n      let paramsObj = {\r\n        channel: this.category\r\n      };\r\n      timeStartValue ? (paramsObj.createTime = timeStartValue) : \"\";\r\n      timeEndValue ? (paramsObj.createTimeEnd = timeEndValue) : \"\";\r\n      this.channelValue ? (paramsObj.cid = this.channelValue) : \"\";\r\n      this.minIdMobileValue ? (paramsObj.id = this.minIdMobileValue) : \"\";\r\n      this.maxIdMobileValue ? (paramsObj.idEnd = this.maxIdMobileValue) : \"\";\r\n      repeatOrder ? (paramsObj.isRepeat = repeatOrder) : \"\";\r\n      usefulOrder ? (paramsObj.mode = usefulOrder) : \"\";\r\n      this.nameMobileValue ? (paramsObj.name = this.nameMobileValue) : \"\";\r\n      productId ? paramsObj.productId : \"\";\r\n      this.phoneMobileValue\r\n        ? (paramsObj.telephone = this.phoneMobileValue)\r\n        : \"\";\r\n      this.minPriceMobileValue\r\n        ? (paramsObj.totalCost = this.minPriceMobileValue)\r\n        : \"\";\r\n      this.maxPriceMobileValue\r\n        ? (paramsObj.totalCostEnd = this.maxPriceMobileValue)\r\n        : \"\";\r\n      this.pageInfoMobileValue\r\n        ? (paramsObj.pageInfo = this.pageInfoMobileValue)\r\n        : \"\";\r\n      if (uids.length > 0) {\r\n        paramsObj.uids = uids.join(\",\");\r\n      }\r\n      getProductSelectList(paramsObj, this.category).then(res => {\r\n        const tableList = res.data;\r\n        let productList = [];\r\n        let optionList = [];\r\n        tableList.forEach(tableItem => {\r\n          const { id, name } = tableItem;\r\n          productList.push(name);\r\n          optionList.push({ label: name, value: id });\r\n        });\r\n        this.productColumns = productList;\r\n        this.productOptions = optionList;\r\n      });\r\n    },\r\n    // 选择产品\r\n    handleChooseProduct() {\r\n      this.mobileProductPickerShow = !this.mobileProductPickerShow;\r\n    },\r\n    getPageInfoListMobile() {\r\n      let timeStartValue = \"\";\r\n      let timeEndValue = \"\";\r\n      let productId = \"\";\r\n      let uids = [];\r\n      let repeatOrder = \"\";\r\n      let usefulOrder = \"\";\r\n\r\n      this.timePickerStartValue == \"请选择\"\r\n        ? (timeStartValue = \"\")\r\n        : (timeStartValue = this.timePickerStartValue.replace(/\\//g, \"-\"));\r\n      this.timePickerEndValue == \"请选择\"\r\n        ? (timeEndValue = \"\")\r\n        : (timeEndValue = this.timePickerEndValue.replace(/\\//g, \"-\"));\r\n      if (this.productMobileValue != \"请选择\") {\r\n        this.productOptions.forEach(productItem => {\r\n          if (productItem.label == this.productMobileValue) {\r\n            productId = productItem.value;\r\n          }\r\n        });\r\n      } else {\r\n        productId = \"\";\r\n      }\r\n\r\n      if (this.salesmanMobileValue != \"请选择\") {\r\n        let salesmanArr;\r\n        if (this.salesmanMobileValue.length > 1) {\r\n          salesmanArr = this.salesmanMobileValue.split(\",\");\r\n          salesmanArr.forEach(salesmanItem => {\r\n            this.salemanOptions.forEach(optionItem => {\r\n              if (salesmanItem == optionItem.label) {\r\n                uids.push(optionItem.value);\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          this.salemanOptions.forEach(optionItem => {\r\n            if (optionItem.label == this.salesmanMobileValue) {\r\n              uids.push(optionItem.value);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (this.repeatOrderMobileValue != \"请选择\") {\r\n        this.repeatOrderMobileValue == \"重单\"\r\n          ? (repeatOrder = 1)\r\n          : (repeatOrder = 0);\r\n      } else {\r\n        repeatOrder = \"\";\r\n      }\r\n\r\n      if (this.usefulMobileValue != \"请选择\") {\r\n        this.usefulMobileValue == \"有效单\"\r\n          ? (usefulOrder = 1)\r\n          : (usefulOrder = 0);\r\n      } else {\r\n        usefulOrder = \"\";\r\n      }\r\n\r\n      let searchList = [];\r\n      let paramsObj = {};\r\n      timeStartValue ? (paramsObj.createTime = timeStartValue) : \"\";\r\n      timeEndValue ? (paramsObj.createTimeEnd = timeEndValue) : \"\";\r\n      this.channelValue ? (paramsObj.cid = this.channelValue) : \"\";\r\n      this.minIdMobileValue ? (paramsObj.id = this.minIdMobileValue) : \"\";\r\n      this.maxIdMobileValue ? (paramsObj.idEnd = this.maxIdMobileValue) : \"\";\r\n      repeatOrder ? (paramsObj.isRepeat = repeatOrder) : \"\";\r\n      usefulOrder ? (paramsObj.mode = usefulOrder) : \"\";\r\n      this.nameMobileValue ? (paramsObj.name = this.nameMobileValue) : \"\";\r\n      productId ? paramsObj.productId : \"\";\r\n      this.phoneMobileValue\r\n        ? (paramsObj.telephone = this.phoneMobileValue)\r\n        : \"\";\r\n      this.minPriceMobileValue\r\n        ? (paramsObj.totalCost = this.minPriceMobileValue)\r\n        : \"\";\r\n      this.maxPriceMobileValue\r\n        ? (paramsObj.totalCostEnd = this.maxPriceMobileValue)\r\n        : \"\";\r\n      this.pageInfoMobileValue\r\n        ? (paramsObj.pageInfo = this.pageInfoMobileValue)\r\n        : \"\";\r\n      if (uids.length > 0) {\r\n        paramsObj.uids = uids.join(\",\");\r\n      }\r\n      getPageInfoList(paramsObj).then(res => {\r\n        console.log(res);\r\n        const tableList = res.data;\r\n        let pageInfoList = [];\r\n        let optionList = [];\r\n        tableList.forEach(tableItem => {\r\n          const { pageInfo } = tableItem;\r\n          pageInfoList.push(pageInfo);\r\n          optionList.push({ label: pageInfo, value: pageInfo });\r\n        });\r\n        this.pageInfoColumns = pageInfoList;\r\n        this.pageInfoOptions = optionList;\r\n      });\r\n    },\r\n    // 选择套餐属性\r\n    handleChoosePageInfo() {\r\n      this.mobilePageInfoPickerShow = !this.mobilePageInfoPickerShow;\r\n    },\r\n    // 选择账户\r\n    handleChooseAccount() {\r\n      if (!this.mobileAccountPickerShow) {\r\n        this.mobileAccountPickerShow = !this.mobileAccountPickerShow;\r\n      }\r\n    },\r\n    // 选择是否有效\r\n    handleChooseIsUseful() {\r\n      if (!this.mobileUsefulPickerShow) {\r\n        this.mobileUsefulPickerShow = !this.mobileUsefulPickerShow;\r\n      }\r\n    },\r\n    // 选择是否重单\r\n    handleChooseIsRepeatOrder() {\r\n      if (!this.mobileRepeatOrderPickerShow) {\r\n        this.mobileRepeatOrderPickerShow = !this.mobileRepeatOrderPickerShow;\r\n      }\r\n    },\r\n    // 选择是否重复电话姓名\r\n    handleChooseIsRepeatPhoneName() {\r\n      if (!this.mobileRepeatNamePhonePickerShow) {\r\n        this.mobileRepeatNamePhonePickerShow = !this\r\n          .mobileRepeatNamePhonePickerShow;\r\n      }\r\n    },\r\n    // 选择是否导入京东\r\n    handleChooseExportJD() {\r\n      if (!this.mobileExportJDPickerShow) {\r\n        this.mobileExportJDPickerShow = !this.mobileExportJDPickerShow;\r\n      }\r\n    },\r\n    // 确认选择业务员\r\n    salesmanPickerConfirm(res) {\r\n      if (this.mobileSalesmanPickerShow) {\r\n        if (this.salesmanMobileValue == \"请选择\") {\r\n          this.salesmanMobileValue = res;\r\n        } else {\r\n          if (this.salesmanMobileValue.indexOf(\",\") != -1) {\r\n            let salesmanArr = new Array();\r\n            salesmanArr = this.salesmanMobileValue.split(\",\");\r\n            if (salesmanArr.indexOf(res) == -1) {\r\n              this.salesmanMobileValue = this.salesmanMobileValue + \",\" + res;\r\n            } else {\r\n              Toast(\"请勿重复选择\");\r\n            }\r\n          } else {\r\n            if (this.salesmanMobileValue != res) {\r\n              this.salesmanMobileValue = this.salesmanMobileValue + \",\" + res;\r\n            } else {\r\n              Toast(\"请勿重复选择\");\r\n            }\r\n          }\r\n        }\r\n        this.getProductListMobile();\r\n        if (this.category == \"tt\") {\r\n          this.getPageInfoListMobile();\r\n        }\r\n        this.mobileSalesmanPickerShow = !this.mobileSalesmanPickerShow;\r\n      }\r\n    },\r\n    // 确认选择账户\r\n    accountPickerConfirm(res) {\r\n      if (this.mobileAccountPickerShow) {\r\n        this.accountMobileValue = res;\r\n        this.mobileAccountPickerShow = !this.mobileAccountPickerShow;\r\n      }\r\n    },\r\n    // 确认选择产品\r\n    productPickerConfirm(res) {\r\n      if (this.mobileProductPickerShow) {\r\n        this.productMobileValue = res;\r\n        this.mobileProductPickerShow = !this.mobileProductPickerShow;\r\n      }\r\n    },\r\n    // 确认选择套餐属性\r\n    pageInfoPickerConfirm(res) {\r\n      if (this.mobilePageInfoPickerShow) {\r\n        this.pageInfoMobileValue = res;\r\n        this.mobilePageInfoPickerShow = !this.mobilePageInfoPickerShow;\r\n      }\r\n    },\r\n    // 确认选择是否有效\r\n    usefulPickerConfirm(res) {\r\n      if (this.mobileUsefulPickerShow) {\r\n        this.usefulMobileValue = res;\r\n        this.mobileUsefulPickerShow = !this.mobileUsefulPickerShow;\r\n      }\r\n    },\r\n    // 确认选择是否重单\r\n    repeatOrderPickerConfirm(res) {\r\n      if (this.mobileRepeatOrderPickerShow) {\r\n        this.repeatOrderMobileValue = res;\r\n        this.mobileRepeatOrderPickerShow = !this.mobileRepeatOrderPickerShow;\r\n      }\r\n    },\r\n    // 确认选择是否重复电话姓名\r\n    repeatNamePhonePickerConfirm(res) {\r\n      if (this.mobileRepeatNamePhonePickerShow) {\r\n        this.repeatNamePhoneMobileValue = res;\r\n        this.mobileRepeatNamePhonePickerShow = !this\r\n          .mobileRepeatNamePhonePickerShow;\r\n      }\r\n    },\r\n    // 确认选择是否导入京东\r\n    exportJDPickerConfirm(res) {\r\n      if (this.mobileExportJDPickerShow) {\r\n        this.exportJDMobileValue = res;\r\n        this.mobileExportJDPickerShow = !this.mobileExportJDPickerShow;\r\n      }\r\n    },\r\n    // 导入京东方式\r\n    mobileExportJDSelect(item) {\r\n      this.mobileExportJDDialogShow = false;\r\n      Toast.success(item.name + \"成功\");\r\n    },\r\n    // 取消导入京东\r\n    mobileExportJDCancel() {},\r\n    // 业务员快捷搜索\r\n    handleSearchSalesmanItem() {\r\n      this.salesPickerCurrentSelect = this.salesmanColumns.indexOf(\r\n        this.salesmanSearchValue\r\n      );\r\n    },\r\n    // 账户快捷搜索\r\n    handleSearchAccountItem() {\r\n      this.accountPickerCurrentSelect = this.accountColumns.indexOf(\r\n        this.accountSearchValue\r\n      );\r\n    },\r\n    // 产品快捷搜索\r\n    handleSearchProductItem() {\r\n      this.productPickerCurrentSelect = this.productColumns.indexOf(\r\n        this.productSearchValue\r\n      );\r\n    },\r\n    // 套餐属性快捷搜索\r\n    handleSearchPageInfoItem() {\r\n      this.pageInfoPickerCurrentSelect = this.pageInfoColumns.indexOf(\r\n        this.pageInfoSearchValue\r\n      );\r\n    },\r\n    // 开始搜索\r\n    handleMobileSearch() {\r\n      this.mobileSearchButtonLoading = true;\r\n      this.getMobileList();\r\n      this.mobileSearchButtonLoading = false;\r\n      this.mobileSearchShow = false;\r\n    },\r\n    // 限制页面跳转输入框只能输入数字\r\n    jumpPageInput() {\r\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\r\n    },\r\n    // 跳转指定页面\r\n    handleJumpPage() {\r\n      let jumpPage = parseInt(this.pageJumpIndex);\r\n      if (jumpPage == this.mobileCurrentPage) return;\r\n      if (jumpPage > Math.ceil(this.listTotal / 50)) {\r\n        jumpPage = Math.ceil(this.listTotal / 50);\r\n      }\r\n      if (jumpPage < 1) {\r\n        jumpPage = 1;\r\n      }\r\n      this.pageJumpIndex = jumpPage;\r\n      this.mobileCurrentPage = jumpPage;\r\n      this.getMobileList();\r\n    },\r\n    // 刷新\r\n    handleRefreshMobile() {\r\n      this.getMobileList();\r\n    }\r\n  }\r\n};\r\n",null]}