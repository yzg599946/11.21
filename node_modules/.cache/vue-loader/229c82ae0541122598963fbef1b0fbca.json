{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\login\\index.vue","mtime":1564535418105},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { validUsername } from \"@/utils/validate\";\r\nimport { getVerifyCode, sina } from \"@/api/user\";\r\nimport { clearTimeout, clearInterval } from \"timers\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value.length < 6) {\r\n        callback(new Error(\"密码至少6位数\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const validateUsername = (rule, value, callback) => {\r\n      if (value.length < 1) {\r\n        callback(new Error(\"请输入用户名\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const validateVerification = (rule, value, callback) => {\r\n      if (value.length < 1) {\r\n        callback(new Error(\"请输入验证码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        verification: \"\"\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          { required: true, trigger: \"blur\", validator: validateUsername }\r\n        ],\r\n        password: [\r\n          { required: true, trigger: \"blur\", validator: validatePassword }\r\n        ],\r\n        verification: [\r\n          { required: true, trigger: \"blur\", validator: validateVerification }\r\n        ]\r\n      },\r\n      loading: false,\r\n      passwordType: \"password\",\r\n      redirect: undefined,\r\n      timecount: 60,\r\n      verifyButtonText: \"获取验证码\",\r\n      verifyButtonFlag: false,\r\n      checkLogin: false,\r\n      checkLoginMsg: \"等待管理员确认中\"\r\n    };\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        this.redirect = route.query && route.query.redirect;\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  computed: {\r\n    checkLoginVal() {\r\n      return this.$store.getters.status;\r\n    }\r\n  },\r\n  watch: {\r\n    checkLoginVal(newVal, oldVal) {\r\n      this.checkLogin = newVal;\r\n    }\r\n  },\r\n  created() {\r\n    this.fastLogin();\r\n  },\r\n  methods: {\r\n    showPwd() {\r\n      if (this.passwordType === \"password\") {\r\n        this.passwordType = \"\";\r\n      } else {\r\n        this.passwordType = \"password\";\r\n      }\r\n      this.$nextTick(() => {\r\n        this.$refs.password.focus();\r\n      });\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          this.$store\r\n            .dispatch(\"user/login\", this.loginForm)\r\n            .then(() => {\r\n              // this.$router.push({ path: this.redirect || \"/\" });\r\n              this.$router.push({ path: \"/\" });\r\n              this.loading = false;\r\n            })\r\n            .catch(() => {\r\n              this.loading = false;\r\n            });\r\n        } else {\r\n          this.$message.error(\"请输入登陆信息\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    handleGetVerifyCode() {\r\n      if (this.loginForm.username == \"\") {\r\n        this.$message.error(\"请先输入用户名\");\r\n        return;\r\n      }\r\n      getVerifyCode({ username: this.loginForm.username });\r\n      this.time();\r\n    },\r\n    time() {\r\n      this.verifyButtonFlag = true;\r\n      this.verifyButtonText = this.timecount + \"秒后重新获取\";\r\n      this.timecount = this.timecount - 1;\r\n      if (this.timecount == 0) {\r\n        this.verifyButtonFlag = false;\r\n        this.verifyButtonText = \"点击重新获取\";\r\n        this.timecount = 60;\r\n        return;\r\n      }\r\n      setTimeout(this.time, 1000);\r\n    },\r\n    fastLogin() {\r\n      if (this.$store.getters.token) {\r\n        if (this.$store.getters.token.indexOf(\"true\") > -1) {\r\n          // if (this.$store.getters.loginStatus) {\r\n          this.$store.dispatch(\"user/fastLogin\", { index: \"fast\" }).then(() => {\r\n            this.$router.push({ path: \"/\" });\r\n          });\r\n          // }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n",null]}