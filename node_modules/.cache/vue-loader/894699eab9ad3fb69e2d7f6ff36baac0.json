{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\watch-management\\order.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\watch-management\\order.vue","mtime":1561973214077},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport orderTable from \"@/components/orderTable\";\r\nimport {\r\n  getOuterChainOrderWatch,\r\n  editOuterChainOrderWatch,\r\n  exportExcelWatch\r\n} from \"@/api/orderList\";\r\n\r\nexport default {\r\n  components: {\r\n    orderTable\r\n  },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      paramsStorage: {},\r\n      searchButtonFlag: false,\r\n      searchButtonMobileFlag: false,\r\n      mobileSearchShowFlag: false\r\n    };\r\n  },\r\n  created() {\r\n    this.list = this.getOrderList();\r\n  },\r\n  methods: {\r\n    // 获取列表\r\n    getOrderList() {\r\n      let orderList = [];\r\n      const contains = false;\r\n      const rows = 1000;\r\n      const page = 1;\r\n      getOuterChainOrderWatch({\r\n        contains: contains,\r\n        rows: rows,\r\n        page: page\r\n      }).then(res => {\r\n        const tableData = res.data.rows;\r\n        tableData.forEach(tableItem => {\r\n          const {\r\n            id,\r\n            cpName,\r\n            productName,\r\n            colorName,\r\n            username,\r\n            telephone,\r\n            totalCost,\r\n            pNum,\r\n            num,\r\n            price,\r\n            isRepeat,\r\n            address,\r\n            createTime,\r\n            remark,\r\n            mode,\r\n            name,\r\n            operator,\r\n            operatingTime\r\n          } = tableItem;\r\n          const orderItem = {\r\n            id: id,\r\n            channel: cpName,\r\n            productName: productName,\r\n            color: colorName,\r\n            name: name,\r\n            phoneNumber: telephone,\r\n            count: num,\r\n            price: totalCost,\r\n            repeatOrder: isRepeat,\r\n            address: address,\r\n            createTime: createTime,\r\n            remarks: remark,\r\n            isUseful: false,\r\n            logisticsState: mode,\r\n            salesman: username,\r\n            operator: operator,\r\n            nuclearOrderInterval: operatingTime\r\n          };\r\n          orderList.push(orderItem);\r\n        });\r\n      });\r\n      return orderList;\r\n    },\r\n    // 编辑\r\n    editConfirm(data) {\r\n      const {\r\n        id,\r\n        productId,\r\n        name,\r\n        color,\r\n        count,\r\n        price,\r\n        remarks,\r\n        address\r\n      } = data;\r\n      const params = {\r\n        id: id,\r\n        productId: productId,\r\n        name: name,\r\n        colorName: color,\r\n        num: count,\r\n        totalCost: price,\r\n        remark: remarks,\r\n        address: address\r\n      };\r\n      editOuterChainOrderWatch(params)\r\n        .then(res => {\r\n          this.reloadPage();\r\n          setTimeout(() => {\r\n            this.$message({\r\n              message: \"修改成功\",\r\n              type: \"success\"\r\n            });\r\n          }, 1000);\r\n        })\r\n        .catch(error => {\r\n          this.$message.error(\"修改失败\");\r\n          console.log(error);\r\n        });\r\n    },\r\n    // 搜索\r\n    clickToSearch(data) {\r\n      this.searchButtonFlag = true;\r\n      let searchList = [];\r\n      const contains = false;\r\n      const rows = 1000;\r\n      const page = 1;\r\n      const {\r\n        createTime,\r\n        createTimeEnd,\r\n        cid,\r\n        uid,\r\n        id,\r\n        idEnd,\r\n        isRepeat,\r\n        mode,\r\n        name,\r\n        productId,\r\n        telephone,\r\n        totalCost,\r\n        totalCostEnd\r\n      } = data;\r\n      let paramsObj = { contains: contains, rows: rows, page: page };\r\n      createTime ? (paramsObj.createTime = createTime) : \"\";\r\n      createTimeEnd ? (paramsObj.createTimeEnd = createTimeEnd) : \"\";\r\n      cid ? (paramsObj.cid = cid) : \"\";\r\n      id ? (paramsObj.id = id) : \"\";\r\n      idEnd ? (paramsObj.idEnd = idEnd) : \"\";\r\n      isRepeat ? (paramsObj.isRepeat = isRepeat) : \"\";\r\n      mode ? (paramsObj.mode = mode) : \"\";\r\n      name ? (paramsObj.name = name) : \"\";\r\n      productId ? (paramsObj.productId = productId) : \"\";\r\n      telephone ? (paramsObj.telephone = telephone) : \"\";\r\n      totalCost ? (paramsObj.totalCost = totalCost) : \"\";\r\n      totalCostEnd ? (paramsObj.totalCostEnd = totalCostEnd) : \"\";\r\n      if (uid.length > 0) {\r\n        let uidStr = uid.join(\",\");\r\n        paramsObj.uids = uidStr;\r\n      }\r\n      this.paramsStorage = paramsObj;\r\n      getOuterChainOrderWatch(paramsObj)\r\n        .then(res => {\r\n          const tableData = res.data.rows;\r\n          tableData.forEach(tableItem => {\r\n            const {\r\n              id,\r\n              cpName,\r\n              pid,\r\n              productName,\r\n              colorName,\r\n              username,\r\n              telephone,\r\n              totalCost,\r\n              pNum,\r\n              num,\r\n              price,\r\n              size,\r\n              isRepeat,\r\n              address,\r\n              createTime,\r\n              remark,\r\n              mode,\r\n              isImport,\r\n              name,\r\n              uid,\r\n              operator,\r\n              operatingTime\r\n            } = tableItem;\r\n            const orderItem = {\r\n              id: id,\r\n              channel: cpName,\r\n              pid: pid,\r\n              productName: productName,\r\n              color: colorName,\r\n              name: name,\r\n              phoneNumber: telephone,\r\n              count: num,\r\n              price: totalCost,\r\n              size: size,\r\n              repeatOrder: isRepeat,\r\n              address: address,\r\n              createTime: createTime,\r\n              remarks: remark,\r\n              isUseful: mode,\r\n              logisticsState: isImport,\r\n              salesman: username,\r\n              uid: uid,\r\n              operator: operator,\r\n              nuclearOrderInterval: operatingTime\r\n            };\r\n            searchList.push(orderItem);\r\n          });\r\n          this.list = searchList;\r\n          this.searchButtonFlag = false;\r\n        })\r\n        .catch(error => {\r\n          this.searchButtonFlag = false;\r\n          console.log(error);\r\n        });\r\n    },\r\n    clickToMobileSearchPage() {\r\n      this.mobileSearchShowFlag = true;\r\n    },\r\n    clickToCloseMobileSearchPage() {\r\n      this.mobileSearchShowFlag = false;\r\n    },\r\n    // 移动端搜索\r\n    clickToMobileSearch(data) {\r\n      this.searchButtonMobileFlag = true;\r\n      let searchList = [];\r\n      const contains = false;\r\n      const rows = 1000;\r\n      const page = 1;\r\n      const {\r\n        createTime,\r\n        createTimeEnd,\r\n        cid,\r\n        uids,\r\n        id,\r\n        idEnd,\r\n        isRepeat,\r\n        mode,\r\n        name,\r\n        productId,\r\n        telephone,\r\n        totalCost,\r\n        totalCostEnd\r\n      } = data;\r\n      let paramsObj = { contains: contains, rows: rows, page: page };\r\n      createTime ? (paramsObj.createTime = createTime) : \"\";\r\n      createTimeEnd ? (paramsObj.createTimeEnd = createTimeEnd) : \"\";\r\n      cid ? (paramsObj.cid = cid) : \"\";\r\n      id ? (paramsObj.id = id) : \"\";\r\n      idEnd ? (paramsObj.idEnd = idEnd) : \"\";\r\n      isRepeat ? (paramsObj.isRepeat = isRepeat) : \"\";\r\n      mode ? (paramsObj.mode = mode) : \"\";\r\n      name ? (paramsObj.name = name) : \"\";\r\n      productId ? paramsObj.productId : \"\";\r\n      telephone ? (paramsObj.telephone = telephone) : \"\";\r\n      totalCost ? (paramsObj.totalCost = totalCost) : \"\";\r\n      totalCostEnd ? (paramsObj.totalCostEnd = totalCostEnd) : \"\";\r\n      if (uids.length > 0) {\r\n        let uidStr = uids.join(\",\");\r\n        paramsObj.uids = uidStr;\r\n      }\r\n      this.paramsStorage = paramsObj;\r\n      getOuterChainOrderWatch(paramsObj)\r\n        .then(res => {\r\n          const tableData = res.data.rows;\r\n          tableData.forEach(tableItem => {\r\n            const {\r\n              id,\r\n              cpName,\r\n              pid,\r\n              productName,\r\n              colorName,\r\n              username,\r\n              telephone,\r\n              totalCost,\r\n              pNum,\r\n              num,\r\n              price,\r\n              size,\r\n              isRepeat,\r\n              address,\r\n              createTime,\r\n              remark,\r\n              mode,\r\n              isImport,\r\n              name,\r\n              uid,\r\n              operator,\r\n              operatingTime\r\n            } = tableItem;\r\n            const orderItem = {\r\n              id: id,\r\n              channel: cpName,\r\n              pid: pid,\r\n              productName: productName,\r\n              color: colorName,\r\n              name: name,\r\n              phoneNumber: telephone,\r\n              count: num,\r\n              price: totalCost,\r\n              size: size,\r\n              repeatOrder: isRepeat,\r\n              address: address,\r\n              createTime: createTime,\r\n              remarks: remark,\r\n              isUseful: mode,\r\n              logisticsState: isImport,\r\n              salesman: username,\r\n              uid: uid,\r\n              operator: operator,\r\n              nuclearOrderInterval: operatingTime\r\n            };\r\n            searchList.push(orderItem);\r\n          });\r\n          this.list = searchList;\r\n          this.searchButtonMobileFlag = false;\r\n          this.mobileSearchShowFlag = false;\r\n        })\r\n        .catch(error => {\r\n          this.searchButtonMobileFlag = false;\r\n          this.mobileSearchShowFlag = false;\r\n          console.log(error);\r\n        });\r\n    },\r\n    //修改可用状态\r\n    clickToChangeUseful(data) {\r\n      const { id, mode } = data;\r\n      let modeInt;\r\n      mode == 1 ? (modeInt = 0) : (modeInt = 1);\r\n      editUsefulCosmetic({\r\n        id: id,\r\n        mode: modeInt\r\n      })\r\n        .then(res => {\r\n          this.reloadPage();\r\n          setTimeout(() => {\r\n            this.$message({\r\n              message: \"修改成功\",\r\n              type: \"success\"\r\n            });\r\n          }, 1000);\r\n        })\r\n        .catch(error => {\r\n          this.$message.error(\"修改失败\");\r\n          console.log(error);\r\n        });\r\n    },\r\n    // 重载页面\r\n    reloadPage() {\r\n      if (this.paramsStorage === {}) {\r\n        this.list = this.getOrderList();\r\n      } else {\r\n        let searchList = [];\r\n        getOuterChainOrderWatch(this.paramsStorage).then(res => {\r\n          const tableData = res.data.rows;\r\n          tableData.forEach(tableItem => {\r\n            const {\r\n              id,\r\n              cpName,\r\n              pid,\r\n              productName,\r\n              colorName,\r\n              username,\r\n              telephone,\r\n              totalCost,\r\n              pNum,\r\n              num,\r\n              price,\r\n              size,\r\n              isRepeat,\r\n              address,\r\n              createTime,\r\n              remark,\r\n              mode,\r\n              isImport,\r\n              name,\r\n              uid,\r\n              operator,\r\n              operatingTime\r\n            } = tableItem;\r\n            const orderItem = {\r\n              id: id,\r\n              channel: cpName,\r\n              pid: pid,\r\n              productName: productName,\r\n              color: colorName,\r\n              name: name,\r\n              phoneNumber: telephone,\r\n              count: num,\r\n              price: totalCost,\r\n              size: size,\r\n              repeatOrder: isRepeat,\r\n              address: address,\r\n              createTime: createTime,\r\n              remarks: remark,\r\n              isUseful: mode,\r\n              logisticsState: isImport,\r\n              salesman: username,\r\n              uid: uid,\r\n              operator: operator,\r\n              nuclearOrderInterval: operatingTime\r\n            };\r\n            searchList.push(orderItem);\r\n          });\r\n          this.list = searchList;\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n",null]}