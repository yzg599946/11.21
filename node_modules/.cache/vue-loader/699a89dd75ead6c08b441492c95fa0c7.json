{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\composite\\bdpage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\composite\\bdpage.vue","mtime":1562831918732},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from \"vue\";\r\nimport {\r\n  getBaiduPage,\r\n  addBaiduPage,\r\n  getSalesmanList,\r\n  getProductList\r\n} from \"@/api/orderList\";\r\nimport {\r\n  Pagination,\r\n  Button,\r\n  Popup,\r\n  NavBar,\r\n  Cell,\r\n  CellGroup,\r\n  DatetimePicker,\r\n  Picker,\r\n  Field,\r\n  Icon,\r\n  Toast,\r\n  ActionSheet,\r\n  Search\r\n} from \"vant\";\r\n\r\nVue.use(Pagination);\r\nVue.use(Button);\r\nVue.use(Popup);\r\nVue.use(NavBar);\r\nVue.use(Cell);\r\nVue.use(CellGroup);\r\nVue.use(DatetimePicker);\r\nVue.use(Picker);\r\nVue.use(Field);\r\nVue.use(Icon);\r\nVue.use(Toast);\r\nVue.use(ActionSheet);\r\nVue.use(Search);\r\n\r\nexport default {\r\n  name: \"composite-bdpage\",\r\n  data() {\r\n    return {\r\n      list: [],\r\n      formLabelWidth: \"120px\",\r\n      dialogTableVisible: false,\r\n      currentPage: 1, //当前页\r\n      mobileCurrentPage: 1,\r\n      pagesizes: [50, 100, 200], //单页最大显示条数\r\n      pagesize: 50, //单页内条数\r\n      listTotal: 0, //总数\r\n      device: \"\",\r\n      mobileSearchShow: false,\r\n      mobileSearchButtonLoading: false,\r\n      listLoading: false,\r\n      pageJumpIndex: 1,\r\n      form: {\r\n        pageId: \"\",\r\n        salesman: \"\",\r\n        product: \"\",\r\n        price: \"\"\r\n      },\r\n      editDialogVisible: false,\r\n      salemanOptions: [],\r\n      productOptions: [],\r\n      tableMaxHeight: 0\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n    this.device = this.$store.state.app.device;\r\n    this.getSalesman();\r\n    this.getProduct();\r\n    this.getHeight();\r\n  },\r\n  computed: {\r\n    deviceVal() {\r\n      return this.$store.state.app.device;\r\n    }\r\n  },\r\n  watch: {\r\n    deviceVal(newVal, oldVal) {\r\n      this.device = newVal;\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取数据\r\n    getList() {\r\n      this.listLoading = true;\r\n      let orderList = [];\r\n      getBaiduPage({ page: this.currentPage, rows: this.pagesize }).then(\r\n        res => {\r\n          let tableList = res.data.rows;\r\n          tableList.forEach(tableItem => {\r\n            this.listTotal = res.data.total;\r\n            const { pageId, price, productId, uid } = tableItem;\r\n            const orderItem = {\r\n              page: pageId,\r\n              account: uid,\r\n              product: productId,\r\n              price: price\r\n            };\r\n            orderList.push(orderItem);\r\n          });\r\n          this.list = orderList;\r\n        }\r\n      );\r\n      setTimeout(() => {\r\n        this.listLoading = false;\r\n      }, 500);\r\n    },\r\n    // 获取业务员列表\r\n    getSalesman() {\r\n      getSalesmanList().then(res => {\r\n        const salesmanList = res.data;\r\n        salesmanList.forEach(salesmanItem => {\r\n          const salesmanObject = {\r\n            value: salesmanItem.id,\r\n            label: salesmanItem.name\r\n          };\r\n          this.salemanOptions.push(salesmanObject);\r\n        });\r\n      });\r\n    },\r\n    // 获取产品列表\r\n    getProduct() {\r\n      getProductList().then(res => {\r\n        const productList = res.data;\r\n\r\n        productList.forEach(productItem => {\r\n          const productObject = {\r\n            value: productItem.id,\r\n            label: productItem.name\r\n          };\r\n          this.productOptions.push(productObject);\r\n        });\r\n      });\r\n    },\r\n    // 表格高度自适应\r\n    getHeight() {\r\n      let otherHeight = this.device == \"desktop\" ? 250 : 200;\r\n      this.tableMaxHeight = window.innerHeight - otherHeight;\r\n    },\r\n    // 选择表格尺寸\r\n    handleSizeChange(val) {\r\n      this.pagesize = val;\r\n      this.getList();\r\n    },\r\n    // 选择表格当前页数\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.getList();\r\n    },\r\n    // 新增\r\n    handleAdd() {\r\n      if (!this.editDialogVisible) {\r\n        this.editDialogVisible = true;\r\n      }\r\n    },\r\n    // 新增验证\r\n    addPageVerify() {\r\n      const { pageId, price, product, salesman } = this.form;\r\n      if (pageId == \"\") {\r\n        this.$message.error(\"请输入页面ID\");\r\n        return false;\r\n      }\r\n      if (salesman == \"\") {\r\n        this.$message.error(\"请选择业务员\");\r\n        return false;\r\n      }\r\n      if (product == \"\") {\r\n        this.$message.error(\"请选择产品\");\r\n        return false;\r\n      }\r\n      if (price == \"\") {\r\n        this.$message.error(\"请输入价格\");\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n    // 确认新增\r\n    handleEditConfirm() {\r\n      if (!this.addPageVerify()) return;\r\n      const { pageId, price, product, salesman } = this.form;\r\n      addBaiduPage({\r\n        pageId: pageId,\r\n        uid: salesman,\r\n        productId: product,\r\n        price: price\r\n      }).then(res => {\r\n        if (res.status == 200) {\r\n          this.list = this.getList();\r\n          this.$message({\r\n            message: \"新增成功\",\r\n            type: \"success\"\r\n          });\r\n        }\r\n      });\r\n      if (this.editDialogVisible) {\r\n        this.editDialogVisible = false;\r\n      }\r\n    },\r\n    // 取消新增\r\n    handleEditCancel() {\r\n      if (this.editDialogVisible) {\r\n        this.editDialogVisible = false;\r\n      }\r\n    },\r\n\r\n    /* 移动端事件 */\r\n\r\n    // 分页器\r\n    handlePageChange() {\r\n      this.getList();\r\n    },\r\n    // 限制页面跳转输入框只能输入数字\r\n    jumpPageInput() {\r\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\r\n    },\r\n    // 跳转指定页面\r\n    handleJumpPage() {\r\n      let jumpPage = parseInt(this.pageJumpIndex);\r\n      if (jumpPage == this.mobileCurrentPage) return;\r\n      if (jumpPage > Math.ceil(this.listTotal / this.pagesize)) {\r\n        jumpPage = Math.ceil(this.listTotal / this.pagesize);\r\n      }\r\n      if (jumpPage < 1) {\r\n        jumpPage = 1;\r\n      }\r\n      this.pageJumpIndex = jumpPage;\r\n      this.mobileCurrentPage = jumpPage;\r\n      this.getList();\r\n    }\r\n  }\r\n};\r\n",null]}