{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\components\\orderTable\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\components\\orderTable\\index.vue","mtime":1562570958770},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from \"vue\";\r\nimport { parseTime } from \"@/utils\";\r\nimport {\r\n  getOuterChainOrder,\r\n  editOuterChainUsefulStatus,\r\n  editOuterChainOrder,\r\n  exportOuterChainExcel,\r\n  getSalesmanList,\r\n  getChannelList,\r\n  getProductList,\r\n  getColorList,\r\n  importJD\r\n} from \"@/api/orderList\";\r\nimport { setTimeout, clearTimeout } from \"timers\";\r\nimport {\r\n  Pagination,\r\n  Button,\r\n  Popup,\r\n  NavBar,\r\n  Cell,\r\n  CellGroup,\r\n  DatetimePicker,\r\n  Picker,\r\n  Field,\r\n  Icon,\r\n  Toast,\r\n  ActionSheet,\r\n  Search\r\n} from \"vant\";\r\n\r\nVue.use(Pagination);\r\nVue.use(Button);\r\nVue.use(Popup);\r\nVue.use(NavBar);\r\nVue.use(Cell);\r\nVue.use(CellGroup);\r\nVue.use(DatetimePicker);\r\nVue.use(Picker);\r\nVue.use(Field);\r\nVue.use(Icon);\r\nVue.use(Toast);\r\nVue.use(ActionSheet);\r\nVue.use(Search);\r\n\r\nexport default {\r\n  name: \"orderTable\",\r\n  props: [\"category\"],\r\n  data() {\r\n    return {\r\n      list: [],\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: \"最近一周\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          },\r\n          {\r\n            text: \"最近一个月\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          },\r\n          {\r\n            text: \"最近三个月\",\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n              picker.$emit(\"pick\", [start, end]);\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      salemanOptions: [],\r\n      salesmanColumns: [],\r\n      channelOptions: [],\r\n      channelColumns: [],\r\n      productOptions: [],\r\n      productColumns: [],\r\n      colorOptions: [],\r\n      colorColumns: [],\r\n      usefulOptions: [\r\n        {\r\n          value: \"0\",\r\n          label: \"是\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"否\"\r\n        }\r\n      ],\r\n      usefulColumns: [\"有效单\", \"无效单\"],\r\n      repeatOrderOptions: [\r\n        {\r\n          value: \"0\",\r\n          label: \"是\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"否\"\r\n        }\r\n      ],\r\n      repeatOrderColumns: [\"重单\", \"不重单\"],\r\n      repeatNamePhoneOptions: [\r\n        {\r\n          value: \"0\",\r\n          label: \"是\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"否\"\r\n        }\r\n      ],\r\n      repeatNamePhoneColumns: [\"重复\", \"不重复\"],\r\n      exportjdOptions: [\r\n        {\r\n          value: \"0\",\r\n          label: \"是\"\r\n        },\r\n        {\r\n          value: \"1\",\r\n          label: \"否\"\r\n        }\r\n      ],\r\n      exportJDColumns: [\"已导入\", \"未导入\"],\r\n      timeSelectValue: \"\",\r\n      salemanValue: \"\",\r\n      channelValue: \"\",\r\n      productValue: \"\",\r\n      usefulValue: \"\",\r\n      repeatOrderValue: \"\",\r\n      repeatNamePhoneValue: \"\",\r\n      exportjdValue: \"\",\r\n      colorInput: \"\",\r\n      nameInput: \"\",\r\n      phoneNumberInput: \"\",\r\n      minIdInput: \"\",\r\n      maxIdInput: \"\",\r\n      minPriceInput: \"\",\r\n      maxPriceInput: \"\",\r\n      formLabelWidth: \"120px\",\r\n      editDialogVisible: false,\r\n      form: {\r\n        productType: \"\",\r\n        name: \"\",\r\n        color: \"\",\r\n        count: \"\",\r\n        price: \"\",\r\n        remarks: \"\",\r\n        address: \"\"\r\n      },\r\n      currentEditID: 0,\r\n      downloadLoading: false,\r\n      listLoading: false,\r\n      currentPage: 1, //当前页\r\n      pagesizes: [50, 500, 1000, 5000], //单页最大显示条数\r\n      pagesize: 50, //单页内条数\r\n      salemanWidth: \"\",\r\n      importTypeDialogVisible: false,\r\n      multipleSelection: [],\r\n      clickFlag: null, // 单击定时器\r\n      mobileSearchShow: false,\r\n      mobileDatePickerShow: false,\r\n      mobileSalesmanPickerShow: false,\r\n      mobileChannelPickerShow: false,\r\n      mobileProductPickerShow: false,\r\n      mobileUsefulPickerShow: false,\r\n      mobileRepeatOrderPickerShow: false,\r\n      mobileRepeatNamePhonePickerShow: false,\r\n      mobileExportJDPickerShow: false,\r\n      minDate: new Date(1950, 10, 1),\r\n      maxDate: new Date(),\r\n      currentDate: new Date(),\r\n      minDateEnd: new Date(),\r\n      maxDateStart: new Date(),\r\n      timePickerStartValue: \"请选择\",\r\n      timePickerEndValue: \"请选择\",\r\n      salesmanMobileValue: \"请选择\",\r\n      channelMobileValue: \"请选择\",\r\n      productMobileValue: \"请选择\",\r\n      usefulMobileValue: \"请选择\",\r\n      repeatOrderMobileValue: \"请选择\",\r\n      repeatNamePhoneMobileValue: \"请选择\",\r\n      exportJDMobileValue: \"请选择\",\r\n      nameMobileValue: \"\",\r\n      colorMobileValue: \"\",\r\n      phoneMobileValue: \"\",\r\n      minIdMobileValue: \"\",\r\n      maxIdMobileValue: \"\",\r\n      minPriceMobileValue: \"\",\r\n      maxPriceMobileValue: \"\",\r\n      device: \"\",\r\n      salesmanSearchValue: \"\",\r\n      channelSearchValue: \"\",\r\n      productSearchValue: \"\",\r\n      salesPickerCurrentSelect: 0,\r\n      channelPickerCurrentSelect: 0,\r\n      productPickerCurrentSelect: 0,\r\n      datetimePickerType: \"\",\r\n      mobileSearchButtonLoading: false,\r\n      tableMaxHeight: 0,\r\n      pageJumpIndex: 1,\r\n      searchButtonLoading: false,\r\n      clearSearchButtonLoading: false,\r\n      paramsStorage: {},\r\n      contains: false,\r\n      jdSelect: []\r\n    };\r\n  },\r\n  created() {\r\n    this.getOrderList();\r\n    this.device = this.$store.state.app.device;\r\n    window.addEventListener(\"resize\", this.getHeight);\r\n    this.getHeight();\r\n    this.getSalesman();\r\n    this.getChannel();\r\n    this.getProduct();\r\n    this.getColor();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.getHeight);\r\n  },\r\n  computed: {\r\n    deviceVal() {\r\n      return this.$store.state.app.device;\r\n    }\r\n  },\r\n  watch: {\r\n    deviceVal(newVal, oldVal) {\r\n      this.device = newVal;\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取表格列表\r\n    getOrderList() {\r\n      let orderList = [];\r\n      this.listLoading = true;\r\n      getOuterChainOrder(this.category, {\r\n        contains: this.contains,\r\n        rows: this.pagesize,\r\n        page: this.currentpage || 1\r\n      }).then(res => {\r\n        const tableData = res.data.rows;\r\n        tableData.forEach(tableItem => {\r\n          const {\r\n            id,\r\n            cpName,\r\n            productName,\r\n            colorName,\r\n            username,\r\n            telephone,\r\n            totalCost,\r\n            pNum,\r\n            num,\r\n            price,\r\n            isRepeat,\r\n            address,\r\n            createTime,\r\n            remark,\r\n            mode,\r\n            name,\r\n            operator,\r\n            operatingTime\r\n          } = tableItem;\r\n          const orderItem = {\r\n            id: id,\r\n            channel: cpName,\r\n            productName: productName,\r\n            color: colorName,\r\n            name: name,\r\n            phoneNumber: telephone,\r\n            count: num,\r\n            price: totalCost,\r\n            repeatOrder: isRepeat,\r\n            address: address,\r\n            createTime: createTime,\r\n            remarks: remark,\r\n            isUseful: mode,\r\n            logisticsState: mode,\r\n            salesman: username,\r\n            operator: operator,\r\n            nuclearOrderInterval: operatingTime\r\n          };\r\n          orderList.push(orderItem);\r\n        });\r\n      });\r\n      this.list = orderList;\r\n      this.listLoading = false;\r\n    },\r\n    // 获取业务员列表\r\n    getSalesman() {\r\n      getSalesmanList().then(res => {\r\n        const salesmanList = res.data;\r\n        salesmanList.forEach(salesmanItem => {\r\n          const salesmanObject = {\r\n            value: salesmanItem.id,\r\n            label: salesmanItem.name\r\n          };\r\n          this.salemanOptions.push(salesmanObject);\r\n          this.salesmanColumns.push(salesmanItem.name);\r\n        });\r\n      });\r\n    },\r\n    // 获取渠道列表\r\n    getChannel() {\r\n      getChannelList().then(res => {\r\n        const channelList = res.data;\r\n        channelList.forEach(channelItem => {\r\n          const channelObject = {\r\n            value: channelItem.id,\r\n            label: channelItem.name\r\n          };\r\n          this.channelOptions.push(channelObject);\r\n          this.channelColumns.push(channelItem.name);\r\n        });\r\n      });\r\n    },\r\n    // 获取产品列表\r\n    getProduct() {\r\n      getProductList().then(res => {\r\n        const productList = res.data;\r\n\r\n        productList.forEach(productItem => {\r\n          const productObject = {\r\n            value: productItem.id,\r\n            label: productItem.name\r\n          };\r\n          this.productOptions.push(productObject);\r\n          this.productColumns.push(productItem.name);\r\n        });\r\n      });\r\n    },\r\n    // 获取颜色列表\r\n    getColor() {\r\n      getColorList().then(res => {\r\n        const colorList = res.data;\r\n        colorList.forEach(colorItem => {\r\n          if (colorItem.name) {\r\n            const colorProject = {\r\n              value: colorItem.id,\r\n              label: colorItem.name\r\n            };\r\n            this.colorOptions.push(colorProject);\r\n            this.colorColumns.push(colorItem.name);\r\n          }\r\n        });\r\n      });\r\n    },\r\n    // 表格高度自适应\r\n    getHeight() {\r\n      let otherHeight = this.device == \"desktop\" ? 250 : 200;\r\n      this.tableMaxHeight = window.innerHeight - otherHeight;\r\n    },\r\n    // 单击复制\r\n    handleUseful(row, column, cell, event) {\r\n      if (this.device == \"mobile\") return;\r\n      if (this.clickFlag) {\r\n        clearTimeout(this.clickFlag);\r\n        this.clickFlag = null;\r\n      }\r\n      this.clickFlag = setTimeout(() => {\r\n        let count = 0;\r\n        if (column.label == undefined) return;\r\n        if (column.label == \"是否可用\") {\r\n          this.list.forEach(item => {\r\n            if (item.id == row.id) {\r\n              this.handleChangeUseful({\r\n                id: row.id,\r\n                mode: this.list[count].isUseful\r\n              });\r\n            } else {\r\n              count++;\r\n            }\r\n          });\r\n        } else {\r\n          let copyText = event.target.innerText;\r\n          if (copyText != \"\") {\r\n            var inputElement = document.getElementById(\"copy_content\");\r\n            inputElement.value = copyText;\r\n            inputElement.select();\r\n            document.execCommand(\"Copy\");\r\n            this.$message({\r\n              message: \"复制成功\",\r\n              type: \"success\"\r\n            });\r\n          } else {\r\n            this.$message.error(\"复制失败，内容可能为空\");\r\n          }\r\n        }\r\n      }, 300);\r\n    },\r\n    // 修改可用状态\r\n    handleChangeUseful(data) {\r\n      const { id, mode } = data;\r\n      let modeInt;\r\n      mode == 1 ? (modeInt = 0) : (modeInt = 1);\r\n      editOuterChainUsefulStatus(this.category, {\r\n        id: id,\r\n        mode: modeInt\r\n      })\r\n        .then(res => {\r\n          this.reloadPage();\r\n          setTimeout(() => {\r\n            this.$message({\r\n              message: \"修改成功\",\r\n              type: \"success\"\r\n            });\r\n          }, 1000);\r\n        })\r\n        .catch(error => {\r\n          this.$message.error(\"修改失败\");\r\n          console.log(error);\r\n        });\r\n    },\r\n    // 双击编辑\r\n    handleEdit(e) {\r\n      if (this.device == \"mobile\") return;\r\n      if (this.clickFlag) {\r\n        clearTimeout(this.clickFlag);\r\n        this.clickFlag = null;\r\n      }\r\n      this.form.productType = e.productName;\r\n      this.form.name = e.name;\r\n      this.form.color = e.color;\r\n      this.form.count = e.count;\r\n      this.form.price = e.price;\r\n      this.form.remarks = e.remarks;\r\n      this.form.address = e.address;\r\n      this.currentEditID = e.id;\r\n      this.editDialogVisible = true;\r\n    },\r\n    // 取消编辑\r\n    handleEditCancel() {\r\n      this.editDialogVisible = false;\r\n    },\r\n    // 确认编辑\r\n    handleEditConfirm(row, column, event) {\r\n      let count = 0;\r\n      let productId;\r\n      let colorId;\r\n      this.list.forEach(item => {\r\n        if (item.id == this.currentEditID) {\r\n          this.productOptions.forEach(productItem => {\r\n            if (productItem.label === this.form.productType) {\r\n              productId = productItem.value;\r\n            }\r\n          });\r\n\r\n          if (this.form.color == null) {\r\n            this.form.color = undefined;\r\n          }\r\n\r\n          const params = {\r\n            id: this.list[count].id,\r\n            productId: productId,\r\n            name: this.form.name,\r\n            colorName: this.form.color,\r\n            num: this.form.count,\r\n            totalCost: this.form.price,\r\n            remark: this.form.remarks,\r\n            address: this.form.address\r\n          };\r\n          editOuterChainOrder(this.category, params)\r\n            .then(res => {\r\n              this.reloadPage();\r\n              setTimeout(() => {\r\n                this.$message({\r\n                  message: \"修改成功\",\r\n                  type: \"success\"\r\n                });\r\n              }, 1000);\r\n            })\r\n            .catch(error => {\r\n              this.$message.error(\"修改失败\");\r\n              console.log(error);\r\n            });\r\n        } else {\r\n          count++;\r\n        }\r\n      });\r\n      this.editDialogVisible = false;\r\n    },\r\n    // 搜索验证\r\n    searchVerify() {\r\n      if (\r\n        (this.minIdInput && !this.maxIdInput) ||\r\n        (!this.minIdInput && this.maxIdInput)\r\n      ) {\r\n        this.$message({\r\n          message: \"未填写完整的ID范围\",\r\n          type: \"warning\"\r\n        });\r\n        return false;\r\n      }\r\n      if (\r\n        (this.minPriceInput && !this.maxPriceInput) ||\r\n        (!this.minPriceInput && this.maxPriceInput)\r\n      ) {\r\n        this.$message({\r\n          message: \"未填写完整的价格范围\",\r\n          type: \"warning\"\r\n        });\r\n        return false;\r\n      }\r\n    },\r\n    // 搜索\r\n    handleSearch() {\r\n      if (this.searchVerify()) return;\r\n      this.listLoading = true;\r\n      this.searchButtonLoading = true;\r\n      let searchList = [];\r\n\r\n      this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\r\n      let paramsObj = {\r\n        contains: this.contains,\r\n        rows: this.pagesize,\r\n        page: this.currentpage || 1\r\n      };\r\n      this.timeSelectValue[0]\r\n        ? (paramsObj.createTime = this.timeSelectValue[0])\r\n        : \"\";\r\n      this.timeSelectValue[1]\r\n        ? (paramsObj.createTimeEnd = this.timeSelectValue[1])\r\n        : \"\";\r\n      this.channelValue ? (paramsObj.cid = this.channelValue) : \"\";\r\n      this.minIdInput ? (paramsObj.id = this.minIdInput) : \"\";\r\n      this.maxIdInput ? (paramsObj.idEnd = this.maxIdInput) : \"\";\r\n      this.repeatOrderValue ? (paramsObj.isRepeat = this.repeatOrderValue) : \"\";\r\n      this.usefulValue ? (paramsObj.mode = this.usefulValue) : \"\";\r\n      this.nameInput ? (paramsObj.name = this.nameInput) : \"\";\r\n      this.productValue ? (paramsObj.productId = this.productValue) : \"\";\r\n      this.phoneNumberInput\r\n        ? (paramsObj.telephone = this.phoneNumberInput)\r\n        : \"\";\r\n      this.minPriceInput ? (paramsObj.totalCost = this.minPriceInput) : \"\";\r\n      this.maxPriceInput ? (paramsObj.totalCostEnd = this.maxPriceInput) : \"\";\r\n      if (this.salemanValue.length > 0) {\r\n        paramsObj.uids = this.salemanValue.join(\",\");\r\n      }\r\n      this.paramsStorage = paramsObj;\r\n      getOuterChainOrder(this.category, paramsObj)\r\n        .then(res => {\r\n          const tableData = res.data.rows;\r\n          tableData.forEach(tableItem => {\r\n            const {\r\n              id,\r\n              cpName,\r\n              pid,\r\n              productName,\r\n              colorName,\r\n              username,\r\n              telephone,\r\n              totalCost,\r\n              pNum,\r\n              num,\r\n              price,\r\n              size,\r\n              isRepeat,\r\n              address,\r\n              createTime,\r\n              remark,\r\n              mode,\r\n              isImport,\r\n              name,\r\n              uid,\r\n              operator,\r\n              operatingTime\r\n            } = tableItem;\r\n            const orderItem = {\r\n              id: id,\r\n              channel: cpName,\r\n              pid: pid,\r\n              productName: productName,\r\n              color: colorName,\r\n              name: name,\r\n              phoneNumber: telephone,\r\n              count: num,\r\n              price: totalCost,\r\n              size: size,\r\n              repeatOrder: isRepeat,\r\n              address: address,\r\n              createTime: createTime,\r\n              remarks: remark,\r\n              isUseful: mode,\r\n              logisticsState: isImport,\r\n              salesman: username,\r\n              uid: uid,\r\n              operator: operator,\r\n              nuclearOrderInterval: operatingTime\r\n            };\r\n            searchList.push(orderItem);\r\n          });\r\n          this.list = searchList;\r\n          this.searchButtonLoading = false;\r\n          this.listLoading = false;\r\n        })\r\n        .catch(error => {\r\n          this.searchButtonLoading = false;\r\n          this.listLoading = false;\r\n          console.log(error);\r\n        });\r\n    },\r\n    // 清空搜索项\r\n    handleClearSearch() {\r\n      this.timeSelectValue = [\"\", \"\"];\r\n      this.salemanValue = [];\r\n      this.channelValue = \"\";\r\n      this.productValue = \"\";\r\n      this.colorInput = \"\";\r\n      this.nameInput = \"\";\r\n      this.phoneNumberInput = \"\";\r\n      this.usefulValue = \"\";\r\n      this.repeatOrderValue = \"\";\r\n      this.repeatNamePhoneValue = \"\";\r\n      this.exportjdValue = \"\";\r\n      this.minIdInput = \"\";\r\n      this.maxIdInput = \"\";\r\n      this.minPriceInput = \"\";\r\n      this.maxPriceInput = \"\";\r\n      this.salemanChange();\r\n    },\r\n    // 选择表格尺寸\r\n    handleSizeChange(val) {\r\n      this.pagesize = val;\r\n      this.getOrderList();\r\n    },\r\n    //选择表格当前页数\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.getOrderList();\r\n    },\r\n    // 导出excel\r\n    handleDownload() {\r\n      this.downloadLoading = true;\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error(\"未选择任何数据\");\r\n        this.downloadLoading = false;\r\n        return;\r\n      }\r\n\r\n      let ids = [];\r\n      this.multipleSelection.forEach(selectItem => {\r\n        ids.push(selectItem.id);\r\n      });\r\n      let idsStr = ids.join(\",\");\r\n      exportOuterChainExcel(this.category, {\r\n        ids: idsStr,\r\n        logistics: \"yd\"\r\n      }).then(res => {\r\n        const blob = new Blob([res], {\r\n          type: \"application/vnd.mx-excel;charset=utf-8\"\r\n        });\r\n        let myDate = new Date();\r\n        let year = myDate.getFullYear();\r\n        let month = myDate.getMonth() + 1;\r\n        let day = myDate.getDate();\r\n        var downloadElement = document.createElement(\"a\");\r\n        var href = window.URL.createObjectURL(blob); //创建下载的链接\r\n        downloadElement.href = href;\r\n        downloadElement.download = `订单 ${year}-${month}-${day}.xls`; //下载后文件名\r\n        document.body.appendChild(downloadElement);\r\n        downloadElement.click(); //点击下载\r\n        document.body.removeChild(downloadElement); //下载完成移除元素\r\n        window.URL.revokeObjectURL(href); //释放掉blob对象\r\n      });\r\n      this.downloadLoading = false;\r\n    },\r\n    // 格式化数据\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v =>\r\n        filterVal.map(j => {\r\n          if (j === \"timestamp\") {\r\n            return parseTime(v[j]);\r\n          } else {\r\n            return v[j];\r\n          }\r\n        })\r\n      );\r\n    },\r\n    // 业务员选择器宽度自适应\r\n    salemanChange() {\r\n      const inputWidth = 178; //选择器原始宽度 178px\r\n      let optionWidth = this.salemanValue.length * 65 + 97; //一个标签宽度65px 右边预留97px\r\n      this.salemanWidth =\r\n        optionWidth > inputWidth\r\n          ? \"width:\" + optionWidth + \"px\"\r\n          : \"width:\" + inputWidth + \"px\";\r\n    },\r\n    // 选择发生改变\r\n    handleSelectChange(selection) {\r\n      this.multipleSelection = selection;\r\n    },\r\n    // 导入德邦\r\n    handleExportDB() {},\r\n    // 批量导入京东\r\n    handleBatchImportIntoJD() {\r\n      if (this.multipleSelection.length === 0) {\r\n        this.$message.error(\"未选择任何数据\");\r\n      } else {\r\n        this.jdSelect = this.multipleSelection;\r\n        this.importTypeDialogVisible = true;\r\n      }\r\n    },\r\n    // 空运\r\n    handleImportSky() {\r\n      let ids = [];\r\n      this.jdSelect.forEach(item => {\r\n        ids.push(item.id);\r\n      });\r\n      let idsStr = ids.join(\",\");\r\n      importJD(this.category, { ids: idsStr, trans: 2 }).then(res => {\r\n        console.log(res);\r\n      });\r\n      this.$message.success(\"操作成功\");\r\n      this.importTypeDialogVisible = false;\r\n    },\r\n    // 陆运\r\n    handleImportLand() {\r\n      let ids = [];\r\n      this.jdSelect.forEach(item => {\r\n        ids.push(item.id);\r\n      });\r\n      let idsStr = ids.join(\",\");\r\n      importJD(this.category, { ids: idsStr, trans: 1 }).then(res => {\r\n        console.log(res);\r\n      });\r\n      this.$message.success(\"操作成功\");\r\n      this.importTypeDialogVisible = false;\r\n    },\r\n    // 合计\r\n    getSummaries(param) {\r\n      const { columns, data } = param;\r\n      const sums = [];\r\n      let count = 0;\r\n      let price = 0;\r\n      columns.forEach((column, index) => {\r\n        if (index === 1) {\r\n          sums[index] = \"合计\";\r\n          return;\r\n        }\r\n        if (column.label == \"数量\") {\r\n          data.forEach(index => {\r\n            count = count + parseInt(index.count);\r\n          });\r\n          sums[index] = count || \"\";\r\n        }\r\n        if (column.label == \"总价\") {\r\n          data.forEach(index => {\r\n            price = price + parseInt(index.price);\r\n          });\r\n          sums[index] = price || \"\";\r\n        }\r\n      });\r\n      return sums;\r\n    },\r\n    // 重载页面\r\n    reloadPage() {\r\n      if (this.paramsStorage === {}) {\r\n        this.getOrderList();\r\n      } else {\r\n        let searchList = [];\r\n        getOuterChainOrder(this.category, this.paramsStorage).then(res => {\r\n          const tableData = res.data.rows;\r\n          tableData.forEach(tableItem => {\r\n            const {\r\n              id,\r\n              cpName,\r\n              pid,\r\n              productName,\r\n              colorName,\r\n              username,\r\n              telephone,\r\n              totalCost,\r\n              pNum,\r\n              num,\r\n              price,\r\n              size,\r\n              isRepeat,\r\n              address,\r\n              createTime,\r\n              remark,\r\n              mode,\r\n              isImport,\r\n              name,\r\n              uid,\r\n              operator,\r\n              operatingTime\r\n            } = tableItem;\r\n            const orderItem = {\r\n              id: id,\r\n              channel: cpName,\r\n              pid: pid,\r\n              productName: productName,\r\n              color: colorName,\r\n              name: name,\r\n              phoneNumber: telephone,\r\n              count: num,\r\n              price: totalCost,\r\n              size: size,\r\n              repeatOrder: isRepeat,\r\n              address: address,\r\n              createTime: createTime,\r\n              remarks: remark,\r\n              isUseful: mode,\r\n              logisticsState: isImport,\r\n              salesman: username,\r\n              uid: uid,\r\n              operator: operator,\r\n              nuclearOrderInterval: operatingTime\r\n            };\r\n            searchList.push(orderItem);\r\n          });\r\n          this.list = searchList;\r\n        });\r\n      }\r\n    },\r\n\r\n    /* 移动端事件 */\r\n\r\n    // 分页器\r\n    handlePageChange() {\r\n      this.listLoading = true;\r\n      setTimeout(() => {\r\n        this.listLoading = false;\r\n      }, 600);\r\n    },\r\n    // 点击搜索\r\n    handleSearchMobile() {\r\n      if (!this.mobileSearchShow) {\r\n        this.mobileSearchShow = true;\r\n      }\r\n    },\r\n    // 取消搜索\r\n    handleSearchMobileCancel() {\r\n      if (this.mobileSearchShow) {\r\n        this.mobileSearchShow = false;\r\n      }\r\n    },\r\n    // 清空所选\r\n    handleSearchMobileClearAll() {\r\n      this.timePickerStartValue == \"请选择\"\r\n        ? \"\"\r\n        : (this.timePickerStartValue = \"请选择\"),\r\n        this.timePickerEndValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.timePickerEndValue = \"请选择\"),\r\n        this.salesmanMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.salesmanMobileValue = \"请选择\"),\r\n        this.channelMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.channelMobileValue = \"请选择\"),\r\n        this.productMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.productMobileValue = \"请选择\"),\r\n        this.usefulMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.usefulMobileValue = \"请选择\"),\r\n        this.repeatOrderMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.repeatOrderMobileValue = \"请选择\"),\r\n        this.repeatNamePhoneMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.repeatNamePhoneMobileValue = \"请选择\"),\r\n        this.exportJDMobileValue == \"请选择\"\r\n          ? \"\"\r\n          : (this.exportJDMobileValue = \"请选择\"),\r\n        this.nameMobileValue == \"\" ? \"\" : (this.nameMobileValue = \"\"),\r\n        this.colorMobileValue == \"\" ? \"\" : (this.colorMobileValue = \"\"),\r\n        this.phoneMobileValue == \"\" ? \"\" : (this.phoneMobileValue = \"\"),\r\n        this.maxIdMobileValue == \"\" ? \"\" : (this.maxIdMobileValue = \"\"),\r\n        this.minIdMobileValue == \"\" ? \"\" : (this.minIdMobileValue = \"\"),\r\n        this.maxPriceMobileValue == \"\" ? \"\" : (this.maxPriceMobileValue = \"\"),\r\n        this.minPriceMobileValue == \"\" ? \"\" : (this.minPriceMobileValue = \"\");\r\n    },\r\n    // 选择开始日期\r\n    handleChooseDateStartMobile() {\r\n      if (!this.mobileDatePickerShow) {\r\n        if (this.timePickerEndValue != \"请选择\") {\r\n          let maxDate_ = this.timePickerEndValue;\r\n          maxDate_ = maxDate_.replace(/-/g, \"/\");\r\n          let date = new Date(maxDate_);\r\n          this.maxDateStart = date;\r\n        }\r\n        this.datetimePickerType = \"start\";\r\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\r\n      }\r\n    },\r\n    // 选择结束日期\r\n    handleChooseDateEndMobile() {\r\n      if (!this.mobileDatePickerShow) {\r\n        if (this.timePickerStartValue != \"请选择\") {\r\n          let maxDate_ = this.timePickerStartValue;\r\n          maxDate_ = maxDate_.replace(/-/g, \"/\");\r\n          let date = new Date(maxDate_);\r\n          this.minDateEnd = date;\r\n        }\r\n        this.datetimePickerType = \"end\";\r\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\r\n      }\r\n    },\r\n    datetimePickerChange(e) {},\r\n    // 确认选择日期\r\n    datetimePickerConfirm(res) {\r\n      if (this.mobileDatePickerShow) {\r\n        if (this.datetimePickerType == \"start\") {\r\n          this.timePickerStartValue = res.toLocaleDateString();\r\n        } else {\r\n          this.timePickerEndValue = res.toLocaleDateString();\r\n        }\r\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\r\n      }\r\n    },\r\n    // 取消选择日期\r\n    datetimePickerCancel() {\r\n      this.mobileDatePickerShow = !this.mobileDatePickerShow;\r\n    },\r\n    // 选择业务员\r\n    handleChooseSalesman() {\r\n      if (!this.mobileSalesmanPickerShow) {\r\n        this.mobileSalesmanPickerShow = !this.mobileSalesmanPickerShow;\r\n      }\r\n    },\r\n    // 选择渠道\r\n    handleChooseChannel() {\r\n      if (!this.mobileChannelPickerShow) {\r\n        this.mobileChannelPickerShow = !this.mobileChannelPickerShow;\r\n      }\r\n    },\r\n    // 选择产品\r\n    handleChooseProduct() {\r\n      if (!this.mobileProductPickerShow) {\r\n        this.mobileProductPickerShow = !this.mobileProductPickerShow;\r\n      }\r\n    },\r\n    // 选择是否有效\r\n    handleChooseIsUseful() {\r\n      if (!this.mobileUsefulPickerShow) {\r\n        this.mobileUsefulPickerShow = !this.mobileUsefulPickerShow;\r\n      }\r\n    },\r\n    // 选择是否重单\r\n    handleChooseIsRepeatOrder() {\r\n      if (!this.mobileRepeatOrderPickerShow) {\r\n        this.mobileRepeatOrderPickerShow = !this.mobileRepeatOrderPickerShow;\r\n      }\r\n    },\r\n    // 选择是否重复电话姓名\r\n    handleChooseIsRepeatPhoneName() {\r\n      if (!this.mobileRepeatNamePhonePickerShow) {\r\n        this.mobileRepeatNamePhonePickerShow = !this\r\n          .mobileRepeatNamePhonePickerShow;\r\n      }\r\n    },\r\n    // 选择是否导入京东\r\n    handleChooseExportJD() {\r\n      if (!this.mobileExportJDPickerShow) {\r\n        this.mobileExportJDPickerShow = !this.mobileExportJDPickerShow;\r\n      }\r\n    },\r\n    // 确认选择业务员\r\n    salesmanPickerConfirm(res) {\r\n      if (this.mobileSalesmanPickerShow) {\r\n        if (this.salesmanMobileValue == \"请选择\") {\r\n          this.salesmanMobileValue = res;\r\n        } else {\r\n          if (this.salesmanMobileValue.indexOf(\",\") != -1) {\r\n            let salesmanArr = new Array();\r\n            salesmanArr = this.salesmanMobileValue.split(\",\");\r\n            if (salesmanArr.indexOf(res) == -1) {\r\n              this.salesmanMobileValue = this.salesmanMobileValue + \",\" + res;\r\n            } else {\r\n              Toast(\"请勿重复选择\");\r\n            }\r\n          } else {\r\n            if (this.salesmanMobileValue != res) {\r\n              this.salesmanMobileValue = this.salesmanMobileValue + \",\" + res;\r\n            } else {\r\n              Toast(\"请勿重复选择\");\r\n            }\r\n          }\r\n        }\r\n        this.mobileSalesmanPickerShow = !this.mobileSalesmanPickerShow;\r\n      }\r\n    },\r\n    // 确认选择渠道\r\n    channelPickerConfirm(res) {\r\n      if (this.mobileChannelPickerShow) {\r\n        this.channelMobileValue = res;\r\n        this.mobileChannelPickerShow = !this.mobileChannelPickerShow;\r\n      }\r\n    },\r\n    // 确认选择产品\r\n    productPickerConfirm(res) {\r\n      if (this.mobileProductPickerShow) {\r\n        this.productMobileValue = res;\r\n        this.mobileProductPickerShow = !this.mobileProductPickerShow;\r\n      }\r\n    },\r\n    // 确认选择是否有效\r\n    usefulPickerConfirm(res) {\r\n      if (this.mobileUsefulPickerShow) {\r\n        this.usefulMobileValue = res;\r\n        this.mobileUsefulPickerShow = !this.mobileUsefulPickerShow;\r\n      }\r\n    },\r\n    // 确认选择是否重单\r\n    repeatOrderPickerConfirm(res) {\r\n      if (this.mobileRepeatOrderPickerShow) {\r\n        this.repeatOrderMobileValue = res;\r\n        this.mobileRepeatOrderPickerShow = !this.mobileRepeatOrderPickerShow;\r\n      }\r\n    },\r\n    // 确认选择是否重复电话姓名\r\n    repeatNamePhonePickerConfirm(res) {\r\n      if (this.mobileRepeatNamePhonePickerShow) {\r\n        this.repeatNamePhoneMobileValue = res;\r\n        this.mobileRepeatNamePhonePickerShow = !this\r\n          .mobileRepeatNamePhonePickerShow;\r\n      }\r\n    },\r\n    // 确认选择是否导入京东\r\n    exportJDPickerConfirm(res) {\r\n      if (this.mobileExportJDPickerShow) {\r\n        this.exportJDMobileValue = res;\r\n        this.mobileExportJDPickerShow = !this.mobileExportJDPickerShow;\r\n      }\r\n    },\r\n    // 导入京东方式\r\n    mobileExportJDSelect(item) {\r\n      this.mobileExportJDDialogShow = false;\r\n      Toast.success(item.name + \"成功\");\r\n    },\r\n    // 取消导入京东\r\n    mobileExportJDCancel() {},\r\n    // 业务员快捷搜索\r\n    handleSearchSalesmanItem() {\r\n      this.salesPickerCurrentSelect = this.salesmanColumns.indexOf(\r\n        this.salesmanSearchValue\r\n      );\r\n    },\r\n    // 渠道快捷搜索\r\n    handleSearchChannelItem() {\r\n      this.channelPickerCurrentSelect = this.channelColumns.indexOf(\r\n        this.channelSearchValue\r\n      );\r\n    },\r\n    // 产品快捷搜索\r\n    handleSearchProductItem() {\r\n      this.productPickerCurrentSelect = this.productColumns.indexOf(\r\n        this.productSearchValue\r\n      );\r\n    },\r\n    // 开始搜索\r\n    handleMobileSearch() {\r\n      let timeStartValue = \"\";\r\n      let timeEndValue = \"\";\r\n      let productId = \"\";\r\n      let channelId = \"\";\r\n      let uids = [];\r\n      let repeatOrder = \"\";\r\n      let usefulOrder = \"\";\r\n\r\n      this.timePickerStartValue == \"请选择\"\r\n        ? (timeStartValue = \"\")\r\n        : (timeStartValue = this.timePickerStartValue.replace(/\\//g, \"-\"));\r\n      this.timePickerEndValue == \"请选择\"\r\n        ? (timeEndValue = \"\")\r\n        : (timeEndValue = this.timePickerEndValue.replace(/\\//g, \"-\"));\r\n      if (this.productMobileValue != \"请选择\") {\r\n        this.productOptions.forEach(productItem => {\r\n          if (productItem.label == this.productMobileValue) {\r\n            productId = productItem.value;\r\n          }\r\n        });\r\n      } else {\r\n        productId = \"\";\r\n      }\r\n\r\n      if (this.channelMobileValue != \"请选择\") {\r\n        this.channelOptions.forEach(channelItem => {\r\n          if (channelItem.label == this.channelMobileValue) {\r\n            channelId = channelItem.value;\r\n          }\r\n        });\r\n      } else {\r\n        channelId = \"\";\r\n      }\r\n\r\n      if (this.salesmanMobileValue != \"请选择\") {\r\n        let salesmanArr;\r\n        if (this.salesmanMobileValue.length > 1) {\r\n          salesmanArr = this.salesmanMobileValue.split(\",\");\r\n          salesmanArr.forEach(salesmanItem => {\r\n            this.salemanOptions.forEach(optionItem => {\r\n              if (salesmanItem == optionItem.label) {\r\n                uids.push(optionItem.value);\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          this.salemanOptions.forEach(optionItem => {\r\n            if (optionItem.label == this.salesmanMobileValue) {\r\n              uids.push(optionItem.value);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (this.repeatOrderMobileValue != \"请选择\") {\r\n        this.repeatOrderMobileValue == \"重单\"\r\n          ? (repeatOrder = 1)\r\n          : (repeatOrder = 0);\r\n      } else {\r\n        repeatOrder = \"\";\r\n      }\r\n\r\n      if (this.usefulMobileValue != \"请选择\") {\r\n        this.usefulMobileValue == \"有效单\"\r\n          ? (usefulOrder = 1)\r\n          : (usefulOrder = 0);\r\n      } else {\r\n        usefulOrder = \"\";\r\n      }\r\n      this.mobileSearchButtonLoading = true;\r\n      let searchList = [];\r\n      const contains = false;\r\n      const rows = 1000;\r\n      const page = 1;\r\n\r\n      let paramsObj = { contains: contains, rows: rows, page: page };\r\n      timeStartValue ? (paramsObj.createTime = timeStartValue) : \"\";\r\n      timeEndValue ? (paramsObj.createTimeEnd = timeEndValue) : \"\";\r\n      this.channelValue ? (paramsObj.cid = this.channelValue) : \"\";\r\n      this.minIdMobileValue ? (paramsObj.id = this.minIdMobileValue) : \"\";\r\n      this.maxIdMobileValue ? (paramsObj.idEnd = this.maxIdMobileValue) : \"\";\r\n      repeatOrder ? (paramsObj.isRepeat = repeatOrder) : \"\";\r\n      usefulOrder ? (paramsObj.mode = usefulOrder) : \"\";\r\n      this.nameMobileValue ? (paramsObj.name = this.nameMobileValue) : \"\";\r\n      productId ? paramsObj.productId : \"\";\r\n      this.phoneMobileValue\r\n        ? (paramsObj.telephone = this.phoneMobileValue)\r\n        : \"\";\r\n      this.minPriceMobileValue\r\n        ? (paramsObj.totalCost = this.minPriceMobileValue)\r\n        : \"\";\r\n      this.maxPriceMobileValue\r\n        ? (paramsObj.totalCostEnd = this.maxPriceMobileValue)\r\n        : \"\";\r\n      if (uids.length > 0) {\r\n        paramsObj.uids = uids.join(\",\");\r\n      }\r\n      this.paramsStorage = paramsObj;\r\n      getOuterChainOrder(this.category, paramsObj)\r\n        .then(res => {\r\n          const tableData = res.data.rows;\r\n          if (tableData.length === 0) {\r\n            this.mobileSearchButtonLoading = false;\r\n            this.mobileSearchShow = false;\r\n            return;\r\n          }\r\n          tableData.forEach(tableItem => {\r\n            const {\r\n              id,\r\n              cpName,\r\n              pid,\r\n              productName,\r\n              colorName,\r\n              username,\r\n              telephone,\r\n              totalCost,\r\n              pNum,\r\n              num,\r\n              price,\r\n              size,\r\n              isRepeat,\r\n              address,\r\n              createTime,\r\n              remark,\r\n              mode,\r\n              isImport,\r\n              name,\r\n              uid,\r\n              operator,\r\n              operatingTime\r\n            } = tableItem;\r\n            const orderItem = {\r\n              id: id,\r\n              channel: cpName,\r\n              pid: pid,\r\n              productName: productName,\r\n              color: colorName,\r\n              name: name,\r\n              phoneNumber: telephone,\r\n              count: num,\r\n              price: totalCost,\r\n              size: size,\r\n              repeatOrder: isRepeat,\r\n              address: address,\r\n              createTime: createTime,\r\n              remarks: remark,\r\n              isUseful: mode,\r\n              logisticsState: isImport,\r\n              salesman: username,\r\n              uid: uid,\r\n              operator: operator,\r\n              nuclearOrderInterval: operatingTime\r\n            };\r\n            searchList.push(orderItem);\r\n          });\r\n          this.list = searchList;\r\n          this.mobileSearchButtonLoading = false;\r\n          this.mobileSearchShow = false;\r\n        })\r\n        .catch(error => {\r\n          this.mobileSearchButtonLoading = false;\r\n          this.mobileSearchShow = false;\r\n          console.log(error);\r\n        });\r\n    },\r\n    // 限制页面跳转输入框只能输入数字\r\n    jumpPageInput() {\r\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\r\n    },\r\n    // 跳转指定页面\r\n    handleJumpPage() {\r\n      let jumpPage = parseInt(this.pageJumpIndex);\r\n      if (jumpPage == this.currentPage) return;\r\n      if (jumpPage > Math.ceil(this.list.length / this.pagesize)) {\r\n        jumpPage = Math.ceil(this.list.length / this.pagesize);\r\n      }\r\n      if (jumpPage < 1) {\r\n        jumpPage = 1;\r\n      }\r\n      this.listLoading = true;\r\n      setTimeout(() => {\r\n        this.pageJumpIndex = jumpPage;\r\n        this.currentPage = jumpPage;\r\n        this.listLoading = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n};\r\n",null]}