{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\homepage\\components\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\homepage\\components\\LineChart.vue","mtime":1564131665041},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport { clearInterval, setInterval } from \"timers\";\r\nimport { getEchartData } from \"@/api/homepage\";\r\n\r\nvar echarts = require(\"echarts\");\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataSource: [],\r\n      chart: null,\r\n      nameList: [],\r\n      dataList: [],\r\n      timeData: [],\r\n      tableHeight: \"\",\r\n      echartHeight: 0\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initCharts();\r\n  },\r\n  methods: {\r\n    initCharts() {\r\n      getEchartData().then(res => {\r\n        let clientWidth = this.$refs.echarts.offsetWidth;\r\n        let rows = Math.ceil((res.data.length * 100) / clientWidth);\r\n        let mobileEchartHeight = 0;\r\n        let mobileTableHeight = \"\";\r\n        switch (rows) {\r\n          case 1:\r\n            mobileEchartHeight = 300;\r\n            mobileTableHeight = \"10%\";\r\n            break;\r\n          case 2:\r\n            mobileEchartHeight = 280;\r\n            mobileTableHeight = \"14%\";\r\n            break;\r\n          case 3:\r\n            mobileEchartHeight = 260;\r\n            mobileTableHeight = \"18%\";\r\n            break;\r\n          case 4:\r\n            mobileEchartHeight = 240;\r\n            mobileTableHeight = \"22%\";\r\n            break;\r\n          case 5:\r\n            mobileEchartHeight = 220;\r\n            mobileTableHeight = \"26%\";\r\n            break;\r\n          case 6:\r\n            mobileEchartHeight = 200;\r\n            mobileTableHeight = \"30%\";\r\n            break;\r\n          case 7:\r\n            mobileEchartHeight = 180;\r\n            mobileTableHeight = \"34%\";\r\n            break;\r\n          case 8:\r\n            mobileEchartHeight = 160;\r\n            mobileTableHeight = \"38%\";\r\n            break;\r\n          case 9:\r\n            mobileEchartHeight = 140;\r\n            mobileTableHeight = \"42%\";\r\n            break;\r\n          case 10:\r\n            mobileEchartHeight = 120;\r\n            mobileTableHeight = \"48%\";\r\n            break;\r\n          case 11:\r\n            mobileEchartHeight = 80;\r\n            mobileTableHeight = \"52%\";\r\n            break;\r\n          case 12:\r\n            mobileEchartHeight = 60;\r\n            mobileTableHeight = \"56%\";\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        // this.echartHeight = 600 - (80 * rows);\r\n        this.echartHeight =\r\n          this.$store.state.app.device == \"desktop\" ? 300 : mobileEchartHeight;\r\n        this.tableHeight =\r\n          this.$store.state.app.device == \"desktop\" ? \"30%\" : mobileTableHeight;\r\n        let colorList = [\r\n          \"#FFC0CB\",\r\n          \"#DA70D6\",\r\n          \"#6A5ACD\",\r\n          \"#87CEFA\",\r\n          \"#00FA9A\",\r\n          \"#FFD700\",\r\n          \"#FFA500\",\r\n          \"#FFA07A\",\r\n          \"#FF6347\",\r\n          \"#B22222\",\r\n          \"#1E90FF\",\r\n          \"#F0E68C\",\r\n          \"#FFEFD5\",\r\n          \"#90EE90\",\r\n          \"#A52A2A\",\r\n          \"#7FFF00\",\r\n          \"#008080\",\r\n          \"#48D1CC\",\r\n          \"#5F9EA0\",\r\n          \"#C71585\",\r\n          \"#B0C4DE\"\r\n        ];\r\n        let time = new Date().getHours();\r\n        for (let index = 0; index <= time; index++) {\r\n          this.timeData.push(`${index}:00`);\r\n        }\r\n        let lineChartdata = res.data; //获取数据\r\n        lineChartdata.forEach(item => {\r\n          let index = parseInt(Math.random() * 21);\r\n          this.nameList.push(item.name);\r\n          let dataOjb = {\r\n            name: item.name,\r\n            type: \"line\",\r\n            barWidth: \"15%\",\r\n            showAllSymbol: true,\r\n            symbol: \"emptyCircle\",\r\n            symbolSize: 10, //圆圈圈的大小\r\n            itemStyle: {\r\n              normal: {\r\n                width: 5,\r\n                color: colorList[index],\r\n                barBorderRadius: 11\r\n              }\r\n            },\r\n            // symbol:'none',//去掉点的\r\n            smooth: true, //曲线变平滑的\r\n            lineStyle: {\r\n              normal: {\r\n                width: 3, //折线的borderWidth 宽\r\n                shadowColor: \"rgba(73,140,252, 0.5)\",\r\n                shadowBlur: 10,\r\n                shadowOffsetY: 7\r\n              }\r\n            },\r\n            data: item.data\r\n          };\r\n          this.dataList.push(dataOjb);\r\n        });\r\n        this.chart = echarts.init(this.$el); //创建实例\r\n        this.setOptions(); //设置数据\r\n        window.onresize = this.chart.resize; //自适应\r\n      });\r\n    },\r\n    setOptions() {\r\n      this.chart.setOption({\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            // 坐标轴指示器，坐标轴触发有效\r\n            type: \"line\" // 默认为直线，可选为：'line' | 'shadow'\r\n          }\r\n        },\r\n        grid: {\r\n          left: \"2%\",\r\n          right: \"4%\",\r\n          bottom: \"4%\",\r\n          top: this.tableHeight,\r\n          height: this.echartHeight,\r\n          containLabel: true\r\n        },\r\n        legend: {\r\n          data: this.nameList,\r\n          right: 10,\r\n          top: 12,\r\n          textStyle: {\r\n            color: \"#2b3b60\"\r\n          },\r\n          itemWidth: 12,\r\n          itemHeight: 10\r\n          // itemGap: 35\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: this.timeData,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#d2d9e4\"\r\n            }\r\n          },\r\n          axisLabel: {\r\n            textStyle: {\r\n              fontFamily: \"Microsoft YaHei\",\r\n              color: \"#6175a2\"\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n              color: \"#6175a2\"\r\n            }\r\n          },\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              type: \"dashed\",\r\n              color: \"#d2d9e4\"\r\n            }\r\n          },\r\n          axisLabel: {}\r\n        },\r\n        series: this.dataList\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}