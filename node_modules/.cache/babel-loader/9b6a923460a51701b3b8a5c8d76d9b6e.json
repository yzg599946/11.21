{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\components\\orderTable\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\components\\orderTable\\index.vue","mtime":1563008025992},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\yet\\\\project\\\\longhuiteng_management_system\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"vant/es/search/style\");\n\nvar _search = _interopRequireDefault(require(\"vant/es/search\"));\n\nrequire(\"vant/es/action-sheet/style\");\n\nvar _actionSheet = _interopRequireDefault(require(\"vant/es/action-sheet\"));\n\nrequire(\"vant/es/toast/style\");\n\nvar _toast = _interopRequireDefault(require(\"vant/es/toast\"));\n\nrequire(\"vant/es/icon/style\");\n\nvar _icon = _interopRequireDefault(require(\"vant/es/icon\"));\n\nrequire(\"vant/es/field/style\");\n\nvar _field = _interopRequireDefault(require(\"vant/es/field\"));\n\nrequire(\"vant/es/picker/style\");\n\nvar _picker = _interopRequireDefault(require(\"vant/es/picker\"));\n\nrequire(\"vant/es/datetime-picker/style\");\n\nvar _datetimePicker = _interopRequireDefault(require(\"vant/es/datetime-picker\"));\n\nrequire(\"vant/es/cell-group/style\");\n\nvar _cellGroup = _interopRequireDefault(require(\"vant/es/cell-group\"));\n\nrequire(\"vant/es/cell/style\");\n\nvar _cell = _interopRequireDefault(require(\"vant/es/cell\"));\n\nrequire(\"vant/es/nav-bar/style\");\n\nvar _navBar = _interopRequireDefault(require(\"vant/es/nav-bar\"));\n\nrequire(\"vant/es/popup/style\");\n\nvar _popup = _interopRequireDefault(require(\"vant/es/popup\"));\n\nrequire(\"vant/es/button/style\");\n\nvar _button = _interopRequireDefault(require(\"vant/es/button\"));\n\nrequire(\"vant/es/pagination/style\");\n\nvar _pagination = _interopRequireDefault(require(\"vant/es/pagination\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _xeUtils = _interopRequireDefault(require(\"xe-utils\"));\n\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _orderList = require(\"@/api/orderList\");\n\nvar _timers = require(\"timers\");\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 权限判断指令\n_vue.default.use(_pagination.default);\n\n_vue.default.use(_button.default);\n\n_vue.default.use(_popup.default);\n\n_vue.default.use(_navBar.default);\n\n_vue.default.use(_cell.default);\n\n_vue.default.use(_cellGroup.default);\n\n_vue.default.use(_datetimePicker.default);\n\n_vue.default.use(_picker.default);\n\n_vue.default.use(_field.default);\n\n_vue.default.use(_icon.default);\n\n_vue.default.use(_toast.default);\n\n_vue.default.use(_actionSheet.default);\n\n_vue.default.use(_search.default);\n\nvar _default = {\n  name: \"orderTable\",\n  props: [\"category\"],\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      pickerOptions: {\n        shortcuts: [{\n          text: \"上月\",\n          onClick: function onClick(picker) {\n            var start = new Date(new Date().getFullYear(), new Date().getMonth() - 1, 1);\n            var end = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }]\n      },\n      salemanOptions: [],\n      salesmanColumns: [],\n      channelOptions: [],\n      channelColumns: [],\n      productOptions: [],\n      productColumns: [],\n      colorOptions: [],\n      colorColumns: [],\n      usefulOptions: [{\n        value: \"0\",\n        label: \"是\"\n      }, {\n        value: \"1\",\n        label: \"否\"\n      }],\n      usefulColumns: [\"有效单\", \"无效单\"],\n      repeatOrderOptions: [{\n        value: \"0\",\n        label: \"是\"\n      }, {\n        value: \"1\",\n        label: \"否\"\n      }],\n      repeatOrderColumns: [\"重单\", \"不重单\"],\n      repeatNamePhoneOptions: [{\n        value: \"0\",\n        label: \"是\"\n      }, {\n        value: \"1\",\n        label: \"否\"\n      }],\n      repeatNamePhoneColumns: [\"重复\", \"不重复\"],\n      exportjdOptions: [{\n        value: \"0\",\n        label: \"是\"\n      }, {\n        value: \"1\",\n        label: \"否\"\n      }],\n      exportJDColumns: [\"已导入\", \"未导入\"],\n      timeSelectValue: \"\",\n      salemanValue: \"\",\n      channelValue: \"\",\n      productValue: \"\",\n      usefulValue: \"\",\n      repeatOrderValue: \"\",\n      repeatNamePhoneValue: \"\",\n      exportjdValue: \"\",\n      colorInput: \"\",\n      nameInput: \"\",\n      phoneNumberInput: \"\",\n      minIdInput: \"\",\n      maxIdInput: \"\",\n      minPriceInput: \"\",\n      maxPriceInput: \"\",\n      formLabelWidth: \"120px\",\n      editDialogVisible: false,\n      form: {\n        productType: \"\",\n        name: \"\",\n        color: \"\",\n        count: \"\",\n        price: \"\",\n        remarks: \"\",\n        address: \"\"\n      },\n      currentEditID: 0,\n      downloadLoading: false,\n      listLoading: false,\n      currentPage: 1,\n      //当前页\n      mobileCurrentPage: 1,\n      pagesizes: [300, 500, 1000, 5000],\n      //单页最大显示条数\n      pagesize: 300,\n      //单页内条数\n      listTotal: 0,\n      // 页面总数\n      salemanWidth: \"\",\n      importTypeDialogVisible: false,\n      multipleSelection: [],\n      clickFlag: null,\n      // 单击定时器\n      mobileSearchShow: false,\n      mobileDatePickerShow: false,\n      mobileSalesmanPickerShow: false,\n      mobileChannelPickerShow: false,\n      mobileProductPickerShow: false,\n      mobileUsefulPickerShow: false,\n      mobileRepeatOrderPickerShow: false,\n      mobileRepeatNamePhonePickerShow: false,\n      mobileExportJDPickerShow: false,\n      minDate: new Date(1950, 10, 1),\n      maxDate: new Date(),\n      currentDate: new Date(),\n      minDateEnd: new Date(),\n      maxDateStart: new Date(),\n      timePickerStartValue: \"请选择\",\n      timePickerEndValue: \"请选择\",\n      salesmanMobileValue: \"请选择\",\n      channelMobileValue: \"请选择\",\n      productMobileValue: \"请选择\",\n      usefulMobileValue: \"请选择\",\n      repeatOrderMobileValue: \"请选择\",\n      repeatNamePhoneMobileValue: \"请选择\",\n      exportJDMobileValue: \"请选择\",\n      nameMobileValue: \"\",\n      colorMobileValue: \"\",\n      phoneMobileValue: \"\",\n      minIdMobileValue: \"\",\n      maxIdMobileValue: \"\",\n      minPriceMobileValue: \"\",\n      maxPriceMobileValue: \"\",\n      device: \"\",\n      salesmanSearchValue: \"\",\n      channelSearchValue: \"\",\n      productSearchValue: \"\",\n      salesPickerCurrentSelect: 0,\n      channelPickerCurrentSelect: 0,\n      productPickerCurrentSelect: 0,\n      datetimePickerType: \"\",\n      mobileSearchButtonLoading: false,\n      tableMaxHeight: 0,\n      pageJumpIndex: 1,\n      searchButtonLoading: false,\n      clearSearchButtonLoading: false,\n      contains: false,\n      jdSelect: [],\n      productChangeLoading: false,\n      channelChangeLoading: false\n    };\n  },\n  created: function created() {\n    this.getList();\n    this.device = this.$store.state.app.device;\n    window.addEventListener(\"resize\", this.getHeight);\n    this.getHeight();\n    this.getSalesman(); // this.getChannel();\n    // this.getProduct();\n\n    this.getColor();\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener(\"resize\", this.getHeight);\n  },\n  computed: {\n    deviceVal: function deviceVal() {\n      return this.$store.state.app.device;\n    },\n    mode: function mode(val) {\n      return val == 0 ? \"不可用\" : \"可用\";\n    }\n  },\n  watch: {\n    deviceVal: function deviceVal(newVal, oldVal) {\n      this.device = newVal;\n    }\n  },\n  methods: {\n    // 获取数据\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      var searchList = [];\n      console.log(this.timeSelectValue);\n\n      if (this.timeSelectValue == null) {\n        this.timeSelectValue = \"\";\n      } else {\n        if (this.timeSelectValue == null) {\n          this.timeSelectValue = [\"\", \"\"];\n        } else {\n          this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\n        }\n      }\n\n      var paramsObj = {\n        contains: this.contains,\n        rows: this.pagesize,\n        page: this.currentPage\n      };\n      this.timeSelectValue[0] ? paramsObj.createTime = this.timeSelectValue[0] : \"\";\n      this.timeSelectValue[1] ? paramsObj.createTimeEnd = this.timeSelectValue[1] : \"\";\n      this.channelValue ? paramsObj.cid = this.channelValue : \"\";\n      this.minIdInput ? paramsObj.id = this.minIdInput : \"\";\n      this.maxIdInput ? paramsObj.idEnd = this.maxIdInput : \"\";\n      this.repeatOrderValue ? paramsObj.isRepeat = this.repeatOrderValue : \"\";\n      this.usefulValue ? paramsObj.mode = this.usefulValue : \"\";\n      this.nameInput ? paramsObj.name = this.nameInput : \"\";\n      this.productValue ? paramsObj.productId = this.productValue : \"\";\n      this.phoneNumberInput ? paramsObj.telephone = this.phoneNumberInput : \"\";\n      this.minPriceInput ? paramsObj.totalCost = this.minPriceInput : \"\";\n      this.maxPriceInput ? paramsObj.totalCostEnd = this.maxPriceInput : \"\";\n\n      if (this.salemanValue.length > 0) {\n        paramsObj.uids = this.salemanValue.join(\",\");\n      }\n\n      (0, _orderList.getOuterChainOrder)(this.category, paramsObj).then(function (res) {\n        _this.listTotal = res.data.total;\n        var tableData = res.data.rows;\n        tableData.forEach(function (tableItem) {\n          var id = tableItem.id,\n              cpName = tableItem.cpName,\n              pid = tableItem.pid,\n              productName = tableItem.productName,\n              colorName = tableItem.colorName,\n              username = tableItem.username,\n              telephone = tableItem.telephone,\n              totalCost = tableItem.totalCost,\n              pNum = tableItem.pNum,\n              num = tableItem.num,\n              price = tableItem.price,\n              size = tableItem.size,\n              isRepeat = tableItem.isRepeat,\n              address = tableItem.address,\n              createTime = tableItem.createTime,\n              remark = tableItem.remark,\n              mode = tableItem.mode,\n              isImport = tableItem.isImport,\n              name = tableItem.name,\n              uid = tableItem.uid,\n              operator = tableItem.operator,\n              operatingTime = tableItem.operatingTime;\n          var orderItem = {\n            id: id,\n            channel: cpName,\n            pid: pid,\n            productName: productName,\n            color: colorName,\n            name: name,\n            phoneNumber: telephone,\n            count: num,\n            price: totalCost,\n            size: size,\n            repeatOrder: isRepeat,\n            address: address,\n            createTime: createTime,\n            remarks: remark,\n            isUseful: mode,\n            logisticsState: isImport,\n            salesman: username,\n            uid: uid,\n            operator: operator,\n            nuclearOrderInterval: operatingTime\n          };\n          searchList.push(orderItem);\n        });\n        _this.list = searchList;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      (0, _timers.setTimeout)(function () {\n        _this.listLoading = false;\n      }, 1000);\n    },\n    // 获取业务员列表\n    getSalesman: function getSalesman() {\n      var _this2 = this;\n\n      (0, _orderList.getSalesmanList)().then(function (res) {\n        var salesmanList = res.data;\n        salesmanList.forEach(function (salesmanItem) {\n          var salesmanObject = {\n            value: salesmanItem.id,\n            label: salesmanItem.name\n          };\n\n          _this2.salemanOptions.push(salesmanObject);\n\n          _this2.salesmanColumns.push(salesmanItem.name);\n        });\n      });\n    },\n    // 获取渠道列表\n    getChannel: function getChannel() {\n      var _this3 = this;\n\n      (0, _orderList.getChannelList)().then(function (res) {\n        var channelList = res.data;\n        channelList.forEach(function (channelItem) {\n          var channelObject = {\n            value: channelItem.id,\n            label: channelItem.name\n          };\n\n          _this3.channelOptions.push(channelObject);\n\n          _this3.channelColumns.push(channelItem.name);\n        });\n      });\n    },\n    // 获取产品列表\n    getProduct: function getProduct() {\n      var _this4 = this;\n\n      (0, _orderList.getProductList)().then(function (res) {\n        var productList = res.data;\n        productList.forEach(function (productItem) {\n          var productObject = {\n            value: productItem.id,\n            label: productItem.name\n          };\n\n          _this4.productOptions.push(productObject);\n\n          _this4.productColumns.push(productItem.name);\n        });\n      });\n    },\n    // 获取颜色列表\n    getColor: function getColor() {\n      var _this5 = this;\n\n      (0, _orderList.getColorList)().then(function (res) {\n        var colorList = res.data;\n        colorList.forEach(function (colorItem) {\n          if (colorItem.name) {\n            var colorProject = {\n              value: colorItem.id,\n              label: colorItem.name\n            };\n\n            _this5.colorOptions.push(colorProject);\n\n            _this5.colorColumns.push(colorItem.name);\n          }\n        });\n      });\n    },\n    // 表格高度自适应\n    getHeight: function getHeight() {\n      var otherHeight = this.device == \"desktop\" ? 250 : 200;\n      this.tableMaxHeight = window.innerHeight - otherHeight;\n    },\n    // 单击复制\n    handleUseful: function handleUseful(_ref, event) {\n      var _this6 = this;\n\n      var row = _ref.row,\n          rowIndex = _ref.rowIndex,\n          column = _ref.column,\n          columnIndex = _ref.columnIndex;\n      if (this.device == \"mobile\") return;\n\n      if (this.clickFlag) {\n        (0, _timers.clearTimeout)(this.clickFlag);\n        this.clickFlag = null;\n      }\n\n      this.clickFlag = (0, _timers.setTimeout)(function () {\n        var count = 0;\n        if (column.title == undefined) return;\n\n        if (column.title == \"是否可用\") {\n          //判断权限\n          var roles = _store.default.getters && _store.default.getters.roles;\n\n          if (roles.indexOf(_this6.category + \"-list-mode\") == -1) {\n            return;\n          }\n\n          _this6.list.forEach(function (item) {\n            if (item.id == row.id) {\n              _this6.handleChangeUseful({\n                id: row.id,\n                mode: _this6.list[count].isUseful\n              });\n            } else {\n              count++;\n            }\n          });\n        } else {\n          var copyText = event.target.innerText;\n\n          if (copyText != \"\") {\n            var inputElement = document.getElementById(\"copy_content\");\n            inputElement.value = copyText;\n            inputElement.select();\n            document.execCommand(\"Copy\");\n\n            _this6.$message({\n              message: \"复制成功\",\n              type: \"success\"\n            });\n          } else {\n            _this6.$message.error(\"复制失败，内容可能为空\");\n          }\n        }\n      }, 300);\n    },\n    // 修改可用状态\n    handleChangeUseful: function handleChangeUseful(data) {\n      var _this7 = this;\n\n      var id = data.id,\n          mode = data.mode;\n      var modeInt;\n      mode == 1 ? modeInt = 0 : modeInt = 1;\n      (0, _orderList.editOuterChainUsefulStatus)(this.category, {\n        id: id,\n        mode: modeInt\n      }).then(function (res) {\n        _this7.getList();\n\n        (0, _timers.setTimeout)(function () {\n          _this7.$message({\n            message: \"修改成功\",\n            type: \"success\"\n          });\n        }, 1000);\n      }).catch(function (error) {\n        _this7.$message.error(\"修改失败\");\n\n        console.log(error);\n      });\n    },\n    // 双击编辑\n    handleEdit: function handleEdit(_ref2, event) {\n      var row = _ref2.row,\n          rowIndex = _ref2.rowIndex,\n          column = _ref2.column,\n          columnIndex = _ref2.columnIndex;\n      if (this.device == \"mobile\") return; //判断权限\n\n      var roles = _store.default.getters && _store.default.getters.roles;\n\n      if (roles.indexOf(this.category + \"-list-update\") == -1) {\n        return;\n      }\n\n      if (this.clickFlag) {\n        (0, _timers.clearTimeout)(this.clickFlag);\n        this.clickFlag = null;\n      }\n\n      this.form.productType = row.productName;\n      this.form.name = row.name;\n      this.form.color = row.color;\n      this.form.count = row.count;\n      this.form.price = row.price;\n      this.form.remarks = row.remarks;\n      this.form.address = row.address;\n      this.currentEditID = row.id;\n      this.editDialogVisible = true;\n    },\n    // 取消编辑\n    handleEditCancel: function handleEditCancel() {\n      this.editDialogVisible = false;\n    },\n    // 确认编辑\n    handleEditConfirm: function handleEditConfirm(row, column, event) {\n      var _this8 = this;\n\n      var count = 0;\n      var productId;\n      var colorId;\n      this.list.forEach(function (item) {\n        if (item.id == _this8.currentEditID) {\n          _this8.productOptions.forEach(function (productItem) {\n            if (productItem.label === _this8.form.productType) {\n              productId = productItem.value;\n            }\n          });\n\n          if (_this8.form.color == null) {\n            _this8.form.color = undefined;\n          }\n\n          var params = {\n            id: _this8.list[count].id,\n            productId: productId,\n            name: _this8.form.name,\n            colorName: _this8.form.color,\n            num: _this8.form.count,\n            totalCost: _this8.form.price,\n            remark: _this8.form.remarks,\n            address: _this8.form.address\n          };\n          (0, _orderList.editOuterChainOrder)(_this8.category, params).then(function (res) {\n            _this8.getList();\n\n            (0, _timers.setTimeout)(function () {\n              _this8.$message({\n                message: \"修改成功\",\n                type: \"success\"\n              });\n            }, 1000);\n          }).catch(function (error) {\n            _this8.$message.error(\"修改失败\");\n\n            console.log(error);\n          });\n        } else {\n          count++;\n        }\n      });\n      this.editDialogVisible = false;\n    },\n    // 搜索验证\n    searchVerify: function searchVerify() {\n      if (this.minIdInput && !this.maxIdInput || !this.minIdInput && this.maxIdInput) {\n        this.$message({\n          message: \"未填写完整的ID范围\",\n          type: \"warning\"\n        });\n        return false;\n      }\n\n      if (this.minPriceInput && !this.maxPriceInput || !this.minPriceInput && this.maxPriceInput) {\n        this.$message({\n          message: \"未填写完整的价格范围\",\n          type: \"warning\"\n        });\n        return false;\n      }\n    },\n    // 搜索\n    handleSearch: function handleSearch() {\n      if (this.searchVerify()) return;\n      this.searchButtonLoading = true;\n      this.getList();\n      this.searchButtonLoading = false;\n    },\n    // 清空搜索项\n    handleClearSearch: function handleClearSearch() {\n      this.timeSelectValue = \"\";\n      this.salemanValue = [];\n      this.channelValue = \"\";\n      this.productValue = \"\";\n      this.colorInput = \"\";\n      this.nameInput = \"\";\n      this.phoneNumberInput = \"\";\n      this.usefulValue = \"\";\n      this.repeatOrderValue = \"\";\n      this.repeatNamePhoneValue = \"\";\n      this.exportjdValue = \"\";\n      this.minIdInput = \"\";\n      this.maxIdInput = \"\";\n      this.minPriceInput = \"\";\n      this.maxPriceInput = \"\";\n      this.salemanChange();\n    },\n    // 页面条数切换\n    handleSizeChange: function handleSizeChange(val) {\n      this.pagesize = val;\n      this.getList();\n    },\n    //选择表格当前页数\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.getList();\n    },\n    // 导出excel\n    handleDownload: function handleDownload() {\n      this.downloadLoading = true;\n\n      if (this.multipleSelection.length === 0) {\n        this.$message.error(\"未选择任何数据\");\n        this.downloadLoading = false;\n        return;\n      }\n\n      var ids = [];\n      this.multipleSelection.forEach(function (selectItem) {\n        ids.push(selectItem.id);\n      });\n      var idsStr = ids.join(\",\");\n      (0, _orderList.exportOuterChainExcel)(this.category, {\n        ids: idsStr,\n        logistics: \"yd\"\n      }).then(function (res) {\n        var blob = new Blob([res], {\n          type: \"application/vnd.mx-excel;charset=utf-8\"\n        });\n        var myDate = new Date();\n        var year = myDate.getFullYear();\n        var month = myDate.getMonth() + 1;\n        var day = myDate.getDate();\n        var downloadElement = document.createElement(\"a\");\n        var href = window.URL.createObjectURL(blob); //创建下载的链接\n\n        downloadElement.href = href;\n        downloadElement.download = \"\\u8BA2\\u5355 \".concat(year, \"-\").concat(month, \"-\").concat(day, \".xls\"); //下载后文件名\n\n        document.body.appendChild(downloadElement);\n        downloadElement.click(); //点击下载\n\n        document.body.removeChild(downloadElement); //下载完成移除元素\n\n        window.URL.revokeObjectURL(href); //释放掉blob对象\n      });\n      this.downloadLoading = false;\n    },\n    // 业务员选择器宽度自适应\n    salemanChange: function salemanChange() {\n      var inputWidth = 178; //选择器原始宽度 178px\n\n      var optionWidth = this.salemanValue.length * 65 + 97; //一个标签宽度65px 右边预留97px\n\n      this.salemanWidth = optionWidth > inputWidth ? \"width:\" + optionWidth + \"px\" : \"width:\" + inputWidth + \"px\";\n    },\n    // 选择发生改变\n    handleSelectChange: function handleSelectChange(_ref3, event) {\n      var selection = _ref3.selection,\n          checked = _ref3.checked,\n          row = _ref3.row,\n          column = _ref3.column;\n      this.multipleSelection = selection;\n    },\n    // 全选\n    handleSelectAll: function handleSelectAll(_ref4, event) {\n      var selection = _ref4.selection,\n          checked = _ref4.checked;\n      this.multipleSelection = selection;\n    },\n    // 导出德邦\n    handleExportDB: function handleExportDB() {\n      this.downloadLoading = true;\n\n      if (this.multipleSelection.length === 0) {\n        this.$message.error(\"未选择任何数据\");\n        this.downloadLoading = false;\n        return;\n      }\n\n      var ids = [];\n      this.multipleSelection.forEach(function (selectItem) {\n        ids.push(selectItem.id);\n      });\n      var idsStr = ids.join(\",\");\n      (0, _orderList.exportOuterChainExcel)(this.category, {\n        ids: idsStr,\n        logistics: \"deppon\"\n      }).then(function (res) {\n        var blob = new Blob([res], {\n          type: \"application/vnd.mx-excel;charset=utf-8\"\n        });\n        var myDate = new Date();\n        var year = myDate.getFullYear();\n        var month = myDate.getMonth() + 1;\n        var day = myDate.getDate();\n        var downloadElement = document.createElement(\"a\");\n        var href = window.URL.createObjectURL(blob); //创建下载的链接\n\n        downloadElement.href = href;\n        downloadElement.download = \"\\u8BA2\\u5355 \".concat(year, \"-\").concat(month, \"-\").concat(day, \".xls\"); //下载后文件名\n\n        document.body.appendChild(downloadElement);\n        downloadElement.click(); //点击下载\n\n        document.body.removeChild(downloadElement); //下载完成移除元素\n\n        window.URL.revokeObjectURL(href); //释放掉blob对象\n      });\n      this.downloadLoading = false;\n    },\n    // 批量导入京东\n    handleBatchImportIntoJD: function handleBatchImportIntoJD() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.error(\"未选择任何数据\");\n      } else {\n        this.jdSelect = this.multipleSelection;\n        this.importTypeDialogVisible = true;\n      }\n    },\n    // 空运\n    handleImportSky: function handleImportSky() {\n      var ids = [];\n      this.jdSelect.forEach(function (item) {\n        ids.push(item.id);\n      });\n      var idsStr = ids.join(\",\");\n      (0, _orderList.importJD)(this.category, {\n        ids: idsStr,\n        trans: 2\n      }).then(function (res) {});\n      this.$message.success(\"操作成功\");\n      this.importTypeDialogVisible = false;\n    },\n    // 陆运\n    handleImportLand: function handleImportLand() {\n      var ids = [];\n      this.jdSelect.forEach(function (item) {\n        ids.push(item.id);\n      });\n      var idsStr = ids.join(\",\");\n      (0, _orderList.importJD)(this.category, {\n        ids: idsStr,\n        trans: 1\n      }).then(function (res) {});\n      this.$message.success(\"操作成功\");\n      this.importTypeDialogVisible = false;\n    },\n    // 合计\n    footerMethod: function footerMethod(_ref5) {\n      var columns = _ref5.columns,\n          data = _ref5.data;\n      return [columns.map(function (column, columnIndex) {\n        if (columnIndex === 1) {\n          return \"合计\";\n        }\n\n        if ([\"count\", \"price\"].includes(column.property)) {\n          return _xeUtils.default.sum(data, column.property);\n        }\n\n        return \"-\";\n      })];\n    },\n    // 刷新\n    handleRefresh: function handleRefresh() {\n      this.getList();\n    },\n    // 点击产品下拉框\n    productVisibleChange: function productVisibleChange(res) {\n      var _this9 = this;\n\n      if (res) {\n        this.productChangeLoading = true;\n        var paramsObj = {\n          channel: this.category\n        };\n\n        if (this.timeSelectValue == null) {\n          this.timeSelectValue = [\"\", \"\"];\n        } else {\n          this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\n        }\n\n        this.timeSelectValue[0] ? paramsObj.createTime = this.timeSelectValue[0] : \"\";\n        this.timeSelectValue[1] ? paramsObj.createTimeEnd = this.timeSelectValue[1] : \"\";\n        this.channelValue ? paramsObj.cid = this.channelValue : \"\";\n        this.minIdInput ? paramsObj.id = this.minIdInput : \"\";\n        this.maxIdInput ? paramsObj.idEnd = this.maxIdInput : \"\";\n        this.repeatOrderValue ? paramsObj.isRepeat = this.repeatOrderValue : \"\";\n        this.usefulValue ? paramsObj.mode = this.usefulValue : \"\";\n        this.nameInput ? paramsObj.name = this.nameInput : \"\";\n        this.productValue ? paramsObj.productId = this.productValue : \"\";\n        this.phoneNumberInput ? paramsObj.telephone = this.phoneNumberInput : \"\";\n        this.minPriceInput ? paramsObj.totalCost = this.minPriceInput : \"\";\n        this.maxPriceInput ? paramsObj.totalCostEnd = this.maxPriceInput : \"\";\n\n        if (this.salemanValue.length > 0) {\n          paramsObj.uids = this.salemanValue.join(\",\");\n        }\n\n        (0, _orderList.getProductSelectList)(paramsObj, this.category).then(function (res) {\n          var tableList = res.data;\n          var productList = [];\n          tableList.forEach(function (tableItem) {\n            var name = tableItem.name,\n                id = tableItem.id;\n            var productItem = {\n              label: name,\n              value: id\n            };\n            productList.push(productItem);\n          });\n          _this9.productOptions = productList;\n        });\n        this.productChangeLoading = false;\n      }\n    },\n    // 点击渠道下拉框\n    channelVisibleChange: function channelVisibleChange(res) {\n      var _this10 = this;\n\n      if (res) {\n        this.channelChangeLoading = true;\n        var paramsObj = {\n          channel: this.category\n        };\n\n        if (this.timeSelectValue == null) {\n          this.timeSelectValue = [\"\", \"\"];\n        } else {\n          this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\n        }\n\n        this.timeSelectValue[0] ? paramsObj.createTime = this.timeSelectValue[0] : \"\";\n        this.timeSelectValue[1] ? paramsObj.createTimeEnd = this.timeSelectValue[1] : \"\";\n        this.channelValue ? paramsObj.cid = this.channelValue : \"\";\n        this.minIdInput ? paramsObj.id = this.minIdInput : \"\";\n        this.maxIdInput ? paramsObj.idEnd = this.maxIdInput : \"\";\n        this.repeatOrderValue ? paramsObj.isRepeat = this.repeatOrderValue : \"\";\n        this.usefulValue ? paramsObj.mode = this.usefulValue : \"\";\n        this.nameInput ? paramsObj.name = this.nameInput : \"\";\n        this.productValue ? paramsObj.productId = this.productValue : \"\";\n        this.phoneNumberInput ? paramsObj.telephone = this.phoneNumberInput : \"\";\n        this.minPriceInput ? paramsObj.totalCost = this.minPriceInput : \"\";\n        this.maxPriceInput ? paramsObj.totalCostEnd = this.maxPriceInput : \"\";\n\n        if (this.salemanValue.length > 0) {\n          paramsObj.uids = this.salemanValue.join(\",\");\n        }\n\n        (0, _orderList.getChannelSelectList)(paramsObj, this.category).then(function (res) {\n          console.log(res);\n          var tableList = res.data;\n          var channelList = [];\n          tableList.forEach(function (tableItem) {\n            var name = tableItem.name,\n                id = tableItem.id;\n            var channelItem = {\n              label: name,\n              value: id\n            };\n            channelList.push(channelItem);\n          });\n          _this10.channelOptions = channelList;\n        });\n        this.channelChangeLoading = false;\n      }\n    },\n\n    /* 移动端事件 */\n    // 获取数据\n    getMobileList: function getMobileList() {\n      var _this11 = this;\n\n      this.listLoading = true;\n      var timeStartValue = \"\";\n      var timeEndValue = \"\";\n      var productId = \"\";\n      var uids = [];\n      var repeatOrder = \"\";\n      var usefulOrder = \"\";\n      this.timePickerStartValue == \"请选择\" ? timeStartValue = \"\" : timeStartValue = this.timePickerStartValue.replace(/\\//g, \"-\");\n      this.timePickerEndValue == \"请选择\" ? timeEndValue = \"\" : timeEndValue = this.timePickerEndValue.replace(/\\//g, \"-\");\n\n      if (this.productMobileValue != \"请选择\") {\n        this.productOptions.forEach(function (productItem) {\n          if (productItem.label == _this11.productMobileValue) {\n            productId = productItem.value;\n          }\n        });\n      } else {\n        productId = \"\";\n      }\n\n      if (this.salesmanMobileValue != \"请选择\") {\n        var salesmanArr;\n\n        if (this.salesmanMobileValue.length > 1) {\n          salesmanArr = this.salesmanMobileValue.split(\",\");\n          salesmanArr.forEach(function (salesmanItem) {\n            _this11.salemanOptions.forEach(function (optionItem) {\n              if (salesmanItem == optionItem.label) {\n                uids.push(optionItem.value);\n              }\n            });\n          });\n        } else {\n          this.salemanOptions.forEach(function (optionItem) {\n            if (optionItem.label == _this11.salesmanMobileValue) {\n              uids.push(optionItem.value);\n            }\n          });\n        }\n      }\n\n      if (this.repeatOrderMobileValue != \"请选择\") {\n        this.repeatOrderMobileValue == \"重单\" ? repeatOrder = 1 : repeatOrder = 0;\n      } else {\n        repeatOrder = \"\";\n      }\n\n      if (this.usefulMobileValue != \"请选择\") {\n        this.usefulMobileValue == \"有效单\" ? usefulOrder = 1 : usefulOrder = 0;\n      } else {\n        usefulOrder = \"\";\n      }\n\n      var searchList = [];\n      var paramsObj = {\n        contains: this.contains,\n        rows: this.pagesize,\n        page: this.mobileCurrentPage\n      };\n      timeStartValue ? paramsObj.createTime = timeStartValue : \"\";\n      timeEndValue ? paramsObj.createTimeEnd = timeEndValue : \"\";\n      this.channelValue ? paramsObj.cid = this.channelValue : \"\";\n      this.minIdMobileValue ? paramsObj.id = this.minIdMobileValue : \"\";\n      this.maxIdMobileValue ? paramsObj.idEnd = this.maxIdMobileValue : \"\";\n      repeatOrder ? paramsObj.isRepeat = repeatOrder : \"\";\n      usefulOrder ? paramsObj.mode = usefulOrder : \"\";\n      this.nameMobileValue ? paramsObj.name = this.nameMobileValue : \"\";\n      productId ? paramsObj.productId : \"\";\n      this.phoneMobileValue ? paramsObj.telephone = this.phoneMobileValue : \"\";\n      this.minPriceMobileValue ? paramsObj.totalCost = this.minPriceMobileValue : \"\";\n      this.maxPriceMobileValue ? paramsObj.totalCostEnd = this.maxPriceMobileValue : \"\";\n\n      if (uids.length > 0) {\n        paramsObj.uids = uids.join(\",\");\n      }\n\n      (0, _orderList.getOuterChainOrder)(this.category, paramsObj).then(function (res) {\n        _this11.listTotal = res.data.total;\n        var tableData = res.data.rows;\n        tableData.forEach(function (tableItem) {\n          var id = tableItem.id,\n              cpName = tableItem.cpName,\n              pid = tableItem.pid,\n              productName = tableItem.productName,\n              colorName = tableItem.colorName,\n              username = tableItem.username,\n              telephone = tableItem.telephone,\n              totalCost = tableItem.totalCost,\n              pNum = tableItem.pNum,\n              num = tableItem.num,\n              price = tableItem.price,\n              size = tableItem.size,\n              isRepeat = tableItem.isRepeat,\n              address = tableItem.address,\n              createTime = tableItem.createTime,\n              remark = tableItem.remark,\n              mode = tableItem.mode,\n              isImport = tableItem.isImport,\n              name = tableItem.name,\n              uid = tableItem.uid,\n              operator = tableItem.operator,\n              operatingTime = tableItem.operatingTime;\n          var orderItem = {\n            id: id,\n            channel: cpName,\n            pid: pid,\n            productName: productName,\n            color: colorName,\n            name: name,\n            phoneNumber: telephone,\n            count: num,\n            price: totalCost,\n            size: size,\n            repeatOrder: isRepeat,\n            address: address,\n            createTime: createTime,\n            remarks: remark,\n            isUseful: mode,\n            logisticsState: isImport,\n            salesman: username,\n            uid: uid,\n            operator: operator,\n            nuclearOrderInterval: operatingTime\n          };\n          searchList.push(orderItem);\n        });\n        _this11.list = searchList;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      (0, _timers.setTimeout)(function () {\n        _this11.listLoading = false;\n      }, 1000);\n    },\n    // 分页器\n    handlePageChange: function handlePageChange() {\n      this.getMobileList();\n    },\n    // 点击搜索\n    handleSearchMobile: function handleSearchMobile() {\n      if (!this.mobileSearchShow) {\n        this.mobileSearchShow = true;\n      }\n    },\n    // 取消搜索\n    handleSearchMobileCancel: function handleSearchMobileCancel() {\n      if (this.mobileSearchShow) {\n        this.mobileSearchShow = false;\n      }\n    },\n    // 刷新\n    handleRefreshMobile: function handleRefreshMobile() {\n      this.getMobileList();\n    },\n    // 清空所选\n    handleSearchMobileClearAll: function handleSearchMobileClearAll() {\n      this.timePickerStartValue == \"请选择\" ? \"\" : this.timePickerStartValue = \"请选择\", this.timePickerEndValue == \"请选择\" ? \"\" : this.timePickerEndValue = \"请选择\", this.salesmanMobileValue == \"请选择\" ? \"\" : this.salesmanMobileValue = \"请选择\", this.channelMobileValue == \"请选择\" ? \"\" : this.channelMobileValue = \"请选择\", this.productMobileValue == \"请选择\" ? \"\" : this.productMobileValue = \"请选择\", this.usefulMobileValue == \"请选择\" ? \"\" : this.usefulMobileValue = \"请选择\", this.repeatOrderMobileValue == \"请选择\" ? \"\" : this.repeatOrderMobileValue = \"请选择\", this.repeatNamePhoneMobileValue == \"请选择\" ? \"\" : this.repeatNamePhoneMobileValue = \"请选择\", this.exportJDMobileValue == \"请选择\" ? \"\" : this.exportJDMobileValue = \"请选择\", this.nameMobileValue == \"\" ? \"\" : this.nameMobileValue = \"\", this.colorMobileValue == \"\" ? \"\" : this.colorMobileValue = \"\", this.phoneMobileValue == \"\" ? \"\" : this.phoneMobileValue = \"\", this.maxIdMobileValue == \"\" ? \"\" : this.maxIdMobileValue = \"\", this.minIdMobileValue == \"\" ? \"\" : this.minIdMobileValue = \"\", this.maxPriceMobileValue == \"\" ? \"\" : this.maxPriceMobileValue = \"\", this.minPriceMobileValue == \"\" ? \"\" : this.minPriceMobileValue = \"\";\n    },\n    // 选择开始日期\n    handleChooseDateStartMobile: function handleChooseDateStartMobile() {\n      if (!this.mobileDatePickerShow) {\n        if (this.timePickerEndValue != \"请选择\") {\n          var maxDate_ = this.timePickerEndValue;\n          maxDate_ = maxDate_.replace(/-/g, \"/\");\n          var date = new Date(maxDate_);\n          this.maxDateStart = date;\n        }\n\n        this.datetimePickerType = \"start\";\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\n      }\n    },\n    // 选择结束日期\n    handleChooseDateEndMobile: function handleChooseDateEndMobile() {\n      if (!this.mobileDatePickerShow) {\n        if (this.timePickerStartValue != \"请选择\") {\n          var maxDate_ = this.timePickerStartValue;\n          maxDate_ = maxDate_.replace(/-/g, \"/\");\n          var date = new Date(maxDate_);\n          this.minDateEnd = date;\n        }\n\n        this.datetimePickerType = \"end\";\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\n      }\n    },\n    datetimePickerChange: function datetimePickerChange(e) {},\n    // 确认选择日期\n    datetimePickerConfirm: function datetimePickerConfirm(res) {\n      if (this.mobileDatePickerShow) {\n        if (this.datetimePickerType == \"start\") {\n          this.timePickerStartValue = res.toLocaleDateString();\n        } else {\n          this.timePickerEndValue = res.toLocaleDateString();\n        }\n\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\n      }\n    },\n    // 取消选择日期\n    datetimePickerCancel: function datetimePickerCancel() {\n      this.mobileDatePickerShow = !this.mobileDatePickerShow;\n    },\n    // 选择业务员\n    handleChooseSalesman: function handleChooseSalesman() {\n      if (!this.mobileSalesmanPickerShow) {\n        this.mobileSalesmanPickerShow = !this.mobileSalesmanPickerShow;\n      }\n    },\n    // 选择渠道\n    handleChooseChannel: function handleChooseChannel() {\n      if (!this.mobileChannelPickerShow) {\n        this.mobileChannelPickerShow = !this.mobileChannelPickerShow;\n      }\n    },\n    // 选择产品\n    handleChooseProduct: function handleChooseProduct() {\n      if (!this.mobileProductPickerShow) {\n        this.mobileProductPickerShow = !this.mobileProductPickerShow;\n      }\n    },\n    // 选择是否有效\n    handleChooseIsUseful: function handleChooseIsUseful() {\n      if (!this.mobileUsefulPickerShow) {\n        this.mobileUsefulPickerShow = !this.mobileUsefulPickerShow;\n      }\n    },\n    // 选择是否重单\n    handleChooseIsRepeatOrder: function handleChooseIsRepeatOrder() {\n      if (!this.mobileRepeatOrderPickerShow) {\n        this.mobileRepeatOrderPickerShow = !this.mobileRepeatOrderPickerShow;\n      }\n    },\n    // 选择是否重复电话姓名\n    handleChooseIsRepeatPhoneName: function handleChooseIsRepeatPhoneName() {\n      if (!this.mobileRepeatNamePhonePickerShow) {\n        this.mobileRepeatNamePhonePickerShow = !this.mobileRepeatNamePhonePickerShow;\n      }\n    },\n    // 选择是否导入京东\n    handleChooseExportJD: function handleChooseExportJD() {\n      if (!this.mobileExportJDPickerShow) {\n        this.mobileExportJDPickerShow = !this.mobileExportJDPickerShow;\n      }\n    },\n    // 确认选择业务员\n    salesmanPickerConfirm: function salesmanPickerConfirm(res) {\n      if (this.mobileSalesmanPickerShow) {\n        if (this.salesmanMobileValue == \"请选择\") {\n          this.salesmanMobileValue = res;\n        } else {\n          if (this.salesmanMobileValue.indexOf(\",\") != -1) {\n            var salesmanArr = new Array();\n            salesmanArr = this.salesmanMobileValue.split(\",\");\n\n            if (salesmanArr.indexOf(res) == -1) {\n              this.salesmanMobileValue = this.salesmanMobileValue + \",\" + res;\n            } else {\n              (0, _toast.default)(\"请勿重复选择\");\n            }\n          } else {\n            if (this.salesmanMobileValue != res) {\n              this.salesmanMobileValue = this.salesmanMobileValue + \",\" + res;\n            } else {\n              (0, _toast.default)(\"请勿重复选择\");\n            }\n          }\n        }\n\n        this.mobileSalesmanPickerShow = !this.mobileSalesmanPickerShow;\n      }\n    },\n    // 确认选择渠道\n    channelPickerConfirm: function channelPickerConfirm(res) {\n      if (this.mobileChannelPickerShow) {\n        this.channelMobileValue = res;\n        this.mobileChannelPickerShow = !this.mobileChannelPickerShow;\n      }\n    },\n    // 确认选择产品\n    productPickerConfirm: function productPickerConfirm(res) {\n      if (this.mobileProductPickerShow) {\n        this.productMobileValue = res;\n        this.mobileProductPickerShow = !this.mobileProductPickerShow;\n      }\n    },\n    // 确认选择是否有效\n    usefulPickerConfirm: function usefulPickerConfirm(res) {\n      if (this.mobileUsefulPickerShow) {\n        this.usefulMobileValue = res;\n        this.mobileUsefulPickerShow = !this.mobileUsefulPickerShow;\n      }\n    },\n    // 确认选择是否重单\n    repeatOrderPickerConfirm: function repeatOrderPickerConfirm(res) {\n      if (this.mobileRepeatOrderPickerShow) {\n        this.repeatOrderMobileValue = res;\n        this.mobileRepeatOrderPickerShow = !this.mobileRepeatOrderPickerShow;\n      }\n    },\n    // 确认选择是否重复电话姓名\n    repeatNamePhonePickerConfirm: function repeatNamePhonePickerConfirm(res) {\n      if (this.mobileRepeatNamePhonePickerShow) {\n        this.repeatNamePhoneMobileValue = res;\n        this.mobileRepeatNamePhonePickerShow = !this.mobileRepeatNamePhonePickerShow;\n      }\n    },\n    // 确认选择是否导入京东\n    exportJDPickerConfirm: function exportJDPickerConfirm(res) {\n      if (this.mobileExportJDPickerShow) {\n        this.exportJDMobileValue = res;\n        this.mobileExportJDPickerShow = !this.mobileExportJDPickerShow;\n      }\n    },\n    // 导入京东方式\n    mobileExportJDSelect: function mobileExportJDSelect(item) {\n      this.mobileExportJDDialogShow = false;\n\n      _toast.default.success(item.name + \"成功\");\n    },\n    // 取消导入京东\n    mobileExportJDCancel: function mobileExportJDCancel() {},\n    // 业务员快捷搜索\n    handleSearchSalesmanItem: function handleSearchSalesmanItem() {\n      this.salesPickerCurrentSelect = this.salesmanColumns.indexOf(this.salesmanSearchValue);\n    },\n    // 渠道快捷搜索\n    handleSearchChannelItem: function handleSearchChannelItem() {\n      this.channelPickerCurrentSelect = this.channelColumns.indexOf(this.channelSearchValue);\n    },\n    // 产品快捷搜索\n    handleSearchProductItem: function handleSearchProductItem() {\n      this.productPickerCurrentSelect = this.productColumns.indexOf(this.productSearchValue);\n    },\n    // 开始搜索\n    handleMobileSearch: function handleMobileSearch() {\n      this.mobileSearchButtonLoading = true;\n      this.getMobileList();\n      this.mobileSearchButtonLoading = false;\n      this.mobileSearchShow = false;\n    },\n    // 限制页面跳转输入框只能输入数字\n    jumpPageInput: function jumpPageInput() {\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\n    },\n    // 跳转指定页面\n    handleJumpPage: function handleJumpPage() {\n      var _this12 = this;\n\n      var jumpPage = parseInt(this.pageJumpIndex);\n      if (jumpPage == this.mobileCurrentPage) return;\n\n      if (jumpPage > Math.ceil(this.listTotal / this.pagesize)) {\n        jumpPage = Math.ceil(this.listTotal / this.pagesize);\n      }\n\n      if (jumpPage < 1) {\n        jumpPage = 1;\n      }\n\n      (0, _timers.setTimeout)(function () {\n        _this12.pageJumpIndex = jumpPage;\n        _this12.mobileCurrentPage = jumpPage;\n\n        _this12.getMobileList();\n      }, 1000);\n    }\n  }\n};\nexports.default = _default;",null]}