{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system\\user.vue","mtime":1562578759624},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\yet\\\\project\\\\longhuiteng_management_system\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"vant/es/search/style\");\n\nvar _search = _interopRequireDefault(require(\"vant/es/search\"));\n\nrequire(\"vant/es/action-sheet/style\");\n\nvar _actionSheet = _interopRequireDefault(require(\"vant/es/action-sheet\"));\n\nrequire(\"vant/es/toast/style\");\n\nvar _toast = _interopRequireDefault(require(\"vant/es/toast\"));\n\nrequire(\"vant/es/icon/style\");\n\nvar _icon = _interopRequireDefault(require(\"vant/es/icon\"));\n\nrequire(\"vant/es/field/style\");\n\nvar _field = _interopRequireDefault(require(\"vant/es/field\"));\n\nrequire(\"vant/es/picker/style\");\n\nvar _picker = _interopRequireDefault(require(\"vant/es/picker\"));\n\nrequire(\"vant/es/datetime-picker/style\");\n\nvar _datetimePicker = _interopRequireDefault(require(\"vant/es/datetime-picker\"));\n\nrequire(\"vant/es/cell-group/style\");\n\nvar _cellGroup = _interopRequireDefault(require(\"vant/es/cell-group\"));\n\nrequire(\"vant/es/cell/style\");\n\nvar _cell = _interopRequireDefault(require(\"vant/es/cell\"));\n\nrequire(\"vant/es/nav-bar/style\");\n\nvar _navBar = _interopRequireDefault(require(\"vant/es/nav-bar\"));\n\nrequire(\"vant/es/popup/style\");\n\nvar _popup = _interopRequireDefault(require(\"vant/es/popup\"));\n\nrequire(\"vant/es/button/style\");\n\nvar _button = _interopRequireDefault(require(\"vant/es/button\"));\n\nrequire(\"vant/es/pagination/style\");\n\nvar _pagination = _interopRequireDefault(require(\"vant/es/pagination\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\n\nvar _permission = _interopRequireDefault(require(\"@/utils/permission\"));\n\nvar _orderList = require(\"@/api/orderList\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 权限判断指令\n// 权限判断函数\n_vue.default.use(_pagination.default);\n\n_vue.default.use(_button.default);\n\n_vue.default.use(_popup.default);\n\n_vue.default.use(_navBar.default);\n\n_vue.default.use(_cell.default);\n\n_vue.default.use(_cellGroup.default);\n\n_vue.default.use(_datetimePicker.default);\n\n_vue.default.use(_picker.default);\n\n_vue.default.use(_field.default);\n\n_vue.default.use(_icon.default);\n\n_vue.default.use(_toast.default);\n\n_vue.default.use(_actionSheet.default);\n\n_vue.default.use(_search.default);\n\nvar _default = {\n  name: 'system-user',\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      usernameInput: \"\",\n      usefulValue: \"\",\n      usefulOptions: [{\n        value: \"1\",\n        label: \"是\"\n      }, {\n        value: \"0\",\n        label: \"否\"\n      }],\n      usefulColumns: [\"是\", \"否\"],\n      formLabelWidth: \"120px\",\n      dialogTableVisible: false,\n      currentPage: 1,\n      //当前页\n      pagesizes: [100, 200, 500],\n      //单页最大显示条数\n      pagesize: 100,\n      //单页内条数\n      device: \"\",\n      mobileSearchShow: false,\n      mobileSearchButtonLoading: false,\n      tableMaxHeight: 0,\n      addDialogVisible: false,\n      updateDialogVisible: false,\n      form: {\n        checkList: [],\n        username: \"\",\n        name: \"\",\n        password: \"\",\n        telephone: \"\"\n      },\n      updateForm: {\n        checkList: [],\n        username: \"\",\n        name: \"\",\n        password: \"\",\n        telephone: \"\",\n        mode: \"\"\n      },\n      permissionList: [],\n      updatePermissionList: [],\n      paramsStorage: {},\n      listLoading: false,\n      multipleSelection: [],\n      updateId: \"\",\n      checkAll: false,\n      isIndeterminate: false\n    };\n  },\n  created: function created() {\n    this.list = this.getOrderList();\n    this.device = this.$store.state.app.device;\n    this.getHeight();\n  },\n  computed: {\n    deviceVal: function deviceVal() {\n      return this.$store.state.app.device;\n    }\n  },\n  watch: {\n    deviceVal: function deviceVal(newVal, oldVal) {\n      this.device = newVal;\n    }\n  },\n  methods: {\n    checkPermission: _permission.default,\n    // 获取表格列表\n    getOrderList: function getOrderList() {\n      var orderList = [];\n      this.listLoading = true;\n      (0, _orderList.getUserList)({\n        page: 1,\n        rows: 500\n      }).then(function (res) {\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var id = tableItem.id,\n              username = tableItem.username,\n              name = tableItem.name,\n              telephone = tableItem.telephone,\n              mode = tableItem.mode;\n          var orderItem = {\n            id: id,\n            username: username,\n            name: name,\n            phoneNumber: telephone,\n            isUseful: mode\n          };\n          orderList.push(orderItem);\n        });\n      });\n      this.listLoading = false;\n      return orderList;\n    },\n    //表格高度自适应\n    getHeight: function getHeight() {\n      var otherHeight = this.device == \"desktop\" ? 250 : 200;\n      this.tableMaxHeight = window.innerHeight - otherHeight;\n    },\n    // 页面条数切换\n    handleSizeChange: function handleSizeChange(val) {\n      var _this = this;\n\n      this.listLoading = true;\n      setTimeout(function () {\n        _this.pagesize = val;\n        _this.listLoading = false;\n      }, 500);\n    },\n    //选择表格当前页数\n    handleCurrentChange: function handleCurrentChange(val) {\n      var _this2 = this;\n\n      this.listLoading = true;\n      setTimeout(function () {\n        _this2.currentPage = val;\n        _this2.listLoading = false;\n      }, 500);\n    },\n    // 选择改变\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    // 搜索\n    handleSearch: function handleSearch() {\n      var searchList = [];\n      this.listLoading = true;\n      var name = this.usernameInput;\n      var isUseful = this.usefulValue;\n      var paramObj = {\n        page: 1,\n        rows: 500\n      };\n      name ? paramObj.name = name : \"\", isUseful ? paramObj.mode = isUseful : \"\";\n      this.paramsStorage = paramObj;\n      (0, _orderList.getUserList)(paramObj).then(function (res) {\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var id = tableItem.id,\n              username = tableItem.username,\n              name = tableItem.name,\n              telephone = tableItem.telephone,\n              mode = tableItem.mode;\n          var orderItem = {\n            id: id,\n            username: username,\n            name: name,\n            phoneNumber: telephone,\n            isUseful: mode\n          };\n          searchList.push(orderItem);\n        });\n      });\n      this.listLoading = false;\n      this.list = searchList;\n    },\n    // 新增\n    handleAdd: function handleAdd() {\n      var _this3 = this;\n\n      (0, _orderList.addUserInquire)().then(function (res) {\n        _this3.permissionList = res.data;\n      });\n      this.addDialogVisible = true;\n    },\n    handleUpdateCheckListChange: function handleUpdateCheckListChange(value) {},\n    // 取消新增\n    handleAddCancel: function handleAddCancel() {\n      this.addDialogVisible = false;\n    },\n    // 验证新增\n    addVerify: function addVerify() {\n      if (this.form.checkList.length === 0) {\n        this.$message.error(\"请选择一项角色\");\n        return false;\n      }\n\n      if (this.form.username == \"\") {\n        this.$message.error(\"请输入用户名\");\n        return false;\n      }\n\n      if (this.form.name == \"\") {\n        this.$message.error(\"请输入姓名\");\n        return false;\n      }\n\n      if (this.form.password == \"\") {\n        this.$message.error(\"请输入密码\");\n        return false;\n      }\n\n      if (this.form.telephone == \"\") {\n        this.$message.error(\"请输入手机号\");\n        return false;\n      }\n\n      return true;\n    },\n    // 确认新增\n    handleAddConfirm: function handleAddConfirm() {\n      var _this4 = this;\n\n      if (!this.addVerify()) return;\n      this.listLoading = true;\n      var username = this.form.username;\n      var name = this.form.name;\n      var password = this.form.password;\n      var telephone = this.form.telephone;\n      var functionId = this.form.checkList.join(\",\");\n      (0, _orderList.addUser)({\n        functionId: functionId,\n        username: username,\n        name: name,\n        password: password,\n        telephone: telephone\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this4.reloadPage();\n\n          _this4.$message({\n            type: \"success\",\n            message: \"添加用户成功\"\n          });\n        } else {\n          _this4.$message.error(\"添加失败\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.listLoading = false;\n      this.addDialogVisible = false;\n    },\n    // 全选\n    handleCheckAllChange: function handleCheckAllChange(val) {\n      this.form.checkList = val ? [] : [];\n      this.isIndeterminate = false;\n    },\n    handleCheckedCitiesChange: function handleCheckedCitiesChange(val) {\n      var checkedCount = val.length;\n      this.checkAll = checkedCount === this.form.checkList.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.form.checkList.length;\n    },\n    // 更新\n    handleUpdata: function handleUpdata(rows) {\n      var _this5 = this;\n\n      (0, _orderList.updateUserInquired)({\n        id: rows.id\n      }).then(function (res) {\n        console.log(res.data);\n        _this5.updatePermissionList = res.data.roleList;\n        _this5.updateForm.checkList = res.data.roles;\n        _this5.updateForm.username = res.data.user.username;\n        _this5.updateForm.name = res.data.user.name;\n        _this5.updateForm.telephone = res.data.user.telephone;\n        _this5.updateForm.password = res.data.user.password;\n        _this5.updateForm.mode = res.data.user.mode;\n        _this5.updateId = rows.id;\n        _this5.updateDialogVisible = true;\n      });\n    },\n    // 取消更新\n    handleUpdateCancel: function handleUpdateCancel() {\n      this.updateDialogVisible = false;\n    },\n    // 验证更新\n    updateVerify: function updateVerify() {\n      if (this.updateForm.checkList.length === 0) {\n        this.$message.error(\"请选择一项角色\");\n        return false;\n      }\n\n      if (this.updateForm.username == \"\") {\n        this.$message.error(\"请输入用户名\");\n        return false;\n      }\n\n      if (this.updateForm.name == \"\") {\n        this.$message.error(\"请输入姓名\");\n        return false;\n      }\n\n      if (this.updateForm.password == \"\") {\n        this.$message.error(\"请输入密码\");\n        return false;\n      }\n\n      if (this.updateForm.telephone == \"\") {\n        this.$message.error(\"请输入手机号\");\n        return false;\n      }\n\n      return true;\n    },\n    // 确认更新\n    handleUpdateConfirm: function handleUpdateConfirm() {\n      var _this6 = this;\n\n      if (!this.updateVerify()) {\n        return;\n      }\n\n      this.listLoading = true;\n      var id = this.updateId;\n      var username = this.updateForm.username;\n      var name = this.updateForm.name;\n      var password = this.updateForm.password;\n      var telephone = this.updateForm.telephone;\n      var mode = this.updateForm.mode;\n      var functionId = this.updateForm.checkList.join(\",\");\n      (0, _orderList.updateUser)({\n        id: id,\n        functionId: functionId,\n        username: username,\n        name: name,\n        password: password,\n        telephone: telephone,\n        mode: mode\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this6.reloadPage();\n\n          _this6.$message({\n            type: \"success\",\n            message: \"更新用户成功\"\n          });\n        } else {\n          _this6.$message.error(\"更新失败\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.listLoading = false;\n      this.updateDialogVisible = false;\n    },\n    // 删除\n    handleDelete: function handleDelete(rows) {\n      var _this7 = this;\n\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this7.listLoading = true;\n        (0, _orderList.deleteUser)({\n          id: rows.id\n        }).then(function (res) {\n          if (res.status === 200) {\n            _this7.reloadPage();\n\n            _this7.$message({\n              type: \"success\",\n              message: \"删除用户成功\"\n            });\n          } else {\n            _this7.$message.error(\"删除失败\");\n          }\n        });\n        _this7.listLoading = false;\n      }).catch(function () {\n        _this7.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    // 批量删除\n    handleDeleteSelect: function handleDeleteSelect() {\n      var _this8 = this;\n\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        if (_this8.multipleSelection.length === 0) {\n          _this8.$message.error(\"未选择数据\");\n\n          return;\n        }\n\n        var ids = [];\n\n        _this8.multipleSelection.forEach(function (selectItem) {\n          ids.push(selectItem.id);\n        });\n\n        var idsStr = ids.join(\",\");\n        (0, _orderList.deleteSelectUser)({\n          ids: idsStr\n        }).then(function (res) {\n          if (res.status === 200) {\n            _this8.reloadPage();\n\n            _this8.$message({\n              type: \"success\",\n              message: \"批量删除用户成功\"\n            });\n          } else {\n            _this8.$message.error(\"删除失败\");\n          }\n        });\n      }).catch(function () {\n        _this8.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    // 重载页面\n    reloadPage: function reloadPage() {\n      var _this9 = this;\n\n      if (JSON.stringify(this.paramsStorage) == \"{}\") {\n        this.list = this.getOrderList();\n      } else {\n        var searchList = [];\n        (0, _orderList.getUserList)(this.paramsStorage).then(function (res) {\n          var tableData = res.data.rows;\n          tableData.forEach(function (tableItem) {\n            var id = tableItem.id,\n                username = tableItem.username,\n                name = tableItem.name,\n                telephone = tableItem.telephone,\n                mode = tableItem.mode;\n            var orderItem = {\n              id: id,\n              username: username,\n              name: name,\n              phoneNumber: telephone,\n              isUseful: mode\n            };\n            searchList.push(orderItem);\n          });\n          _this9.list = searchList;\n        });\n      }\n    },\n\n    /* 移动端事件 */\n    //新增\n    handleSearchMobile: function handleSearchMobile() {},\n    //取消新增\n    handleAddMobileCancel: function handleAddMobileCancel() {},\n    //确认新增\n    handleMobileAdd: function handleMobileAdd() {},\n    //清空所选\n    handleSearchMobileClearAll: function handleSearchMobileClearAll() {},\n    //分页器改变\n    handlePageChange: function handlePageChange() {},\n    //返回列表\n    handleDetailCancel: function handleDetailCancel() {\n      this.mobileDetailShow = !this.mobileDetailShow;\n    }\n  }\n};\nexports.default = _default;",null]}