{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system\\function.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system\\function.vue","mtime":1562576646521},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\yet\\\\project\\\\longhuiteng_management_system\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"vant/es/pagination/style\");\n\nvar _pagination = _interopRequireDefault(require(\"vant/es/pagination\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _timers = require(\"timers\");\n\nvar _orderList = require(\"@/api/orderList\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 权限判断指令\n_vue.default.use(_pagination.default);\n\nvar _default = {\n  name: 'system-function',\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      formLabelWidth: \"120px\",\n      SearchButtonLoading: false,\n      clearSearchButtonLoading: false,\n      importProdcutLoading: false,\n      listLoading: false,\n      addDialogVisible: false,\n      updateDialogVisible: false,\n      currentPage: 1,\n      //当前页\n      pagesizes: [20, 40, 60, 80, 100],\n      //单页最大显示条数\n      pagesize: 20,\n      //单页内条数\n      clickFlag: null,\n      // 单击定时器\n      mobileSearchShow: false,\n      mobileSearchButtonLoading: false,\n      tableMaxHeight: 0,\n      pageJumpIndex: 1,\n      nameInput: \"\",\n      treeData: [],\n      defaultProps: {\n        children: \"children\",\n        label: \"text\"\n      },\n      props: {\n        emitPath: false,\n        checkStrictly: true,\n        label: \"text\",\n        value: \"functionId\"\n      },\n      currentId: 0,\n      addForm: {\n        name: \"\",\n        func: \"\"\n      },\n      updateForm: {\n        name: \"\",\n        func: \"\"\n      },\n      parentMenu: [],\n      menuId: \"\",\n      multipleSelection: []\n    };\n  },\n  created: function created() {\n    this.getTreeData();\n    this.list = this.getOrderList();\n    this.device = this.$store.state.app.device;\n    window.addEventListener(\"resize\", this.getHeight);\n    this.getHeight();\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener(\"resize\", this.getHeight);\n  },\n  computed: {\n    deviceVal: function deviceVal() {\n      return this.$store.state.app.device;\n    }\n  },\n  watch: {\n    deviceVal: function deviceVal(newVal, oldVal) {\n      this.device = newVal;\n    }\n  },\n  methods: {\n    // 获取树状图数据\n    getTreeData: function getTreeData() {\n      var _this = this;\n\n      (0, _orderList.getMenuTree)().then(function (res) {\n        if (res.status = 200) {\n          console.log(res.data);\n          _this.treeData = res.data;\n        }\n      });\n    },\n    // 获取表格列表\n    getOrderList: function getOrderList() {\n      var orderList = [];\n      this.listLoading = true;\n      (0, _orderList.getFunctionList)({\n        page: 1,\n        rows: 50\n      }, \"?id=0\").then(function (res) {\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var name = tableItem.name,\n              code = tableItem.code,\n              id = tableItem.id,\n              parentId = tableItem.parentId;\n          var orderItem = {\n            name: name,\n            code: code,\n            id: id,\n            parentId: parentId\n          };\n          orderList.push(orderItem);\n        });\n      });\n      this.listLoading = false;\n      return orderList;\n    },\n    //表格高度自适应\n    getHeight: function getHeight() {\n      var otherHeight = this.device == \"desktop\" ? 250 : 200;\n      this.tableMaxHeight = window.innerHeight - otherHeight;\n    },\n    //单击复制\n    handleUseful: function handleUseful(row, column, cell, event) {\n      var _this2 = this;\n\n      if (this.device == \"mobile\") return;\n\n      if (this.clickFlag) {\n        (0, _timers.clearTimeout)(this.clickFlag);\n        this.clickFlag = null;\n      }\n\n      this.clickFlag = (0, _timers.setTimeout)(function () {\n        var count = 0;\n        if (column.label == undefined) return;\n\n        if (column.label == \"操作\") {} else {\n          var copyText = event.target.innerText;\n\n          if (copyText != \"\") {\n            var inputElement = document.getElementById(\"copy_content\");\n            inputElement.value = copyText;\n            inputElement.select();\n            document.execCommand(\"Copy\");\n\n            _this2.$message({\n              message: \"复制成功\",\n              type: \"success\"\n            });\n          } else {\n            _this2.$message.error(\"复制失败，内容可能为空\");\n          }\n        }\n      }, 300);\n    },\n    //选择表格尺寸\n    handleSizeChange: function handleSizeChange(val) {\n      var _this3 = this;\n\n      this.listLoading = true;\n      (0, _timers.setTimeout)(function () {\n        _this3.pagesize = val;\n        _this3.listLoading = false;\n      }, 500);\n    },\n    //选择表格当前页数\n    handleCurrentChange: function handleCurrentChange(val) {\n      var _this4 = this;\n\n      this.listLoading = true;\n      (0, _timers.setTimeout)(function () {\n        _this4.currentPage = val;\n        _this4.listLoading = false;\n      }, 500);\n    },\n    // 新增\n    handleAdd: function handleAdd() {\n      var _this5 = this;\n\n      this.addDialogVisible = true;\n      (0, _orderList.getMenuTree)().then(function (res) {\n        _this5.parentMenu = res.data;\n      });\n    },\n    // 验证新增\n    addVerify: function addVerify() {\n      if (this.addForm.name == \"\") {\n        this.$message.error(\"请输入功能名称\");\n        return false;\n      }\n\n      if (this.addForm.func == \"\") {\n        this.$message.error(\"请输入功能\");\n        return false;\n      }\n\n      return true;\n    },\n    // 取消新增\n    handleAddCancel: function handleAddCancel() {\n      this.addDialogVisible = false;\n    },\n    // 确认新增\n    handleAddConfirm: function handleAddConfirm() {\n      var _this6 = this;\n\n      if (!this.addVerify()) return;\n      var timestamp = new Date().getTime();\n      var paramsObj = {\n        parentId: this.currentId,\n        name: this.addForm.name,\n        code: this.addForm.func,\n        menuId: this.menuId\n      };\n      (0, _orderList.addFunction)(paramsObj).then(function (res) {\n        if (res.status == 200) {\n          _this6.$message({\n            type: \"success\",\n            message: \"新增权限成功\"\n          });\n        }\n      });\n      this.addDialogVisible = false;\n    },\n    // 关联菜单改变\n    handleSelectMenuChange: function handleSelectMenuChange(e) {\n      this.menuId = e;\n    },\n    // 更新\n    handleUpdateClick: function handleUpdateClick(row) {\n      var _this7 = this;\n\n      this.updateDialogVisible = true;\n      (0, _orderList.getMenuTree)().then(function (res) {\n        _this7.parentMenu = res.data;\n        _this7.updateForm.name = row.name;\n        _this7.updateForm.func = row.code;\n        _this7.currentId = row.id;\n      });\n    },\n    // 取消更新\n    handleUpdateCancel: function handleUpdateCancel() {\n      this.updateDialogVisible = false;\n    },\n    // 验证更新\n    updateVerify: function updateVerify() {\n      console.log(this.updateForm.name);\n\n      if (this.updateForm.name == \"\") {\n        this.$message.error(\"请输入功能名称\");\n        return false;\n      }\n\n      if (this.updateForm.func == \"\") {\n        this.$message.error(\"请输入功能\");\n        return false;\n      }\n\n      return true;\n    },\n    // 确认更新\n    handleUpdateConfirm: function handleUpdateConfirm(row) {\n      var _this8 = this;\n\n      if (!this.updateVerify()) return;\n      var paramsObj = {\n        id: this.currentId,\n        name: this.updateForm.name,\n        code: this.updateForm.func\n      };\n      (0, _orderList.updateFunction)(paramsObj).then(function (res) {\n        if (res.status == 200) {\n          _this8.$message({\n            message: \"更新成功\",\n            type: \"succes\"\n          });\n        }\n      });\n      this.updateDialogVisible = false;\n    },\n    // 删除\n    handleDeleteClick: function handleDeleteClick(row) {\n      var _this9 = this;\n\n      var id = row.id;\n      this.$confirm(\"此操作将永久删除该权限, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this9.listLoading = true;\n        (0, _orderList.deleteFunction)({\n          id: row.id\n        }).then(function (res) {\n          if (res.status === 200) {\n            _this9.reloadPage();\n\n            _this9.$message({\n              type: \"success\",\n              message: \"删除权限成功\"\n            });\n\n            _this9.dialogTableVisible = false;\n          } else {\n            _this9.$message.error(\"删除失败\");\n\n            _this9.dialogTableVisible = false;\n          }\n        });\n        _this9.listLoading = false;\n      }).catch(function (error) {\n        _this9.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n\n        _this9.dialogTableVisible = false;\n      });\n    },\n    // 批量删除\n    handleDeleteSelect: function handleDeleteSelect() {\n      var _this10 = this;\n\n      this.$confirm(\"此操作将永久删除该权限, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        if (_this10.multipleSelection.length === 0) {\n          _this10.$message.error(\"未选择数据\");\n\n          return;\n        }\n\n        var ids = [];\n\n        _this10.multipleSelection.forEach(function (selectItem) {\n          ids.push(selectItem.id);\n        });\n\n        var idsStr = ids.join(\",\");\n        (0, _orderList.deleteSelectFunction)({\n          ids: idsStr\n        }).then(function (res) {\n          if (res.status === 200) {\n            _this10.reloadPage();\n\n            _this10.$message({\n              type: \"success\",\n              message: \"批量删除权限成功\"\n            });\n          } else {\n            _this10.$message.error(\"删除失败\");\n          }\n        });\n      }).catch(function () {\n        _this10.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    // 树形图节点点击事件\n    handleNodeClick: function handleNodeClick(e) {\n      this.currentId = e.functionId;\n      var id = \"?id=\".concat(e.id);\n      var orderList = [];\n      this.listLoading = true;\n      (0, _orderList.getFunctionList)({\n        page: 1,\n        rows: 50\n      }, id).then(function (res) {\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var name = tableItem.name,\n              code = tableItem.code,\n              id = tableItem.id,\n              parentId = tableItem.parentId;\n          var orderItem = {\n            name: name,\n            code: code,\n            id: id,\n            parentId: parentId\n          };\n          orderList.push(orderItem);\n        });\n      });\n      this.listLoading = false;\n      this.list = orderList;\n    },\n    // 选择发生改变\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    // 重载页面\n    reloadPage: function reloadPage() {},\n\n    /* 移动端事件 */\n    //分页器\n    handlePageChange: function handlePageChange() {\n      var _this11 = this;\n\n      this.listLoading = true;\n      (0, _timers.setTimeout)(function () {\n        _this11.listLoading = false;\n      }, 600);\n    },\n    //限制页面跳转输入框只能输入数字\n    jumpPageInput: function jumpPageInput() {\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\n    },\n    //跳转指定页面\n    handleJumpPage: function handleJumpPage() {\n      var _this12 = this;\n\n      var jumpPage = parseInt(this.pageJumpIndex);\n      if (jumpPage == this.currentPage) return;\n\n      if (jumpPage > Math.ceil(this.list.length / this.pagesize)) {\n        jumpPage = Math.ceil(this.list.length / this.pagesize);\n      }\n\n      if (jumpPage < 1) {\n        jumpPage = 1;\n      }\n\n      this.listLoading = true;\n      (0, _timers.setTimeout)(function () {\n        _this12.pageJumpIndex = jumpPage;\n        _this12.currentPage = jumpPage;\n        _this12.listLoading = false;\n      }, 1000);\n    }\n  }\n};\nexports.default = _default;",null]}