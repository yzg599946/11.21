{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\store\\modules\\user.js","mtime":1564214208025},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { login as _login, logout as _logout, getInfo as _getInfo, checkLogin } from '@/api/user';\nimport { getToken, setToken, removeToken, getLoginStatus, setLoginStatus, removeLoginStatus } from '@/utils/auth';\nimport { resetRouter } from '@/router';\nimport { setStore, getStore, removeStore } from '@/utils/store';\nvar state = {\n  token: getToken(),\n  name: getStore({\n    name: 'name'\n  }) || '',\n  avatar: getStore({\n    name: 'avatar'\n  }) || '',\n  roles: getStore({\n    name: 'roles'\n  }) || '',\n  menus: getStore({\n    name: 'menus'\n  }) || '',\n  username: getStore({\n    name: 'username'\n  }) || '',\n  status: false,\n  loginStatus: getLoginStatus(),\n  isLock: getStore({\n    name: 'isLock'\n  }) || false,\n  lockPasswd: getStore({\n    name: 'lockPasswd'\n  }) || ''\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n    setStore({\n      name: 'name',\n      content: name,\n      type: 'session'\n    });\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n    setStore({\n      name: 'avatar',\n      content: avatar,\n      type: 'session'\n    });\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n    setStore({\n      name: 'roles',\n      content: roles,\n      type: 'session'\n    });\n  },\n  SET_MENUS: function SET_MENUS(state, menus) {\n    state.nemu = menus;\n    setStore({\n      name: 'menus',\n      content: menus,\n      type: 'session'\n    });\n  },\n  SET_USERNAME: function SET_USERNAME(state, username) {\n    state.username = username;\n    setStore({\n      name: 'username',\n      content: username,\n      type: 'session'\n    });\n  },\n  SET_CHECKSTATUS: function SET_CHECKSTATUS(state, status) {\n    state.status = status;\n  },\n  SET_LOGINSTATUS: function SET_LOGINSTATUS(state, loginStatus) {\n    state.loginStatus = loginStatus;\n  },\n  SET_LOCK_PASSWD: function SET_LOCK_PASSWD(state, lockPasswd) {\n    state.lockPasswd = lockPasswd;\n    setStore({\n      name: 'lockPasswd',\n      content: state.lockPasswd,\n      type: 'session'\n    });\n  },\n  SET_LOCK: function SET_LOCK(state, action) {\n    state.isLock = true;\n    setStore({\n      name: 'isLock',\n      content: state.isLock,\n      type: 'session'\n    });\n  },\n  CLEAR_LOCK: function CLEAR_LOCK(state, action) {\n    state.isLock = false;\n    state.lockPasswd = '';\n    removeStore({\n      name: 'lockPasswd'\n    });\n    removeStore({\n      name: 'isLock'\n    });\n  },\n  CLEAR_USERINFO: function CLEAR_USERINFO(state, action) {\n    state.name = '';\n    state.avatar = '';\n    state.roles = '';\n    state.menus = '';\n    state.username = '';\n    removeStore({\n      name: 'name'\n    });\n    removeStore({\n      name: 'avatar'\n    });\n    removeStore({\n      name: 'roles'\n    });\n    removeStore({\n      name: 'menus'\n    });\n    removeStore({\n      name: 'username'\n    });\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password,\n        verification = userInfo.verification;\n    return new Promise(function (resolve, reject) {\n      _login({\n        username: username.trim(),\n        password: password,\n        verification: verification\n      }).then(function (response) {\n        var data = response.data; // 客服\n\n        if (data.checkId) {\n          var checkLoginTime = setInterval(function () {\n            checkLogin(data).then(function (res) {\n              if (res.status === 400 && res.msg === '暂无信息') {\n                commit('SET_CHECKSTATUS', true);\n              } else if (res.status === 200) {\n                clearInterval(checkLoginTime);\n                var token = JSON.stringify(res.data);\n                commit('SET_TOKEN', token);\n                setLoginStatus('login');\n                commit('SET_LOGINSTATUS', 'login');\n                commit('SET_CHECKSTATUS', false);\n                setToken(token, false);\n                resolve();\n              }\n            });\n          }, 2000);\n          setTimeout(function () {\n            clearInterval(checkLoginTime);\n          }, 600000);\n        } else {\n          var token = JSON.stringify(data);\n          commit('SET_TOKEN', token);\n\n          if (data.storage) {\n            setToken(token, true);\n            setLoginStatus('login');\n            commit('SET_LOGINSTATUS', 'login');\n          } else {\n            setToken(token, false);\n            setLoginStatus('login');\n            commit('SET_LOGINSTATUS', 'login');\n          }\n\n          resolve();\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // fast login\n  fastLogin: function fastLogin(_ref2, userInfo) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      _login(userInfo).then(function (response) {\n        var data = response.data;\n        var token = JSON.stringify(data);\n        commit('SET_TOKEN', token);\n        commit('SET_LOGINSTATUS', 'login');\n        setToken(token, true);\n        setLoginStatus('login');\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      _getInfo(state.token).then(function (response) {\n        var data = response.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var avatar = 'https://lhtpic01.oss-cn-shenzhen.aliyuncs.com/common/guanliyuan.png';\n        var user = data.user;\n        var menus = data.menu;\n        var roles = data.functionList;\n        var username = data.username;\n        commit('SET_ROLES', roles);\n        commit('SET_NAME', user);\n        commit('SET_AVATAR', avatar);\n        commit('SET_MENUS', menus);\n        commit('SET_USERNAME', username);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref4) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    return new Promise(function (resolve, reject) {\n      _logout(state.token).then(function () {\n        commit('CLEAR_USERINFO');\n        commit('SET_TOKEN', '');\n        commit('SET_LOGINSTATUS', '');\n        commit('CLEAR_LOCK');\n        removeToken();\n        removeLoginStatus();\n        resetRouter();\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref5) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve) {\n      var token = getToken();\n\n      if (token && token.indexOf('false') !== -1) {\n        removeToken();\n        commit('SET_TOKEN', '');\n      }\n\n      commit('SET_LOGINSTATUS', '');\n      commit('CLEAR_USERINFO', '');\n      commit('CLEAR_LOCK');\n      removeLoginStatus();\n      resolve();\n    });\n  },\n  // set lockpassword\n  setLockPassword: function setLockPassword(_ref6, password) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve) {\n      commit('SET_LOCK_PASSWD', password);\n      resolve();\n    });\n  },\n  // set lock\n  setLock: function setLock(_ref7) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve) {\n      commit('SET_LOCK');\n      resolve();\n    });\n  },\n  // clear lock\n  clearLock: function clearLock(_ref8) {\n    var commit = _ref8.commit;\n    return new Promise(function (resolve) {\n      commit('CLEAR_LOCK');\n      resolve();\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}