{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\el-bigdata-table\\src\\table.mixins.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\el-bigdata-table\\src\\table.mixins.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  props: {\n    rowHeight: {\n      type: Number,\n      default: 50\n    }\n  },\n  data: function data() {\n    return {\n      scrollTop: 0,\n      innerTop: 0,\n      start: 0,\n      preEnd: 0,\n      end: 0\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_this.isUseVirtual) {\n        var tableBodyWrapper = _this.$el.querySelector('.el-table__body-wrapper');\n\n        tableBodyWrapper.addEventListener('scroll', _this.handleScroll);\n        tableBodyWrapper.addEventListener('DOMMouseScroll', _this.handleScroll);\n      }\n    });\n  },\n  activated: function activated() {\n    if (this.isUseVirtual) {\n      this.computeScrollToRow(0);\n    }\n  },\n  methods: {\n    computeScrollToRow: function computeScrollToRow(offset) {\n      var startIndex = parseInt(offset / this.rowHeight);\n\n      var _this$getVisibleRange = this.getVisibleRange(startIndex),\n          start = _this$getVisibleRange.start,\n          end = _this$getVisibleRange.end;\n\n      this.start = start;\n      this.end = end;\n      this.innerTop = this.start * this.rowHeight;\n    },\n    getVisibleRange: function getVisibleRange(ExpectStart) {\n      var visibleCount = Math.ceil(this.height / this.rowHeight);\n      return {\n        start: ExpectStart,\n        end: ExpectStart + visibleCount\n      };\n    },\n    //  滚动条拖动\n    handleScroll: function handleScroll(e) {\n      var ele = e.srcElement || e.target;\n      var scrollTop = ele.scrollTop;\n      var bodyScrollHeight = this.$el.querySelector('.el-table__body').scrollHeight; // 解决 滚动时 行hover高亮的问题\n\n      this.store.states.hoverRow = null;\n\n      if (this.virtualBodyHeight < scrollTop + bodyScrollHeight) {\n        scrollTop = this.virtualBodyHeight - bodyScrollHeight;\n      }\n\n      this.scrollTop = scrollTop;\n    }\n  },\n  computed: {\n    virtualBodyHeight: function virtualBodyHeight() {\n      return this.data.length * this.rowHeight;\n    },\n    isUseVirtual: function isUseVirtual() {\n      return 'useVirtual' in this.$attrs && this.$attrs.useVirtual !== false && this.height;\n    }\n  },\n  watch: {\n    scrollTop: {\n      immediate: true,\n      handler: function handler(top) {\n        this.computeScrollToRow(top);\n      }\n    },\n    virtualBodyHeight: function virtualBodyHeight() {\n      setTimeout(this.doLayout, 10);\n    }\n  }\n};",null]}