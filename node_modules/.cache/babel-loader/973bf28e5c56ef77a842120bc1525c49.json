{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system-management\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system-management\\login.vue","mtime":1562321596752},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\yet\\\\project\\\\longhuiteng_management_system\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"vant/es/search/style\");\n\nvar _search = _interopRequireDefault(require(\"vant/es/search\"));\n\nrequire(\"vant/es/action-sheet/style\");\n\nvar _actionSheet = _interopRequireDefault(require(\"vant/es/action-sheet\"));\n\nrequire(\"vant/es/toast/style\");\n\nvar _toast = _interopRequireDefault(require(\"vant/es/toast\"));\n\nrequire(\"vant/es/icon/style\");\n\nvar _icon = _interopRequireDefault(require(\"vant/es/icon\"));\n\nrequire(\"vant/es/field/style\");\n\nvar _field = _interopRequireDefault(require(\"vant/es/field\"));\n\nrequire(\"vant/es/picker/style\");\n\nvar _picker = _interopRequireDefault(require(\"vant/es/picker\"));\n\nrequire(\"vant/es/datetime-picker/style\");\n\nvar _datetimePicker = _interopRequireDefault(require(\"vant/es/datetime-picker\"));\n\nrequire(\"vant/es/cell-group/style\");\n\nvar _cellGroup = _interopRequireDefault(require(\"vant/es/cell-group\"));\n\nrequire(\"vant/es/cell/style\");\n\nvar _cell = _interopRequireDefault(require(\"vant/es/cell\"));\n\nrequire(\"vant/es/nav-bar/style\");\n\nvar _navBar = _interopRequireDefault(require(\"vant/es/nav-bar\"));\n\nrequire(\"vant/es/popup/style\");\n\nvar _popup = _interopRequireDefault(require(\"vant/es/popup\"));\n\nrequire(\"vant/es/button/style\");\n\nvar _button = _interopRequireDefault(require(\"vant/es/button\"));\n\nrequire(\"vant/es/pagination/style\");\n\nvar _pagination = _interopRequireDefault(require(\"vant/es/pagination\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _orderList = require(\"@/api/orderList\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n_vue.default.use(_pagination.default);\n\n_vue.default.use(_button.default);\n\n_vue.default.use(_popup.default);\n\n_vue.default.use(_navBar.default);\n\n_vue.default.use(_cell.default);\n\n_vue.default.use(_cellGroup.default);\n\n_vue.default.use(_datetimePicker.default);\n\n_vue.default.use(_picker.default);\n\n_vue.default.use(_field.default);\n\n_vue.default.use(_icon.default);\n\n_vue.default.use(_toast.default);\n\n_vue.default.use(_actionSheet.default);\n\n_vue.default.use(_search.default);\n\nvar _default = {\n  data: function data() {\n    return {\n      list: [],\n      pickerOptions: {\n        shortcuts: [{\n          text: \"最近一周\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }, {\n          text: \"最近一个月\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }, {\n          text: \"最近三个月\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }]\n      },\n      formLabelWidth: \"120px\",\n      dialogTableVisible: false,\n      currentPage: 1,\n      //当前页\n      pagesizes: [20, 40, 60, 80, 100],\n      //单页最大显示条数\n      pagesize: 20,\n      //单页内条数\n      device: \"\",\n      mobileSearchShow: false,\n      mobileSearchButtonLoading: false,\n      timeSelectValue: \"\",\n      tableMaxHeight: 0,\n      listLoading: false,\n      timePickerStartValue: \"请选择\",\n      timePickerEndValue: \"请选择\",\n      mobileDatePickerShow: false,\n      datetimePickerType: \"\",\n      minDate: new Date(1950, 10, 1),\n      maxDate: new Date(),\n      currentDate: new Date(),\n      minDateEnd: new Date(),\n      maxDateStart: new Date()\n    };\n  },\n  created: function created() {\n    this.list = this.getOrderList();\n    this.device = this.$store.state.app.device;\n    this.getHeight();\n  },\n  computed: {\n    deviceVal: function deviceVal() {\n      return this.$store.state.app.device;\n    }\n  },\n  watch: {\n    deviceVal: function deviceVal(newVal, oldVal) {\n      this.device = newVal;\n    }\n  },\n  methods: {\n    // 获取表格列表\n    getOrderList: function getOrderList() {\n      var orderList = [];\n      (0, _orderList.getCheckLoginList)({\n        contains: false,\n        page: 1,\n        rows: 500\n      }).then(function (res) {\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var username = tableItem.username,\n              status = tableItem.status,\n              checkName = tableItem.checkName,\n              createTime = tableItem.createTime;\n          var searchItem = {\n            username: username,\n            loginStatus: status,\n            Confirmor: checkName,\n            applicationTime: createTime\n          };\n          orderList.push(searchItem);\n        });\n      });\n      return orderList;\n    },\n    //表格高度自适应\n    getHeight: function getHeight() {\n      var otherHeight = this.device == \"desktop\" ? 250 : 200;\n      this.tableMaxHeight = window.innerHeight - otherHeight;\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      var _this = this;\n\n      this.listLoading = true;\n      setTimeout(function () {\n        _this.pagesize = val;\n        _this.listLoading = false;\n      }, 500);\n    },\n    //选择表格当前页数\n    handleCurrentChange: function handleCurrentChange(val) {\n      var _this2 = this;\n\n      this.listLoading = true;\n      setTimeout(function () {\n        _this2.currentPage = val;\n        _this2.listLoading = false;\n      }, 500);\n    },\n    //搜索\n    handleSearch: function handleSearch() {\n      var _this3 = this;\n\n      var searchList = [];\n      this.timeSelectValue == \"\" ? this.timeSelectValue : [\"\", \"\"];\n      var paramsObj = {\n        contains: false,\n        rows: 500,\n        page: 1\n      };\n      this.timeSelectValue[0] ? paramsObj.createTime = this.timeSelectValue[0] : \"\";\n      this.timeSelectValue[1] ? paramsObj.createTimeEnd = this.timeSelectValue[1] : \"\";\n      (0, _orderList.getCheckLoginList)(paramsObj).then(function (res) {\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var username = tableItem.username,\n              status = tableItem.status,\n              checkName = tableItem.checkName,\n              createTime = tableItem.createTime;\n          var searchItem = {\n            username: username,\n            loginStatus: status,\n            Confirmor: checkName,\n            applicationTime: createTime\n          };\n          searchList.push(searchItem);\n        });\n        _this3.list = searchList;\n      });\n    },\n\n    /* 移动端事件 */\n    //搜索\n    handleSearchMobile: function handleSearchMobile() {\n      if (!this.mobileSearchShow) {\n        this.mobileSearchShow = true;\n      }\n    },\n    //取消搜索\n    handleSearchMobileCancel: function handleSearchMobileCancel() {\n      if (this.mobileSearchShow) {\n        this.mobileSearchShow = false;\n      }\n    },\n    // 选择开始日期\n    handleChooseDateStartMobile: function handleChooseDateStartMobile() {\n      if (!this.mobileDatePickerShow) {\n        if (this.timePickerEndValue != \"请选择\") {\n          var maxDate_ = this.timePickerEndValue;\n          maxDate_ = maxDate_.replace(/-/g, \"/\");\n          var date = new Date(maxDate_);\n          this.maxDateStart = date;\n        }\n\n        this.datetimePickerType = \"start\";\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\n      }\n    },\n    datetimePickerChange: function datetimePickerChange(e) {},\n    // 选择结束日期\n    handleChooseDateEndMobile: function handleChooseDateEndMobile() {\n      if (!this.mobileDatePickerShow) {\n        if (this.timePickerStartValue != \"请选择\") {\n          var maxDate_ = this.timePickerStartValue;\n          maxDate_ = maxDate_.replace(/-/g, \"/\");\n          var date = new Date(maxDate_);\n          this.minDateEnd = date;\n        }\n\n        this.datetimePickerType = \"end\";\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\n      }\n    },\n    // 确认选择日期\n    datetimePickerConfirm: function datetimePickerConfirm(res) {\n      if (this.mobileDatePickerShow) {\n        if (this.datetimePickerType == \"start\") {\n          this.timePickerStartValue = res.toLocaleDateString();\n        } else {\n          this.timePickerEndValue = res.toLocaleDateString();\n        }\n\n        this.mobileDatePickerShow = !this.mobileDatePickerShow;\n      }\n    },\n    // 取消选择日期\n    datetimePickerCancel: function datetimePickerCancel() {\n      this.mobileDatePickerShow = !this.mobileDatePickerShow;\n    },\n    //确认搜索\n    handleMobileSearch: function handleMobileSearch() {\n      var _this4 = this;\n\n      var searchList = [];\n      var timeStartValue = \"\";\n      var timeEndValue = \"\";\n      this.timePickerStartValue == \"请选择\" ? timeStartValue = \"\" : timeStartValue = this.timePickerStartValue.replace(/\\//g, \"-\");\n      this.timePickerEndValue == \"请选择\" ? timeEndValue = \"\" : timeEndValue = this.timePickerEndValue.replace(/\\//g, \"-\");\n      var paramsObj = {\n        contains: false,\n        rows: 500,\n        page: 1\n      };\n      timeStartValue ? paramsObj.createTime = timeStartValue : \"\";\n      timeEndValue ? paramsObj.createTimeEnd = timeEndValue : \"\";\n      (0, _orderList.getCheckLoginList)(paramsObj).then(function (res) {\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var username = tableItem.username,\n              status = tableItem.status,\n              checkName = tableItem.checkName,\n              createTime = tableItem.createTime;\n          var searchItem = {\n            username: username,\n            loginStatus: status,\n            Confirmor: checkName,\n            applicationTime: createTime\n          };\n          searchList.push(searchItem);\n        });\n        _this4.list = searchList;\n        _this4.mobileSearchShow = false;\n      });\n    },\n    //清空所选\n    handleSearchMobileClearAll: function handleSearchMobileClearAll() {},\n    //分页器改变\n    handlePageChange: function handlePageChange() {},\n    //返回列表\n    handleDetailCancel: function handleDetailCancel() {\n      this.mobileDetailShow = !this.mobileDetailShow;\n    }\n  }\n};\nexports.default = _default;",null]}