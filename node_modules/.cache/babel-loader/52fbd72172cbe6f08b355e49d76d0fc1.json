{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\system\\user.vue","mtime":1564744573876},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"vant/es/search/style\";\nimport _Search from \"vant/es/search\";\nimport \"vant/es/action-sheet/style\";\nimport _ActionSheet from \"vant/es/action-sheet\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/field/style\";\nimport _Field from \"vant/es/field\";\nimport \"vant/es/picker/style\";\nimport _Picker from \"vant/es/picker\";\nimport \"vant/es/datetime-picker/style\";\nimport _DatetimePicker from \"vant/es/datetime-picker\";\nimport \"vant/es/cell-group/style\";\nimport _CellGroup from \"vant/es/cell-group\";\nimport \"vant/es/cell/style\";\nimport _Cell from \"vant/es/cell\";\nimport \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport \"vant/es/popup/style\";\nimport _Popup from \"vant/es/popup\";\nimport \"vant/es/button/style\";\nimport _Button from \"vant/es/button\";\nimport \"vant/es/pagination/style\";\nimport _Pagination from \"vant/es/pagination\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport permission from \"@/directive/permission/index.js\"; // 权限判断指令\n\nimport checkPermission from \"@/utils/permission\"; // 权限判断函数\n\nimport { getUserList, deleteUser, deleteSelectUser, addUser, addUserInquire, updateUser, updateUserInquired } from \"@/api/orderList\";\nVue.use(_Pagination);\nVue.use(_Button);\nVue.use(_Popup);\nVue.use(_NavBar);\nVue.use(_Cell);\nVue.use(_CellGroup);\nVue.use(_DatetimePicker);\nVue.use(_Picker);\nVue.use(_Field);\nVue.use(_Icon);\nVue.use(_Toast);\nVue.use(_ActionSheet);\nVue.use(_Search);\nexport default {\n  name: \"system-user\",\n  directives: {\n    permission: permission\n  },\n  data: function data() {\n    return {\n      list: [],\n      usernameInput: \"\",\n      usefulValue: \"\",\n      usefulOptions: [{\n        value: \"1\",\n        label: \"是\"\n      }, {\n        value: \"0\",\n        label: \"否\"\n      }],\n      usefulColumns: [\"是\", \"否\"],\n      formLabelWidth: \"120px\",\n      dialogTableVisible: false,\n      currentPage: 1,\n      //当前页\n      mobileCurrentPage: 1,\n      pagesizes: [100, 200, 500],\n      //单页最大显示条数\n      pagesize: 100,\n      //单页内条数\n      listTotal: 0,\n      //总数\n      device: \"\",\n      nameMobileValue: \"\",\n      usefulMobileValue: \"请选择\",\n      mobileUsefulPickerShow: false,\n      searchButtonLoading: false,\n      mobileSearchShow: false,\n      mobileSearchButtonLoading: false,\n      tableMaxHeight: 0,\n      addDialogVisible: false,\n      updateDialogVisible: false,\n      form: {\n        checkList: [],\n        username: \"\",\n        name: \"\",\n        password: \"\",\n        telephone: \"\"\n      },\n      updateForm: {\n        checkList: [],\n        username: \"\",\n        name: \"\",\n        password: \"\",\n        telephone: \"\",\n        mode: \"\"\n      },\n      permissionList: [],\n      updatePermissionList: [],\n      listLoading: false,\n      multipleSelection: [],\n      updateId: \"\",\n      checkAll: false,\n      isIndeterminate: false,\n      pageJumpIndex: 1\n    };\n  },\n  created: function created() {\n    this.getList();\n    this.device = this.$store.state.app.device;\n    this.getHeight();\n  },\n  computed: {\n    deviceVal: function deviceVal() {\n      return this.$store.state.app.device;\n    }\n  },\n  watch: {\n    deviceVal: function deviceVal(newVal, oldVal) {\n      this.device = newVal;\n    }\n  },\n  methods: {\n    checkPermission: checkPermission,\n    // 获取数据\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      var searchList = [];\n      var name = this.usernameInput;\n      var isUseful = this.usefulValue;\n      var paramObj = {\n        contains: false,\n        page: this.currentPage,\n        rows: this.pagesize\n      };\n      name ? paramObj.name = name : \"\", isUseful ? paramObj.mode = isUseful : \"\";\n      getUserList(paramObj).then(function (res) {\n        _this.listTotal = res.data.total;\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var id = tableItem.id,\n              username = tableItem.username,\n              name = tableItem.name,\n              telephone = tableItem.telephone,\n              mode = tableItem.mode;\n          var orderItem = {\n            id: id,\n            username: username,\n            name: name,\n            phoneNumber: telephone,\n            isUseful: mode\n          };\n          searchList.push(orderItem);\n        });\n        _this.list = searchList;\n        _this.listLoading = false;\n      }).catch(function (error) {\n        _this.listLoading = false;\n      });\n    },\n    // 表格高度自适应\n    getHeight: function getHeight() {\n      var otherHeight = this.device == \"desktop\" ? 316 : 200;\n      this.tableMaxHeight = window.innerHeight - otherHeight;\n    },\n    // 单击复制\n    handleUseful: function handleUseful(row, column, cell, event) {\n      var _this2 = this;\n\n      if (this.device == \"mobile\") return;\n\n      if (this.clickFlag) {\n        clearTimeout(this.clickFlag);\n        this.clickFlag = null;\n      }\n\n      this.clickFlag = setTimeout(function () {\n        var count = 0;\n        if (column.label == undefined) return;\n\n        if (column.label == \"操作\") {} else {\n          var copyText = event.target.innerText;\n\n          if (copyText != \"\") {\n            var inputElement = document.getElementById(\"copy_content\");\n            inputElement.value = copyText;\n            inputElement.select();\n            document.execCommand(\"Copy\");\n\n            _this2.$message({\n              message: \"复制成功\",\n              type: \"success\"\n            });\n          } else {\n            _this2.$message.error(\"复制失败，内容可能为空\");\n          }\n        }\n      }, 300);\n    },\n    // 页面条数切换\n    handleSizeChange: function handleSizeChange(val) {\n      this.pagesize = val;\n      this.getList();\n    },\n    //选择表格当前页数\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.getList();\n    },\n    // 选择改变\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    // 搜索\n    handleSearch: function handleSearch() {\n      this.searchButtonLoading = true;\n      this.getList();\n      thissearchButtonLoading = false;\n    },\n    // 新增\n    handleAdd: function handleAdd() {\n      var _this3 = this;\n\n      addUserInquire().then(function (res) {\n        _this3.permissionList = res.data;\n      });\n      this.addDialogVisible = true;\n    },\n    handleUpdateCheckListChange: function handleUpdateCheckListChange(value) {},\n    // 取消新增\n    handleAddCancel: function handleAddCancel() {\n      this.addDialogVisible = false;\n    },\n    // 验证新增\n    addVerify: function addVerify() {\n      if (this.form.checkList.length === 0) {\n        this.$message.error(\"请选择一项角色\");\n        return false;\n      }\n\n      if (this.form.username == \"\") {\n        this.$message.error(\"请输入用户名\");\n        return false;\n      }\n\n      if (this.form.name == \"\") {\n        this.$message.error(\"请输入姓名\");\n        return false;\n      }\n\n      if (this.form.password == \"\") {\n        this.$message.error(\"请输入密码\");\n        return false;\n      }\n\n      if (this.form.telephone == \"\") {\n        this.$message.error(\"请输入手机号\");\n        return false;\n      }\n\n      return true;\n    },\n    // 确认新增\n    handleAddConfirm: function handleAddConfirm() {\n      var _this4 = this;\n\n      if (!this.addVerify()) return;\n      this.listLoading = true;\n      var username = this.form.username;\n      var name = this.form.name;\n      var password = this.form.password;\n      var telephone = this.form.telephone;\n      var functionId = this.form.checkList.join(\",\");\n      addUser({\n        functionId: functionId,\n        username: username,\n        name: name,\n        password: password,\n        telephone: telephone\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this4.getList();\n\n          _this4.$message({\n            type: \"success\",\n            message: \"添加用户成功\"\n          });\n        } else {\n          _this4.$message.error(\"添加失败\");\n        }\n      }).catch(function (error) {});\n      this.listLoading = false;\n      this.addDialogVisible = false;\n    },\n    // 全选\n    handleCheckAllChange: function handleCheckAllChange(val) {\n      var allCheckList = [];\n      this.permissionList.forEach(function (item) {\n        allCheckList.push(item.id);\n      });\n      val ? this.form.checkList = allCheckList : this.form.checkList = [];\n      this.isIndeterminate = false;\n    },\n    // 选择改变时\n    handleCheckedCitiesChange: function handleCheckedCitiesChange(val) {\n      var allCheckList = [];\n      this.permissionList.forEach(function (item) {\n        allCheckList.push(item.id);\n      });\n      var checkedCount = val.length;\n      this.checkAll = checkedCount === this.form.checkList.length;\n      this.isIndeterminate = checkedCount != allCheckList.length;\n    },\n    // 更新\n    handleUpdata: function handleUpdata(rows) {\n      var _this5 = this;\n\n      updateUserInquired({\n        id: rows.id\n      }).then(function (res) {\n        _this5.updatePermissionList = res.data.roleList;\n        _this5.updateForm.checkList = res.data.roles;\n        _this5.updateForm.username = res.data.user.username;\n        _this5.updateForm.name = res.data.user.name;\n        _this5.updateForm.telephone = res.data.user.telephone;\n        _this5.updateForm.password = res.data.user.password;\n        _this5.updateForm.mode = res.data.user.mode;\n        _this5.updateId = rows.id;\n        _this5.updateDialogVisible = true;\n      });\n    },\n    // 取消更新\n    handleUpdateCancel: function handleUpdateCancel() {\n      this.updateDialogVisible = false;\n    },\n    // 验证更新\n    updateVerify: function updateVerify() {\n      if (this.updateForm.checkList.length === 0) {\n        this.$message.error(\"请选择一项角色\");\n        return false;\n      }\n\n      if (this.updateForm.username == \"\") {\n        this.$message.error(\"请输入用户名\");\n        return false;\n      }\n\n      if (this.updateForm.name == \"\") {\n        this.$message.error(\"请输入姓名\");\n        return false;\n      }\n\n      if (this.updateForm.password == \"\") {\n        this.$message.error(\"请输入密码\");\n        return false;\n      }\n\n      if (this.updateForm.telephone == \"\") {\n        this.$message.error(\"请输入手机号\");\n        return false;\n      }\n\n      return true;\n    },\n    // 确认更新\n    handleUpdateConfirm: function handleUpdateConfirm() {\n      var _this6 = this;\n\n      if (!this.updateVerify()) {\n        return;\n      }\n\n      this.listLoading = true;\n      var id = this.updateId;\n      var username = this.updateForm.username;\n      var name = this.updateForm.name;\n      var password = this.updateForm.password;\n      var telephone = this.updateForm.telephone;\n      var mode = this.updateForm.mode;\n      var functionId = this.updateForm.checkList.join(\",\");\n      updateUser({\n        id: id,\n        functionId: functionId,\n        username: username,\n        name: name,\n        password: password,\n        telephone: telephone,\n        mode: mode\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this6.getList();\n\n          _this6.$message({\n            type: \"success\",\n            message: \"更新用户成功\"\n          });\n        } else {\n          _this6.$message.error(\"更新失败\");\n        }\n      }).catch(function (error) {});\n      this.listLoading = false;\n      this.updateDialogVisible = false;\n    },\n    // 删除\n    handleDelete: function handleDelete(rows) {\n      var _this7 = this;\n\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this7.listLoading = true;\n        deleteUser({\n          id: rows.id\n        }).then(function (res) {\n          if (res.status === 200) {\n            _this7.getList();\n\n            _this7.$message({\n              type: \"success\",\n              message: \"删除用户成功\"\n            });\n          } else {\n            _this7.$message.error(\"删除失败\");\n          }\n        });\n        _this7.listLoading = false;\n      }).catch(function () {\n        _this7.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    // 批量删除\n    handleDeleteSelect: function handleDeleteSelect() {\n      var _this8 = this;\n\n      this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        if (_this8.multipleSelection.length === 0) {\n          _this8.$message.error(\"未选择数据\");\n\n          return;\n        }\n\n        var ids = [];\n\n        _this8.multipleSelection.forEach(function (selectItem) {\n          ids.push(selectItem.id);\n        });\n\n        var idsStr = ids.join(\",\");\n        deleteSelectUser({\n          ids: idsStr\n        }).then(function (res) {\n          if (res.status === 200) {\n            _this8.getList();\n\n            _this8.$message({\n              type: \"success\",\n              message: \"批量删除用户成功\"\n            });\n          } else {\n            _this8.$message.error(\"删除失败\");\n          }\n        });\n      }).catch(function () {\n        _this8.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n\n    /* 移动端事件 */\n    // 获取数据\n    getMobileList: function getMobileList() {\n      var _this9 = this;\n\n      this.listLoading = true;\n      var searchList = [];\n      var modeStr;\n      var paramObj = {\n        contains: false,\n        page: this.mobileCurrentPage,\n        rows: this.pagesize\n      };\n\n      if (this.usefulMobileValue == \"请选择\") {\n        modeStr = \"\";\n      } else {\n        this.usefulOptions.forEach(function (item) {\n          if (item.label == _this9.usefulMobileValue) {\n            modeStr = item.value;\n          }\n        });\n      }\n\n      this.nameMobileValue != \"\" ? paramObj.name = this.nameMobileValue : \"\";\n      modeStr != \"\" ? paramObj.mode = modeStr : \"\";\n      getUserList(paramObj).then(function (res) {\n        _this9.listTotal = res.data.total;\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var id = tableItem.id,\n              username = tableItem.username,\n              name = tableItem.name,\n              telephone = tableItem.telephone,\n              mode = tableItem.mode;\n          var orderItem = {\n            id: id,\n            username: username,\n            name: name,\n            phoneNumber: telephone,\n            isUseful: mode\n          };\n          searchList.push(orderItem);\n        });\n        _this9.list = searchList;\n      }).catch(function (error) {});\n      setTimeout(function () {\n        _this9.listLoading = false;\n      }, 1000);\n    },\n    // 搜索\n    handleSearchMobile: function handleSearchMobile() {\n      if (!this.mobileSearchShow) {\n        this.mobileSearchShow = !this.mobileSearchShow;\n      }\n    },\n    // 取消搜索\n    handleSearchMobileCancel: function handleSearchMobileCancel() {\n      if (this.mobileSearchShow) {\n        this.mobileSearchShow = !this.mobileSearchShow;\n      }\n    },\n    // 确认搜索\n    handleMobileSearch: function handleMobileSearch() {\n      this.mobileSearchButtonLoading = true;\n      this.getMobileList();\n      this.mobileSearchButtonLoading = false;\n      this.mobileSearchShow = false;\n    },\n    // 清空所选\n    handleSearchMobileClearAll: function handleSearchMobileClearAll() {\n      this.nameMobileValue = \"\";\n      this.usefulMobileValue = \"请选择\";\n    },\n    // 分页器改变\n    handlePageChange: function handlePageChange() {\n      this.getMobileList();\n    },\n    // 限制页面跳转输入框只能输入数字\n    jumpPageInput: function jumpPageInput() {\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\n    },\n    // 跳转指定页面\n    handleJumpPage: function handleJumpPage() {\n      var jumpPage = parseInt(this.pageJumpIndex);\n      if (jumpPage == this.mobileCurrentPage) return;\n\n      if (jumpPage > Math.ceil(this.listTotal / this.pagesize)) {\n        jumpPage = Math.ceil(this.listTotal / this.pagesize);\n      }\n\n      if (jumpPage < 1) {\n        jumpPage = 1;\n      }\n\n      this.pageJumpIndex = jumpPage;\n      this.mobileCurrentPage = jumpPage;\n      this.getMobileList();\n    },\n    // 是否可用\n    handleChooseUseful: function handleChooseUseful() {\n      if (!this.mobileUsefulPickerShow) {\n        this.mobileUsefulPickerShow = true;\n      }\n    },\n    // 确认是否可用\n    usefulPickerConfirm: function usefulPickerConfirm(res) {\n      if (this.mobileUsefulPickerShow) {\n        this.usefulMobileValue = res;\n        this.mobileUsefulPickerShow = !this.mobileUsefulPickerShow;\n      }\n    }\n  }\n};",null]}