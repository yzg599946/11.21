{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\login\\index.vue","mtime":1560408912508},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560408886518},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":1560408885129},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560408886518},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1560408911134}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _timers = require(\"timers\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"Login\",\n  data: function data() {\n    // const validateUsername = (rule, value, callback) => {\n    //   if (!validUsername(value)) {\n    //     callback(new Error(\"请输入正确的用户名\"));\n    //   } else {\n    //     callback();\n    //   }\n    // };\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error(\"密码至少6位数\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        verifycode: \"\"\n      },\n      loginRules: {\n        // username: [\n        //   { required: true, trigger: \"blur\", validator: validateUsername }\n        // ],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          validator: validatePassword\n        }],\n        verifycode: [{}]\n      },\n      loading: false,\n      passwordType: \"password\",\n      redirect: undefined,\n      timecount: 60,\n      verifyButtonText: \"获取验证码\",\n      verifycodeLoad: false\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    showPwd: function showPwd() {\n      var _this = this;\n\n      if (this.passwordType === \"password\") {\n        this.passwordType = \"\";\n      } else {\n        this.passwordType = \"password\";\n      }\n\n      this.$nextTick(function () {\n        _this.$refs.password.focus();\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n\n          _this2.$store.dispatch(\"user/login\", _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.redirect || \"/\"\n            });\n\n            _this2.loading = false;\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        } else {\n          console.log(\"出错了!!\");\n          return false;\n        }\n      });\n    },\n    handleGetVerifyCode: function handleGetVerifyCode() {\n      this.verifyButtonText = this.timecount + \"秒后重新获取\";\n      this.timecount = this.timecount - 1;\n\n      if (this.timecount == 0) {\n        this.verifyButtonText = \"点击重新获取\";\n        this.timecount = 60;\n        return;\n      }\n\n      setTimeout(this.handleGetVerifyCode, 1000);\n    }\n  }\n};\nexports.default = _default;",null]}