{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\composite\\channel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\src\\views\\composite\\channel.vue","mtime":1562835483758},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\yet\\project\\longhuiteng_management_system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\yet\\\\project\\\\longhuiteng_management_system\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"vant/es/search/style\");\n\nvar _search = _interopRequireDefault(require(\"vant/es/search\"));\n\nrequire(\"vant/es/action-sheet/style\");\n\nvar _actionSheet = _interopRequireDefault(require(\"vant/es/action-sheet\"));\n\nrequire(\"vant/es/toast/style\");\n\nvar _toast = _interopRequireDefault(require(\"vant/es/toast\"));\n\nrequire(\"vant/es/icon/style\");\n\nvar _icon = _interopRequireDefault(require(\"vant/es/icon\"));\n\nrequire(\"vant/es/field/style\");\n\nvar _field = _interopRequireDefault(require(\"vant/es/field\"));\n\nrequire(\"vant/es/picker/style\");\n\nvar _picker = _interopRequireDefault(require(\"vant/es/picker\"));\n\nrequire(\"vant/es/datetime-picker/style\");\n\nvar _datetimePicker = _interopRequireDefault(require(\"vant/es/datetime-picker\"));\n\nrequire(\"vant/es/cell-group/style\");\n\nvar _cellGroup = _interopRequireDefault(require(\"vant/es/cell-group\"));\n\nrequire(\"vant/es/cell/style\");\n\nvar _cell = _interopRequireDefault(require(\"vant/es/cell\"));\n\nrequire(\"vant/es/nav-bar/style\");\n\nvar _navBar = _interopRequireDefault(require(\"vant/es/nav-bar\"));\n\nrequire(\"vant/es/popup/style\");\n\nvar _popup = _interopRequireDefault(require(\"vant/es/popup\"));\n\nrequire(\"vant/es/button/style\");\n\nvar _button = _interopRequireDefault(require(\"vant/es/button\"));\n\nrequire(\"vant/es/pagination/style\");\n\nvar _pagination = _interopRequireDefault(require(\"vant/es/pagination\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _orderList = require(\"@/api/orderList\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n_vue.default.use(_pagination.default);\n\n_vue.default.use(_button.default);\n\n_vue.default.use(_popup.default);\n\n_vue.default.use(_navBar.default);\n\n_vue.default.use(_cell.default);\n\n_vue.default.use(_cellGroup.default);\n\n_vue.default.use(_datetimePicker.default);\n\n_vue.default.use(_picker.default);\n\n_vue.default.use(_field.default);\n\n_vue.default.use(_icon.default);\n\n_vue.default.use(_toast.default);\n\n_vue.default.use(_actionSheet.default);\n\n_vue.default.use(_search.default);\n\nvar _default = {\n  name: \"composite-channel\",\n  data: function data() {\n    return {\n      list: [],\n      nameInput: \"\",\n      formLabelWidth: \"120px\",\n      currentPage: 1,\n      //当前页\n      mobileCurrentPage: 1,\n      pagesizes: [50, 100, 200],\n      //单页最大显示条数\n      pagesize: 50,\n      //单页内条数\n      listTotal: 0,\n      //总数\n      device: \"\",\n      mobileSearchShow: false,\n      mobileSearchButtonLoading: false,\n      listLoading: false,\n      channelOptions: [],\n      editDialogVisible: false,\n      UpdateDialogVisible: false,\n      deleteDialogVisible: false,\n      deleteSelectDialogVisible: false,\n      form: {\n        parentChannel: \"\",\n        channelName: \"\"\n      },\n      updateForm: {\n        id: \"\",\n        name: \"\"\n      },\n      pageJumpIndex: 1,\n      nameMobileValue: \"\",\n      tableMaxHeight: 0,\n      multipleSelection: [],\n      deleteId: \"\",\n      deleteName: \"\",\n      idsStr: \"\",\n      namesStr: \"\",\n      childrenList: false,\n      childrenRow: {}\n    };\n  },\n  created: function created() {\n    this.getList();\n    this.device = this.$store.state.app.device;\n    this.getChannel();\n    this.getHeight();\n  },\n  computed: {\n    deviceVal: function deviceVal() {\n      return this.$store.state.app.device;\n    }\n  },\n  watch: {\n    deviceVal: function deviceVal(newVal, oldVal) {\n      this.device = newVal;\n    }\n  },\n  methods: {\n    // 获取数据\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      var orderList = [];\n      var paramsObj = {\n        contains: false,\n        page: this.currentPage,\n        rows: this.pagesize\n      };\n      this.nameInput != \"\" ? paramsObj.name = this.nameInput : \"\";\n      (0, _orderList.getAllChannelList)(paramsObj).then(function (res) {\n        _this.listTotal = res.data.total;\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var id = tableItem.id,\n              name = tableItem.name;\n          var orderItem = {\n            id: id,\n            name: name\n          };\n          orderList.push(orderItem);\n        });\n        _this.list = orderList;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      setTimeout(function () {\n        _this.listLoading = false;\n      }, 1000);\n    },\n    // 获取渠道列表\n    getChannel: function getChannel() {\n      var _this2 = this;\n\n      (0, _orderList.getChannelList)().then(function (res) {\n        var channelList = res.data;\n        channelList.forEach(function (channelItem) {\n          var channelObject = {\n            value: channelItem.id,\n            label: channelItem.name\n          };\n\n          _this2.channelOptions.push(channelObject);\n        });\n      });\n    },\n    // 表格高度自适应\n    getHeight: function getHeight() {\n      var otherHeight = this.device == \"desktop\" ? 250 : 200;\n      this.tableMaxHeight = window.innerHeight - otherHeight;\n    },\n    // 选择表格尺寸\n    handleSizeChange: function handleSizeChange(val) {\n      this.pagesize = val;\n\n      if (this.childrenList) {\n        this.getChildrenList();\n      } else {\n        this.getList();\n      }\n    },\n    // 选择表格当前页数\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n\n      if (this.childrenList) {\n        this.getChildrenList();\n      } else {\n        this.getList();\n      }\n    },\n    // 单击复制\n    handleUseful: function handleUseful(row, column, cell, event) {\n      var _this3 = this;\n\n      if (this.device == \"mobile\") return;\n\n      if (this.clickFlag) {\n        clearTimeout(this.clickFlag);\n        this.clickFlag = null;\n      }\n\n      this.clickFlag = setTimeout(function () {\n        var count = 0;\n        if (column.label == undefined) return;\n\n        if (column.label == \"操作\") {\n          _this3.list.forEach(function (item) {\n            if (item.id == row.id) {} else {\n              count++;\n            }\n          });\n        } else {\n          var copyText = event.target.innerText;\n\n          if (copyText != \"\") {\n            var inputElement = document.getElementById(\"copy_content\");\n            inputElement.value = copyText;\n            inputElement.select();\n            document.execCommand(\"Copy\");\n\n            _this3.$message({\n              message: \"复制成功\",\n              type: \"success\"\n            });\n          } else {\n            _this3.$message.error(\"复制失败，内容可能为空\");\n          }\n        }\n      }, 300);\n    },\n    // 单击选择行\n    handleSelect: function handleSelect(rows, column, event) {\n      if (column.label == \"操作\") return;\n      this.$refs.channelTable.toggleRowSelection(rows);\n    },\n    // 选择改变\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    // 获取子渠道\n    getChildrenList: function getChildrenList(row) {\n      var _this4 = this;\n\n      this.listLoading = true;\n      var orderList = [];\n      var _this$childrenRow = this.childrenRow,\n          id = _this$childrenRow.id,\n          name = _this$childrenRow.name;\n      (0, _orderList.getAllChannelList)({\n        parentId: id,\n        contains: false,\n        page: this.currentPage,\n        rows: this.pagesize\n      }).then(function (res) {\n        _this4.listTotal = res.data.total;\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableitem) {\n          var id = tableitem.id,\n              name = tableitem.name;\n          var orderItem = {\n            id: id,\n            name: name\n          };\n          orderList.push(orderItem);\n        });\n        _this4.list = orderList;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      setTimeout(function () {\n        _this4.listLoading = false;\n      }, 1000);\n    },\n    // 双击查看\n    handleChildrenDetail: function handleChildrenDetail(row, column, event) {\n      if (this.childrenList == true) return;\n      this.currentPage = 1;\n      this.childrenRow = row;\n      this.getChildrenList();\n      this.childrenList = true;\n    },\n    // 返回\n    handleReturn: function handleReturn() {\n      this.childrenRow = {};\n      this.childrenList = false;\n      this.getList();\n    },\n    // 搜索\n    handleSearch: function handleSearch() {\n      if (this.nameInput == \"\") {\n        this.$message.error(\"请输入名称\");\n        return;\n      }\n\n      this.getList();\n    },\n    // 新增\n    handleAdd: function handleAdd() {\n      if (!this.editDialogVisible) {\n        this.editDialogVisible = true;\n      }\n    },\n    // 取消新增\n    handleEditCancel: function handleEditCancel() {\n      if (this.editDialogVisible) {\n        this.editDialogVisible = false;\n      }\n    },\n    // 新增验证\n    addChannelVerify: function addChannelVerify() {\n      var _this$form = this.form,\n          channelName = _this$form.channelName,\n          parentChannel = _this$form.parentChannel;\n\n      if (parentChannel == null || parentChannel == \"\") {\n        this.$message.error(\"请选择所属渠道\");\n        return false;\n      }\n\n      if (channelName == \"\") {\n        this.$message.error(\"请填写渠道名\");\n        return false;\n      }\n\n      return true;\n    },\n    // 确认新增\n    handleEditConfirm: function handleEditConfirm() {\n      var _this5 = this;\n\n      if (!this.addChannelVerify()) return;\n      var _this$form2 = this.form,\n          channelName = _this$form2.channelName,\n          parentChannel = _this$form2.parentChannel;\n      (0, _orderList.addChannel)({\n        parentId: parentChannel,\n        name: channelName\n      }).then(function (res) {\n        if (res.status == 200) {\n          _this5.getList();\n\n          _this5.$message({\n            message: \"新增成功\",\n            type: \"success\"\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.editDialogVisible = false;\n    },\n    // 更新\n    handleUpdata: function handleUpdata(row) {\n      if (this.device == \"mobile\") return;\n      this.updateForm.id = row.id;\n      this.updateForm.name = row.name;\n      this.UpdateDialogVisible = true;\n    },\n    // 更新验证\n    updateVerify: function updateVerify() {\n      var _this$updateForm = this.updateForm,\n          id = _this$updateForm.id,\n          name = _this$updateForm.name;\n\n      if (name == null || name == \"\") {\n        this.$message.error(\"请选择渠道\");\n        return false;\n      }\n\n      if (id == \"\") {\n        this.$message.error(\"请输入ID\");\n        return false;\n      }\n\n      return true;\n    },\n    // 确认更新\n    handleUpdateConfirm: function handleUpdateConfirm() {\n      var _this6 = this;\n\n      if (!this.updateVerify()) return;\n      var _this$updateForm2 = this.updateForm,\n          id = _this$updateForm2.id,\n          name = _this$updateForm2.name;\n      (0, _orderList.updateChannel)({\n        id: id,\n        parentId: \"\",\n        name: name\n      }).then(function (res) {\n        if (res.status == 200) {\n          _this6.getList();\n\n          _this6.$message({\n            message: \"更新成功\",\n            type: \"success\"\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.UpdateDialogVisible = false;\n    },\n    // 取消更新\n    handleUpdateCancel: function handleUpdateCancel() {\n      if (this.UpdateDialogVisible) {\n        this.UpdateDialogVisible = false;\n      }\n    },\n    // 删除\n    handleDelete: function handleDelete(row) {\n      this.deleteId = row.id;\n      this.deleteName = row.name;\n\n      if (!this.deleteDialogVisible) {\n        this.deleteDialogVisible = true;\n      }\n    },\n    // 确认删除\n    handleDeleteConfirm: function handleDeleteConfirm() {\n      var _this7 = this;\n\n      (0, _orderList.deleteChannel)({\n        id: this.deleteId\n      }).then(function (res) {\n        if (res.status == 200) {\n          _this7.$message({\n            message: \"删除成功\",\n            type: \"success\"\n          }), _this7.getList();\n        } else {\n          _this7.$message.error(res.msg);\n        }\n\n        _this7.deleteDialogVisible = false;\n      });\n    },\n    // 取消删除\n    handleDeleteCancel: function handleDeleteCancel() {\n      this.deleteId = \"\";\n      this.deleteName = \"\";\n\n      if (this.deleteDialogVisible) {\n        this.deleteDialogVisible = false;\n      }\n    },\n    // 批量删除\n    handleDeleteSelect: function handleDeleteSelect() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.error(\"未选择任何渠道\");\n        return;\n      }\n\n      var ids = [];\n      var names = [];\n      this.multipleSelection.forEach(function (selectItem) {\n        ids.push(selectItem.id);\n        names.push(selectItem.name);\n      });\n      this.idsStr = ids.join(\",\");\n      this.namesStr = names.join(\",\");\n\n      if (!this.deleteSelectDialogVisible) {\n        this.deleteSelectDialogVisible = true;\n      }\n    },\n    // 确认批量删除\n    handleDeleteSelectConfirm: function handleDeleteSelectConfirm() {\n      var _this8 = this;\n\n      (0, _orderList.deleteSelectChannel)({\n        ids: this.idsStr\n      }).then(function (res) {\n        if (res.status == 200) {\n          _this8.$message({\n            message: \"删除成功\",\n            type: \"success\"\n          }), _this8.getList();\n        } else {\n          _this8.$message.error(res.msg);\n        }\n\n        _this8.deleteSelectDialogVisible = false;\n      });\n    },\n    // 取消批量删除\n    handleDeleteSelectCancel: function handleDeleteSelectCancel() {\n      this.idsStr = \"\";\n      this.namesStr = \"\";\n\n      if (!this.deleteSelectDialogVisible) {\n        this.deleteSelectDialogVisible = false;\n      }\n    },\n\n    /* 移动端事件 */\n    // 获取数据\n    getMobileList: function getMobileList() {\n      var _this9 = this;\n\n      this.listLoading = true;\n      var orderList = [];\n      var paramsObj = {\n        contains: false,\n        page: this.mobileCurrentPage,\n        rows: this.pagesize\n      };\n      this.nameMobileValue != \"\" ? paramsObj.name = this.nameMobileValue : \"\";\n      (0, _orderList.getAllChannelList)(paramsObj).then(function (res) {\n        _this9.listTotal = res.data.total;\n        var tableList = res.data.rows;\n        tableList.forEach(function (tableItem) {\n          var id = tableItem.id,\n              name = tableItem.name;\n          var orderItem = {\n            id: id,\n            name: name\n          };\n          orderList.push(orderItem);\n        });\n        _this9.list = orderList;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      setTimeout(function () {\n        _this9.listLoading = false;\n      }, 1000);\n    },\n    //搜索\n    handleSearchMobile: function handleSearchMobile() {\n      if (!this.mobileSearchShow) {\n        this.mobileSearchShow = true;\n      }\n    },\n    //清空\n    handleSearchMobileClearAll: function handleSearchMobileClearAll() {\n      this.nameMobileValue == \"\" ? \"\" : this.nameMobileValue = \"\";\n    },\n    //取消搜索\n    handleSearchMobileCancel: function handleSearchMobileCancel() {\n      if (this.mobileSearchShow) {\n        this.mobileSearchShow = false;\n      }\n    },\n    // 开始搜索\n    handleMobileSearch: function handleMobileSearch() {\n      if (this.nameMobileValue == '') {\n        this.$message.error('请输入名称');\n        return;\n      }\n\n      this.mobileSearchButtonLoading = true;\n      this.getMobileList();\n      this.mobileSearchButtonLoading = false;\n      this.mobileSearchShow = false;\n    },\n    // 分页器\n    handlePageChange: function handlePageChange() {\n      this.getMobileList();\n    },\n    // 限制页面跳转输入框只能输入数字\n    jumpPageInput: function jumpPageInput() {\n      this.pageJumpIndex = this.pageJumpIndex.replace(/[^\\d]/g, \"\");\n    },\n    // 跳转指定页面\n    handleJumpPage: function handleJumpPage() {\n      var jumpPage = parseInt(this.pageJumpIndex);\n      if (jumpPage == this.mobileCurrentPage) return;\n\n      if (jumpPage > Math.ceil(this.listTotal / this.pagesize)) {\n        jumpPage = Math.ceil(this.listTotal / this.pagesize);\n      }\n\n      if (jumpPage < 1) {\n        jumpPage = 1;\n      }\n\n      this.pageJumpIndex = jumpPage;\n      this.mobileCurrentPage = jumpPage;\n      this.getMobileList();\n    }\n  }\n};\nexports.default = _default;",null]}